

================================================================
== Vivado HLS Report for 'circ_buff_read_128'
================================================================
* Date:           Sat Apr  3 20:06:15 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        estream_read
* Solution:       circ_buff_read_128
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   3.33|     2.916|        0.42|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------+-----+-------+---------+
    |   Latency   |   Interval  | Pipeline|
    | min |  max  | min |  max  |   Type  |
    +-----+-------+-----+-------+---------+
    |    1|  98331|    1|  98331|   none  |
    +-----+-------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+-----+-------+----------+-----------+-----------+-----------+----------+
        |                        |   Latency   | Iteration|  Initiation Interval  |    Trip   |          |
        |        Loop Name       | min |  max  |  Latency |  achieved |   target  |   Count   | Pipelined|
        +------------------------+-----+-------+----------+-----------+-----------+-----------+----------+
        |- gmem_read             |    0|  32775|        10|          1|          1| 0 ~ 32767 |    yes   |
        |- fifo_write_decompose  |    0|  65535|         3|          1|          1| 0 ~ 65534 |    yes   |
        +------------------------+-----+-------+----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 33
* Pipeline : 2
  Pipeline-0 : II = 1, D = 10, States = { 12 13 14 15 16 17 18 19 20 21 }
  Pipeline-1 : II = 1, D = 3, States = { 23 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (!tmp)
	33  / (tmp)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / (!tmp_1)
	33  / (tmp_1)
11 --> 
	12  / true
12 --> 
	22  / (!tmp_5)
	13  / (tmp_5)
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	12  / true
22 --> 
	23  / true
23 --> 
	26  / (exitcond_flatten)
	24  / (!exitcond_flatten)
24 --> 
	25  / true
25 --> 
	23  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.18>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%input_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %input_V)"   --->   Operation 34 'read' 'input_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_3 = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %input_V_read, i32 4, i32 31)"   --->   Operation 35 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_10_cast = zext i28 %tmp_3 to i29"   --->   Operation 36 'zext' 'tmp_10_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i128* %gmem_read), !map !107"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %stream_out_V), !map !113"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %reset), !map !117"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @circ_buff_read_128_s) nounwind"   --->   Operation 40 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%data_V = alloca [512 x i128], align 8" [estream_read/c_src/circ_buff_read_128.cpp:37]   --->   Operation 41 'alloca' 'data_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 512> <RAM>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i128* %gmem_read, [6 x i8]* @p_str11, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [10 x i8]* @p_str213, [6 x i8]* @p_str314, [1 x i8]* @p_str112, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:21]   --->   Operation 42 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %input_V, [10 x i8]* @p_str415, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [8 x i8]* @p_str516, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:23]   --->   Operation 43 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %reset, [10 x i8]* @p_str415, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [8 x i8]* @p_str516, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:24]   --->   Operation 44 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str415, i32 0, i32 0, [1 x i8]* @p_str112, i32 0, i32 0, [8 x i8]* @p_str516, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:25]   --->   Operation 45 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %stream_out_V, [5 x i8]* @p_str617, i32 1, i32 1, [5 x i8]* @p_str718, i32 0, i32 0, [11 x i8]* @p_str819, [1 x i8]* @p_str112, [1 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str112, [1 x i8]* @p_str112) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:27]   --->   Operation 46 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (1.00ns)   --->   "%reset_read = call i8 @_ssdm_op_Read.s_axilite.volatile.i8P(i8* %reset)" [estream_read/c_src/circ_buff_read_128.cpp:42]   --->   Operation 47 'read' 'reset_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 48 [1/1] (0.85ns)   --->   "%tmp = icmp eq i8 %reset_read, 1" [estream_read/c_src/circ_buff_read_128.cpp:42]   --->   Operation 48 'icmp' 'tmp' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%stream_tail_V_load = load i9* @stream_tail_V, align 2"   --->   Operation 49 'load' 'stream_tail_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%extLd = zext i9 %stream_tail_V_load to i128"   --->   Operation 50 'zext' 'extLd' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %tmp, label %0, label %1" [estream_read/c_src/circ_buff_read_128.cpp:42]   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (1.15ns)   --->   "%input_V2_sum = add i29 %tmp_10_cast, 513" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 52 'add' 'input_V2_sum' <Predicate = (!tmp)> <Delay = 1.15> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.75ns)   --->   "store i9 0, i9* @stream_tail_V, align 2" [estream_read/c_src/circ_buff_read_128.cpp:44]   --->   Operation 53 'store' <Predicate = (tmp)> <Delay = 0.75>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "br label %6" [estream_read/c_src/circ_buff_read_128.cpp:45]   --->   Operation 54 'br' <Predicate = (tmp)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.91>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%input_V2_sum_cast = zext i29 %input_V2_sum to i64" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 55 'zext' 'input_V2_sum_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%gmem_read_addr = getelementptr i128* %gmem_read, i64 %input_V2_sum_cast" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 56 'getelementptr' 'gmem_read_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [7/7] (2.91ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 57 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 2.91>
ST_3 : Operation 58 [6/7] (2.91ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 58 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 2.91>
ST_4 : Operation 59 [5/7] (2.91ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 59 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 2.91>
ST_5 : Operation 60 [4/7] (2.91ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 60 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 2.91>
ST_6 : Operation 61 [3/7] (2.91ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 61 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 2.91>
ST_7 : Operation 62 [2/7] (2.91ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 62 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 2.91>
ST_8 : Operation 63 [1/7] (2.91ns)   --->   "%stream_head_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 63 'readreq' 'stream_head_V_req' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 2.91>
ST_9 : Operation 64 [1/1] (2.91ns)   --->   "%stream_head_V = call i128 @_ssdm_op_Read.m_axi.volatile.i128P(i128* %gmem_read_addr)" [estream_read/c_src/circ_buff_read_128.cpp:51]   --->   Operation 64 'read' 'stream_head_V' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 1.79>
ST_10 : Operation 65 [1/1] (1.46ns)   --->   "%tmp_1 = icmp eq i128 %extLd, %stream_head_V" [estream_read/c_src/circ_buff_read_128.cpp:53]   --->   Operation 65 'icmp' 'tmp_1' <Predicate = true> <Delay = 1.46> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %.loopexit, label %_ifconv" [estream_read/c_src/circ_buff_read_128.cpp:53]   --->   Operation 66 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 67 [1/1] (1.46ns)   --->   "%tmp_2 = icmp ugt i128 %stream_head_V, %extLd" [estream_read/c_src/circ_buff_read_128.cpp:65]   --->   Operation 67 'icmp' 'tmp_2' <Predicate = (!tmp_1)> <Delay = 1.46> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_6 = trunc i128 %stream_head_V to i16" [estream_read/c_src/circ_buff_read_128.cpp:67]   --->   Operation 68 'trunc' 'tmp_6' <Predicate = (!tmp_1)> <Delay = 0.00>
ST_10 : Operation 69 [1/1] (1.01ns)   --->   "%tmp_8 = add i16 512, %tmp_6" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 69 'add' 'tmp_8' <Predicate = (!tmp_1)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 2.80>
ST_11 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node bytes_read)   --->   "%tmp_4 = zext i9 %stream_tail_V_load to i16" [estream_read/c_src/circ_buff_read_128.cpp:67]   --->   Operation 70 'zext' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node bytes_read)   --->   "%bytes_read2_v = select i1 %tmp_2, i16 %tmp_6, i16 %tmp_8" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 71 'select' 'bytes_read2_v' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 72 [1/1] (1.01ns) (out node of the LUT)   --->   "%bytes_read = sub i16 %bytes_read2_v, %tmp_4" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 72 'sub' 'bytes_read' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 73 [1/1] (0.86ns)   --->   "%tmp_10 = icmp sgt i16 %bytes_read, 0" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 73 'icmp' 'tmp_10' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node tmp_13)   --->   "%tmp_11 = trunc i16 %bytes_read to i9" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 74 'trunc' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node tmp_13)   --->   "%tmp_12 = select i1 %tmp_10, i9 %tmp_11, i9 0" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 75 'select' 'tmp_12' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 76 [1/1] (0.92ns) (out node of the LUT)   --->   "%tmp_13 = add i9 %tmp_12, %stream_tail_V_load" [estream_read/c_src/circ_buff_read_128.cpp:78]   --->   Operation 76 'add' 'tmp_13' <Predicate = true> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_15 = zext i9 %tmp_13 to i128" [estream_read/c_src/circ_buff_read_128.cpp:78]   --->   Operation 77 'zext' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 78 [1/1] (0.75ns)   --->   "br label %2" [estream_read/c_src/circ_buff_read_128.cpp:78]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.75>

State 12 <SV = 11> <Delay = 1.67>
ST_12 : Operation 79 [1/1] (0.00ns)   --->   "%t_V = phi i9 [ %stream_tail_V_load, %_ifconv ], [ %tmp_7, %3 ]" [estream_read/c_src/circ_buff_read_128.cpp:84]   --->   Operation 79 'phi' 't_V' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 80 [1/1] (0.00ns)   --->   "%h = phi i15 [ 0, %_ifconv ], [ %h_1, %3 ]"   --->   Operation 80 'phi' 'h' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 81 [1/1] (0.00ns)   --->   "%h_cast = zext i15 %h to i16" [estream_read/c_src/circ_buff_read_128.cpp:78]   --->   Operation 81 'zext' 'h_cast' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 82 [1/1] (0.86ns)   --->   "%tmp_5 = icmp slt i16 %h_cast, %bytes_read" [estream_read/c_src/circ_buff_read_128.cpp:78]   --->   Operation 82 'icmp' 'tmp_5' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 83 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 32767, i64 0)"   --->   Operation 83 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 84 [1/1] (1.00ns)   --->   "%h_1 = add i15 %h, 1" [estream_read/c_src/circ_buff_read_128.cpp:78]   --->   Operation 84 'add' 'h_1' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 85 [1/1] (0.00ns)   --->   "br i1 %tmp_5, label %3, label %.preheader.preheader" [estream_read/c_src/circ_buff_read_128.cpp:78]   --->   Operation 85 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i9 %t_V to i29" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 86 'zext' 'tmp_6_cast' <Predicate = (tmp_5)> <Delay = 0.00>
ST_12 : Operation 87 [1/1] (1.15ns)   --->   "%input_V2_sum4 = add i29 %tmp_6_cast, %tmp_10_cast" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 87 'add' 'input_V2_sum4' <Predicate = (tmp_5)> <Delay = 1.15> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 88 [1/1] (0.92ns)   --->   "%tmp_7 = add i9 %t_V, 1" [estream_read/c_src/circ_buff_read_128.cpp:84]   --->   Operation 88 'add' 'tmp_7' <Predicate = (tmp_5)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 89 [1/1] (0.75ns)   --->   "store i9 %tmp_7, i9* @stream_tail_V, align 2" [estream_read/c_src/circ_buff_read_128.cpp:85]   --->   Operation 89 'store' <Predicate = (tmp_5)> <Delay = 0.75>

State 13 <SV = 12> <Delay = 2.91>
ST_13 : Operation 90 [1/1] (0.00ns)   --->   "%input_V2_sum4_cast = zext i29 %input_V2_sum4 to i64" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 90 'zext' 'input_V2_sum4_cast' <Predicate = (tmp_5)> <Delay = 0.00>
ST_13 : Operation 91 [1/1] (0.00ns)   --->   "%gmem_read_addr_1 = getelementptr i128* %gmem_read, i64 %input_V2_sum4_cast" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 91 'getelementptr' 'gmem_read_addr_1' <Predicate = (tmp_5)> <Delay = 0.00>
ST_13 : Operation 92 [7/7] (2.91ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 92 'readreq' 'gmem_read_load_req' <Predicate = (tmp_5)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 2.91>
ST_14 : Operation 93 [6/7] (2.91ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 93 'readreq' 'gmem_read_load_req' <Predicate = (tmp_5)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 2.91>
ST_15 : Operation 94 [5/7] (2.91ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 94 'readreq' 'gmem_read_load_req' <Predicate = (tmp_5)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 2.91>
ST_16 : Operation 95 [4/7] (2.91ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 95 'readreq' 'gmem_read_load_req' <Predicate = (tmp_5)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 2.91>
ST_17 : Operation 96 [3/7] (2.91ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 96 'readreq' 'gmem_read_load_req' <Predicate = (tmp_5)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 2.91>
ST_18 : Operation 97 [2/7] (2.91ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 97 'readreq' 'gmem_read_load_req' <Predicate = (tmp_5)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 2.91>
ST_19 : Operation 98 [1/7] (2.91ns)   --->   "%gmem_read_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_read_addr_1, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 98 'readreq' 'gmem_read_load_req' <Predicate = (tmp_5)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 2.91>
ST_20 : Operation 99 [1/1] (2.91ns)   --->   "%gmem_read_addr_1_rea = call i128 @_ssdm_op_Read.m_axi.volatile.i128P(i128* %gmem_read_addr_1)" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 99 'read' 'gmem_read_addr_1_rea' <Predicate = (tmp_5)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 1.35>
ST_21 : Operation 100 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str213) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:79]   --->   Operation 100 'specloopname' <Predicate = (tmp_5)> <Delay = 0.00>
ST_21 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str213)" [estream_read/c_src/circ_buff_read_128.cpp:79]   --->   Operation 101 'specregionbegin' 'tmp_s' <Predicate = (tmp_5)> <Delay = 0.00>
ST_21 : Operation 102 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str112) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:80]   --->   Operation 102 'specpipeline' <Predicate = (tmp_5)> <Delay = 0.00>
ST_21 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_9 = zext i15 %h to i64" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 103 'zext' 'tmp_9' <Predicate = (tmp_5)> <Delay = 0.00>
ST_21 : Operation 104 [1/1] (0.00ns)   --->   "%data_V_addr = getelementptr [512 x i128]* %data_V, i64 0, i64 %tmp_9" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 104 'getelementptr' 'data_V_addr' <Predicate = (tmp_5)> <Delay = 0.00>
ST_21 : Operation 105 [1/1] (1.35ns)   --->   "store i128 %gmem_read_addr_1_rea, i128* %data_V_addr, align 16" [estream_read/c_src/circ_buff_read_128.cpp:82]   --->   Operation 105 'store' <Predicate = (tmp_5)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 512> <RAM>
ST_21 : Operation 106 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str213, i32 %tmp_s)" [estream_read/c_src/circ_buff_read_128.cpp:86]   --->   Operation 106 'specregionend' 'empty_7' <Predicate = (tmp_5)> <Delay = 0.00>
ST_21 : Operation 107 [1/1] (0.00ns)   --->   "br label %2" [estream_read/c_src/circ_buff_read_128.cpp:78]   --->   Operation 107 'br' <Predicate = (tmp_5)> <Delay = 0.00>

State 22 <SV = 12> <Delay = 0.75>
ST_22 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_16 = call i17 @_ssdm_op_BitConcatenate.i17.i16.i1(i16 %bytes_read, i1 false)" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 108 'bitconcatenate' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 109 [1/1] (0.75ns)   --->   "br label %4" [estream_read/c_src/circ_buff_read_128.cpp:88]   --->   Operation 109 'br' <Predicate = true> <Delay = 0.75>

State 23 <SV = 13> <Delay = 2.83>
ST_23 : Operation 110 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i17 [ 0, %.preheader.preheader ], [ %indvar_flatten_next, %.preheader ]"   --->   Operation 110 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 111 [1/1] (0.00ns)   --->   "%h1 = phi i15 [ 0, %.preheader.preheader ], [ %temp_V_mid2_v, %.preheader ]" [estream_read/c_src/circ_buff_read_128.cpp:90]   --->   Operation 111 'phi' 'h1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 112 [1/1] (0.00ns)   --->   "%t_V_1 = phi i2 [ 0, %.preheader.preheader ], [ %word_V, %.preheader ]"   --->   Operation 112 'phi' 't_V_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 113 [1/1] (0.88ns)   --->   "%exitcond_flatten = icmp eq i17 %indvar_flatten, %tmp_16" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 113 'icmp' 'exitcond_flatten' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 114 [1/1] (1.02ns)   --->   "%indvar_flatten_next = add i17 %indvar_flatten, 1"   --->   Operation 114 'add' 'indvar_flatten_next' <Predicate = true> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 115 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %5, label %.preheader" [estream_read/c_src/circ_buff_read_128.cpp:74]   --->   Operation 115 'br' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 116 [1/1] (0.51ns)   --->   "%tmp_17 = icmp eq i2 %t_V_1, -2" [estream_read/c_src/circ_buff_read_128.cpp:91]   --->   Operation 116 'icmp' 'tmp_17' <Predicate = (!exitcond_flatten)> <Delay = 0.51> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 117 [1/1] (0.26ns)   --->   "%t_V_1_mid2 = select i1 %tmp_17, i2 0, i2 %t_V_1" [estream_read/c_src/circ_buff_read_128.cpp:91]   --->   Operation 117 'select' 't_V_1_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.26> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 118 [1/1] (1.00ns)   --->   "%h_s = add i15 1, %h1" [estream_read/c_src/circ_buff_read_128.cpp:88]   --->   Operation 118 'add' 'h_s' <Predicate = (!exitcond_flatten)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 119 [1/1] (0.48ns)   --->   "%temp_V_mid2_v = select i1 %tmp_17, i15 %h_s, i15 %h1" [estream_read/c_src/circ_buff_read_128.cpp:90]   --->   Operation 119 'select' 'temp_V_mid2_v' <Predicate = (!exitcond_flatten)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 120 [1/1] (0.00ns)   --->   "%temp_V_mid2 = zext i15 %temp_V_mid2_v to i64" [estream_read/c_src/circ_buff_read_128.cpp:90]   --->   Operation 120 'zext' 'temp_V_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_23 : Operation 121 [1/1] (0.00ns)   --->   "%data_V_addr_1 = getelementptr [512 x i128]* %data_V, i64 0, i64 %temp_V_mid2" [estream_read/c_src/circ_buff_read_128.cpp:90]   --->   Operation 121 'getelementptr' 'data_V_addr_1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_23 : Operation 122 [2/2] (1.35ns)   --->   "%data_V_load = load i128* %data_V_addr_1, align 8" [estream_read/c_src/circ_buff_read_128.cpp:90]   --->   Operation 122 'load' 'data_V_load' <Predicate = (!exitcond_flatten)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 512> <RAM>
ST_23 : Operation 123 [1/1] (0.51ns)   --->   "%cond = icmp eq i2 %t_V_1_mid2, 0" [estream_read/c_src/circ_buff_read_128.cpp:94]   --->   Operation 123 'icmp' 'cond' <Predicate = (!exitcond_flatten)> <Delay = 0.51> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 124 [1/1] (0.62ns)   --->   "%word_V = add i2 1, %t_V_1_mid2" [estream_read/c_src/circ_buff_read_128.cpp:91]   --->   Operation 124 'add' 'word_V' <Predicate = (!exitcond_flatten)> <Delay = 0.62> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 14> <Delay = 1.85>
ST_24 : Operation 125 [1/2] (1.35ns)   --->   "%data_V_load = load i128* %data_V_addr_1, align 8" [estream_read/c_src/circ_buff_read_128.cpp:90]   --->   Operation 125 'load' 'data_V_load' <Predicate = (!exitcond_flatten)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 512> <RAM>
ST_24 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_18 = trunc i128 %data_V_load to i64" [estream_read/c_src/circ_buff_read_128.cpp:90]   --->   Operation 126 'trunc' 'tmp_18' <Predicate = (!exitcond_flatten & cond)> <Delay = 0.00>
ST_24 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_19 = call i64 @_ssdm_op_PartSelect.i64.i128.i32.i32(i128 %data_V_load, i32 32, i32 95)" [estream_read/c_src/circ_buff_read_128.cpp:90]   --->   Operation 127 'partselect' 'tmp_19' <Predicate = (!exitcond_flatten & !cond)> <Delay = 0.00>
ST_24 : Operation 128 [1/1] (0.49ns)   --->   "%tmp_20 = select i1 %cond, i64 %tmp_18, i64 %tmp_19" [estream_read/c_src/circ_buff_read_128.cpp:94]   --->   Operation 128 'select' 'tmp_20' <Predicate = (!exitcond_flatten)> <Delay = 0.49> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 129 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %stream_out_V, i64 %tmp_20)" [estream_read/c_src/circ_buff_read_128.cpp:95]   --->   Operation 129 'write' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 25 <SV = 15> <Delay = 0.00>
ST_25 : Operation 130 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @fifo_write_decompose)"   --->   Operation 130 'specloopname' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 131 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str1021) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:92]   --->   Operation 131 'specloopname' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_14 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str1021)" [estream_read/c_src/circ_buff_read_128.cpp:92]   --->   Operation 132 'specregionbegin' 'tmp_14' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str112) nounwind" [estream_read/c_src/circ_buff_read_128.cpp:93]   --->   Operation 133 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 134 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i64P(i64* %stream_out_V, i64 %tmp_20)" [estream_read/c_src/circ_buff_read_128.cpp:95]   --->   Operation 134 'write' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_25 : Operation 135 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str1021, i32 %tmp_14)" [estream_read/c_src/circ_buff_read_128.cpp:96]   --->   Operation 135 'specregionend' 'empty_8' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 136 [1/1] (0.00ns)   --->   "br label %4"   --->   Operation 136 'br' <Predicate = (!exitcond_flatten)> <Delay = 0.00>

State 26 <SV = 14> <Delay = 1.15>
ST_26 : Operation 137 [1/1] (1.15ns)   --->   "%input_V2_sum3 = add i29 %tmp_10_cast, 512" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 137 'add' 'input_V2_sum3' <Predicate = true> <Delay = 1.15> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 15> <Delay = 2.91>
ST_27 : Operation 138 [1/1] (0.00ns)   --->   "%input_V2_sum3_cast = zext i29 %input_V2_sum3 to i64" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 138 'zext' 'input_V2_sum3_cast' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 139 [1/1] (0.00ns)   --->   "%gmem_read_addr_2 = getelementptr i128* %gmem_read, i64 %input_V2_sum3_cast" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 139 'getelementptr' 'gmem_read_addr_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 140 [1/1] (2.91ns)   --->   "%gmem_read_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i128P(i128* %gmem_read_addr_2, i32 1)" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 140 'writereq' 'gmem_read_addr_2_req' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 16> <Delay = 2.91>
ST_28 : Operation 141 [1/1] (2.91ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i128P(i128* %gmem_read_addr_2, i128 %tmp_15, i16 -1)" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 141 'write' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 17> <Delay = 2.91>
ST_29 : Operation 142 [5/5] (2.91ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 142 'writeresp' 'gmem_read_addr_2_res' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 18> <Delay = 2.91>
ST_30 : Operation 143 [4/5] (2.91ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 143 'writeresp' 'gmem_read_addr_2_res' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 19> <Delay = 2.91>
ST_31 : Operation 144 [3/5] (2.91ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 144 'writeresp' 'gmem_read_addr_2_res' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 20> <Delay = 2.91>
ST_32 : Operation 145 [2/5] (2.91ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 145 'writeresp' 'gmem_read_addr_2_res' <Predicate = true> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 21> <Delay = 2.91>
ST_33 : Operation 146 [1/5] (2.91ns)   --->   "%gmem_read_addr_2_res = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_read_addr_2)" [estream_read/c_src/circ_buff_read_128.cpp:101]   --->   Operation 146 'writeresp' 'gmem_read_addr_2_res' <Predicate = (!tmp & !tmp_1)> <Delay = 2.91> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_33 : Operation 147 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 147 'br' <Predicate = (!tmp & !tmp_1)> <Delay = 0.00>
ST_33 : Operation 148 [1/1] (0.00ns)   --->   "br label %6"   --->   Operation 148 'br' <Predicate = (!tmp)> <Delay = 0.00>
ST_33 : Operation 149 [1/1] (0.00ns)   --->   "ret void" [estream_read/c_src/circ_buff_read_128.cpp:104]   --->   Operation 149 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.33ns, clock uncertainty: 0.417ns.

 <State 1>: 2.19ns
The critical path consists of the following:
	s_axi read on port 'input_V' [6]  (1 ns)
	'add' operation ('input_V2_sum', estream_read/c_src/circ_buff_read_128.cpp:51) [25]  (1.16 ns)
	blocking operation 0.0307 ns on control path)

 <State 2>: 2.92ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_read_addr', estream_read/c_src/circ_buff_read_128.cpp:51) [27]  (0 ns)
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:51) [28]  (2.92 ns)

 <State 3>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:51) [28]  (2.92 ns)

 <State 4>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:51) [28]  (2.92 ns)

 <State 5>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:51) [28]  (2.92 ns)

 <State 6>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:51) [28]  (2.92 ns)

 <State 7>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:51) [28]  (2.92 ns)

 <State 8>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:51) [28]  (2.92 ns)

 <State 9>: 2.92ns
The critical path consists of the following:
	bus read on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:51) [29]  (2.92 ns)

 <State 10>: 1.79ns
The critical path consists of the following:
	'icmp' operation ('tmp_1', estream_read/c_src/circ_buff_read_128.cpp:53) [30]  (1.46 ns)
	blocking operation 0.331 ns on control path)

 <State 11>: 2.8ns
The critical path consists of the following:
	'sub' operation ('bytes_read', estream_read/c_src/circ_buff_read_128.cpp:74) [38]  (1.02 ns)
	'icmp' operation ('tmp_10', estream_read/c_src/circ_buff_read_128.cpp:74) [39]  (0.866 ns)
	'select' operation ('tmp_12', estream_read/c_src/circ_buff_read_128.cpp:74) [41]  (0 ns)
	'add' operation ('tmp_13', estream_read/c_src/circ_buff_read_128.cpp:78) [42]  (0.921 ns)

 <State 12>: 1.68ns
The critical path consists of the following:
	'phi' operation ('t.V', estream_read/c_src/circ_buff_read_128.cpp:84) with incoming values : ('stream_tail_V_load') ('tmp_7', estream_read/c_src/circ_buff_read_128.cpp:84) [46]  (0 ns)
	'add' operation ('tmp_7', estream_read/c_src/circ_buff_read_128.cpp:84) [66]  (0.921 ns)
	'store' operation (estream_read/c_src/circ_buff_read_128.cpp:85) of variable 'tmp_7', estream_read/c_src/circ_buff_read_128.cpp:84 on static variable 'stream_tail_V' [67]  (0.755 ns)

 <State 13>: 2.92ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_read_addr_1', estream_read/c_src/circ_buff_read_128.cpp:82) [61]  (0 ns)
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:82) [62]  (2.92 ns)

 <State 14>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:82) [62]  (2.92 ns)

 <State 15>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:82) [62]  (2.92 ns)

 <State 16>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:82) [62]  (2.92 ns)

 <State 17>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:82) [62]  (2.92 ns)

 <State 18>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:82) [62]  (2.92 ns)

 <State 19>: 2.92ns
The critical path consists of the following:
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:82) [62]  (2.92 ns)

 <State 20>: 2.92ns
The critical path consists of the following:
	bus read on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:82) [63]  (2.92 ns)

 <State 21>: 1.35ns
The critical path consists of the following:
	'getelementptr' operation ('data_V_addr', estream_read/c_src/circ_buff_read_128.cpp:82) [64]  (0 ns)
	'store' operation (estream_read/c_src/circ_buff_read_128.cpp:82) of variable 'gmem_read_addr_1_rea', estream_read/c_src/circ_buff_read_128.cpp:82 on array 'data.V', estream_read/c_src/circ_buff_read_128.cpp:37 [65]  (1.35 ns)

 <State 22>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [74]  (0.755 ns)

 <State 23>: 2.84ns
The critical path consists of the following:
	'phi' operation ('h1', estream_read/c_src/circ_buff_read_128.cpp:90) with incoming values : ('temp_V_mid2_v', estream_read/c_src/circ_buff_read_128.cpp:90) [75]  (0 ns)
	'add' operation ('h_s', estream_read/c_src/circ_buff_read_128.cpp:88) [84]  (1 ns)
	'select' operation ('temp_V_mid2_v', estream_read/c_src/circ_buff_read_128.cpp:90) [85]  (0.484 ns)
	'getelementptr' operation ('data_V_addr_1', estream_read/c_src/circ_buff_read_128.cpp:90) [87]  (0 ns)
	'load' operation ('data_V_load', estream_read/c_src/circ_buff_read_128.cpp:90) on array 'data.V', estream_read/c_src/circ_buff_read_128.cpp:37 [88]  (1.35 ns)

 <State 24>: 1.85ns
The critical path consists of the following:
	'load' operation ('data_V_load', estream_read/c_src/circ_buff_read_128.cpp:90) on array 'data.V', estream_read/c_src/circ_buff_read_128.cpp:37 [88]  (1.35 ns)
	'select' operation ('tmp', estream_read/c_src/circ_buff_read_128.cpp:94) [95]  (0.499 ns)

 <State 25>: 0ns
The critical path consists of the following:

 <State 26>: 1.16ns
The critical path consists of the following:
	'add' operation ('input_V2_sum3', estream_read/c_src/circ_buff_read_128.cpp:101) [101]  (1.16 ns)

 <State 27>: 2.92ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_read_addr_2', estream_read/c_src/circ_buff_read_128.cpp:101) [103]  (0 ns)
	bus request on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:101) [104]  (2.92 ns)

 <State 28>: 2.92ns
The critical path consists of the following:
	bus write on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:101) [105]  (2.92 ns)

 <State 29>: 2.92ns
The critical path consists of the following:
	bus access on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:101) [106]  (2.92 ns)

 <State 30>: 2.92ns
The critical path consists of the following:
	bus access on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:101) [106]  (2.92 ns)

 <State 31>: 2.92ns
The critical path consists of the following:
	bus access on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:101) [106]  (2.92 ns)

 <State 32>: 2.92ns
The critical path consists of the following:
	bus access on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:101) [106]  (2.92 ns)

 <State 33>: 2.92ns
The critical path consists of the following:
	bus access on port 'gmem_read' (estream_read/c_src/circ_buff_read_128.cpp:101) [106]  (2.92 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
