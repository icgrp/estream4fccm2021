// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _circ_buff_read_128_HH_
#define _circ_buff_read_128_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "circ_buff_read_128_data_V.h"
#include "circ_buff_read_128_control_s_axi.h"
#include "circ_buff_read_128_gmem_read_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_READ_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_READ_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_READ_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_READ_DATA_WIDTH = 128,
         unsigned int C_M_AXI_GMEM_READ_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_READ_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_READ_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_READ_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct circ_buff_read_128 : public sc_module {
    // Port declarations 68
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_read_AWVALID;
    sc_in< sc_logic > m_axi_gmem_read_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_ADDR_WIDTH> > m_axi_gmem_read_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_ID_WIDTH> > m_axi_gmem_read_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_read_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_read_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_read_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_read_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_read_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_read_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_read_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_read_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_AWUSER_WIDTH> > m_axi_gmem_read_AWUSER;
    sc_out< sc_logic > m_axi_gmem_read_WVALID;
    sc_in< sc_logic > m_axi_gmem_read_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_DATA_WIDTH> > m_axi_gmem_read_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_DATA_WIDTH/8> > m_axi_gmem_read_WSTRB;
    sc_out< sc_logic > m_axi_gmem_read_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_ID_WIDTH> > m_axi_gmem_read_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_WUSER_WIDTH> > m_axi_gmem_read_WUSER;
    sc_out< sc_logic > m_axi_gmem_read_ARVALID;
    sc_in< sc_logic > m_axi_gmem_read_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_ADDR_WIDTH> > m_axi_gmem_read_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_ID_WIDTH> > m_axi_gmem_read_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_read_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_read_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_read_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_read_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_read_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_read_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_read_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_read_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_READ_ARUSER_WIDTH> > m_axi_gmem_read_ARUSER;
    sc_in< sc_logic > m_axi_gmem_read_RVALID;
    sc_out< sc_logic > m_axi_gmem_read_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_READ_DATA_WIDTH> > m_axi_gmem_read_RDATA;
    sc_in< sc_logic > m_axi_gmem_read_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_READ_ID_WIDTH> > m_axi_gmem_read_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_READ_RUSER_WIDTH> > m_axi_gmem_read_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_read_RRESP;
    sc_in< sc_logic > m_axi_gmem_read_BVALID;
    sc_out< sc_logic > m_axi_gmem_read_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_read_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_READ_ID_WIDTH> > m_axi_gmem_read_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_READ_BUSER_WIDTH> > m_axi_gmem_read_BUSER;
    sc_out< sc_lv<64> > stream_out_V_TDATA;
    sc_out< sc_logic > stream_out_V_TVALID;
    sc_in< sc_logic > stream_out_V_TREADY;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<16> > ap_var_for_const7;


    // Module declarations
    circ_buff_read_128(sc_module_name name);
    SC_HAS_PROCESS(circ_buff_read_128);

    ~circ_buff_read_128();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    circ_buff_read_128_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* circ_buff_read_128_control_s_axi_U;
    circ_buff_read_128_gmem_read_m_axi<0,128,32,5,16,16,16,16,C_M_AXI_GMEM_READ_ID_WIDTH,C_M_AXI_GMEM_READ_ADDR_WIDTH,C_M_AXI_GMEM_READ_DATA_WIDTH,C_M_AXI_GMEM_READ_AWUSER_WIDTH,C_M_AXI_GMEM_READ_ARUSER_WIDTH,C_M_AXI_GMEM_READ_WUSER_WIDTH,C_M_AXI_GMEM_READ_RUSER_WIDTH,C_M_AXI_GMEM_READ_BUSER_WIDTH,C_M_AXI_GMEM_READ_USER_VALUE,C_M_AXI_GMEM_READ_PROT_VALUE,C_M_AXI_GMEM_READ_CACHE_VALUE>* circ_buff_read_128_gmem_read_m_axi_U;
    circ_buff_read_128_data_V* data_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<22> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > input_V;
    sc_signal< sc_lv<64> > stream_out_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_1_ack_out;
    sc_signal< sc_lv<64> > stream_out_V_1_payload_A;
    sc_signal< sc_lv<64> > stream_out_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_1_sel;
    sc_signal< sc_logic > stream_out_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_1_state;
    sc_signal< sc_logic > stream_out_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > reset;
    sc_signal< sc_lv<9> > stream_tail_V;
    sc_signal< sc_logic > gmem_read_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > gmem_read_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_5_reg_590;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_lv<1> > tmp_5_reg_590_pp0_iter7_reg;
    sc_signal< sc_logic > gmem_read_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > gmem_read_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > gmem_read_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_lv<1> > tmp_reg_525;
    sc_signal< sc_lv<1> > tmp_1_reg_560;
    sc_signal< sc_logic > stream_out_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_625;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_625_pp1_iter1_reg;
    sc_signal< sc_logic > gmem_read_AWVALID;
    sc_signal< sc_logic > gmem_read_AWREADY;
    sc_signal< sc_lv<32> > gmem_read_AWADDR;
    sc_signal< sc_logic > gmem_read_WVALID;
    sc_signal< sc_logic > gmem_read_WREADY;
    sc_signal< sc_logic > gmem_read_ARVALID;
    sc_signal< sc_logic > gmem_read_ARREADY;
    sc_signal< sc_lv<32> > gmem_read_ARADDR;
    sc_signal< sc_logic > gmem_read_RVALID;
    sc_signal< sc_logic > gmem_read_RREADY;
    sc_signal< sc_lv<128> > gmem_read_RDATA;
    sc_signal< sc_logic > gmem_read_RLAST;
    sc_signal< sc_lv<1> > gmem_read_RID;
    sc_signal< sc_lv<1> > gmem_read_RUSER;
    sc_signal< sc_lv<2> > gmem_read_RRESP;
    sc_signal< sc_logic > gmem_read_BVALID;
    sc_signal< sc_logic > gmem_read_BREADY;
    sc_signal< sc_lv<2> > gmem_read_BRESP;
    sc_signal< sc_lv<1> > gmem_read_BID;
    sc_signal< sc_lv<1> > gmem_read_BUSER;
    sc_signal< sc_lv<9> > t_V_reg_206;
    sc_signal< sc_lv<15> > h_reg_215;
    sc_signal< sc_lv<15> > h_reg_215_pp0_iter1_reg;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_read_ARREADY;
    sc_signal< bool > ap_block_state13_io;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter9;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<15> > h_reg_215_pp0_iter2_reg;
    sc_signal< sc_lv<15> > h_reg_215_pp0_iter3_reg;
    sc_signal< sc_lv<15> > h_reg_215_pp0_iter4_reg;
    sc_signal< sc_lv<15> > h_reg_215_pp0_iter5_reg;
    sc_signal< sc_lv<15> > h_reg_215_pp0_iter6_reg;
    sc_signal< sc_lv<15> > h_reg_215_pp0_iter7_reg;
    sc_signal< sc_lv<15> > h_reg_215_pp0_iter8_reg;
    sc_signal< sc_lv<17> > indvar_flatten_reg_227;
    sc_signal< sc_lv<15> > h1_reg_238;
    sc_signal< sc_lv<2> > t_V_1_reg_249;
    sc_signal< sc_lv<29> > tmp_10_cast_fu_270_p1;
    sc_signal< sc_lv<29> > tmp_10_cast_reg_519;
    sc_signal< sc_lv<1> > tmp_fu_274_p2;
    sc_signal< sc_lv<9> > stream_tail_V_load_reg_529;
    sc_signal< sc_lv<128> > extLd_fu_284_p1;
    sc_signal< sc_lv<128> > extLd_reg_536;
    sc_signal< sc_lv<29> > input_V2_sum_fu_288_p2;
    sc_signal< sc_lv<29> > input_V2_sum_reg_542;
    sc_signal< sc_lv<128> > stream_head_V_reg_553;
    sc_signal< sc_lv<1> > tmp_1_fu_310_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp_2_fu_314_p2;
    sc_signal< sc_lv<1> > tmp_2_reg_564;
    sc_signal< sc_lv<16> > tmp_6_fu_318_p1;
    sc_signal< sc_lv<16> > tmp_6_reg_569;
    sc_signal< sc_lv<16> > tmp_8_fu_321_p2;
    sc_signal< sc_lv<16> > tmp_8_reg_574;
    sc_signal< sc_lv<16> > bytes_read_fu_335_p2;
    sc_signal< sc_lv<16> > bytes_read_reg_579;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<128> > tmp_15_fu_364_p1;
    sc_signal< sc_lv<128> > tmp_15_reg_585;
    sc_signal< sc_lv<1> > tmp_5_fu_372_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_590_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_5_reg_590_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_5_reg_590_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_5_reg_590_pp0_iter4_reg;
    sc_signal< sc_lv<1> > tmp_5_reg_590_pp0_iter5_reg;
    sc_signal< sc_lv<1> > tmp_5_reg_590_pp0_iter6_reg;
    sc_signal< sc_lv<1> > tmp_5_reg_590_pp0_iter8_reg;
    sc_signal< sc_lv<15> > h_1_fu_377_p2;
    sc_signal< sc_lv<15> > h_1_reg_594;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<29> > input_V2_sum4_fu_387_p2;
    sc_signal< sc_lv<29> > input_V2_sum4_reg_599;
    sc_signal< sc_lv<9> > tmp_7_fu_392_p2;
    sc_signal< sc_lv<9> > tmp_7_reg_604;
    sc_signal< sc_lv<128> > gmem_read_addr_1_rea_reg_615;
    sc_signal< sc_lv<17> > tmp_16_fu_419_p3;
    sc_signal< sc_lv<17> > tmp_16_reg_620;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_426_p2;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state24_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state24_io;
    sc_signal< bool > ap_block_state25_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state25_io;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<17> > indvar_flatten_next_fu_431_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<15> > temp_V_mid2_v_fu_457_p3;
    sc_signal< sc_lv<15> > temp_V_mid2_v_reg_634;
    sc_signal< sc_lv<1> > cond_fu_470_p2;
    sc_signal< sc_lv<1> > cond_reg_644;
    sc_signal< sc_lv<2> > word_V_fu_476_p2;
    sc_signal< sc_lv<64> > tmp_20_fu_496_p3;
    sc_signal< sc_lv<29> > input_V2_sum3_fu_504_p2;
    sc_signal< sc_lv<29> > input_V2_sum3_reg_659;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_read_AWREADY;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state23;
    sc_signal< sc_lv<9> > data_V_address0;
    sc_signal< sc_logic > data_V_ce0;
    sc_signal< sc_logic > data_V_we0;
    sc_signal< sc_lv<128> > data_V_q0;
    sc_signal< sc_lv<9> > ap_phi_mux_t_V_phi_fu_209_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_h_phi_fu_219_p4;
    sc_signal< sc_lv<15> > ap_phi_mux_h1_phi_fu_242_p4;
    sc_signal< sc_lv<64> > tmp_9_fu_414_p1;
    sc_signal< sc_lv<64> > temp_V_mid2_fu_465_p1;
    sc_signal< sc_lv<64> > input_V2_sum_cast_fu_300_p1;
    sc_signal< sc_lv<64> > input_V2_sum4_cast_fu_404_p1;
    sc_signal< sc_lv<64> > input_V2_sum3_cast_fu_509_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_read_ARREADY;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_read_AWREADY;
    sc_signal< bool > ap_predicate_op146_writeresp_state33;
    sc_signal< bool > ap_block_state33;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_read_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_read_WREADY;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<28> > tmp_3_fu_260_p4;
    sc_signal< sc_lv<16> > bytes_read2_v_fu_330_p3;
    sc_signal< sc_lv<16> > tmp_4_fu_327_p1;
    sc_signal< sc_lv<1> > tmp_10_fu_341_p2;
    sc_signal< sc_lv<9> > tmp_11_fu_347_p1;
    sc_signal< sc_lv<9> > tmp_12_fu_351_p3;
    sc_signal< sc_lv<9> > tmp_13_fu_359_p2;
    sc_signal< sc_lv<16> > h_cast_fu_368_p1;
    sc_signal< sc_lv<29> > tmp_6_cast_fu_383_p1;
    sc_signal< sc_lv<1> > tmp_17_fu_437_p2;
    sc_signal< sc_lv<15> > h_s_fu_451_p2;
    sc_signal< sc_lv<2> > t_V_1_mid2_fu_443_p3;
    sc_signal< sc_lv<64> > tmp_18_fu_482_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_486_p4;
    sc_signal< sc_lv<22> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_613;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<22> ap_ST_fsm_state1;
    static const sc_lv<22> ap_ST_fsm_state2;
    static const sc_lv<22> ap_ST_fsm_state3;
    static const sc_lv<22> ap_ST_fsm_state4;
    static const sc_lv<22> ap_ST_fsm_state5;
    static const sc_lv<22> ap_ST_fsm_state6;
    static const sc_lv<22> ap_ST_fsm_state7;
    static const sc_lv<22> ap_ST_fsm_state8;
    static const sc_lv<22> ap_ST_fsm_state9;
    static const sc_lv<22> ap_ST_fsm_state10;
    static const sc_lv<22> ap_ST_fsm_state11;
    static const sc_lv<22> ap_ST_fsm_pp0_stage0;
    static const sc_lv<22> ap_ST_fsm_state22;
    static const sc_lv<22> ap_ST_fsm_pp1_stage0;
    static const sc_lv<22> ap_ST_fsm_state26;
    static const sc_lv<22> ap_ST_fsm_state27;
    static const sc_lv<22> ap_ST_fsm_state28;
    static const sc_lv<22> ap_ST_fsm_state29;
    static const sc_lv<22> ap_ST_fsm_state30;
    static const sc_lv<22> ap_ST_fsm_state31;
    static const sc_lv<22> ap_ST_fsm_state32;
    static const sc_lv<22> ap_ST_fsm_state33;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_D;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_READ_USER_VALUE;
    static const int C_M_AXI_GMEM_READ_PROT_VALUE;
    static const int C_M_AXI_GMEM_READ_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<29> ap_const_lv29_201;
    static const sc_lv<16> ap_const_lv16_200;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<29> ap_const_lv29_200;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state12_pp0_stage0_iter0();
    void thread_ap_block_state13_io();
    void thread_ap_block_state13_pp0_stage0_iter1();
    void thread_ap_block_state14_pp0_stage0_iter2();
    void thread_ap_block_state15_pp0_stage0_iter3();
    void thread_ap_block_state16_pp0_stage0_iter4();
    void thread_ap_block_state17_pp0_stage0_iter5();
    void thread_ap_block_state18_pp0_stage0_iter6();
    void thread_ap_block_state19_pp0_stage0_iter7();
    void thread_ap_block_state20_pp0_stage0_iter8();
    void thread_ap_block_state21_pp0_stage0_iter9();
    void thread_ap_block_state23_pp1_stage0_iter0();
    void thread_ap_block_state24_io();
    void thread_ap_block_state24_pp1_stage0_iter1();
    void thread_ap_block_state25_io();
    void thread_ap_block_state25_pp1_stage0_iter2();
    void thread_ap_block_state33();
    void thread_ap_condition_613();
    void thread_ap_condition_pp0_exit_iter0_state12();
    void thread_ap_condition_pp1_exit_iter0_state23();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_h1_phi_fu_242_p4();
    void thread_ap_phi_mux_h_phi_fu_219_p4();
    void thread_ap_phi_mux_t_V_phi_fu_209_p4();
    void thread_ap_predicate_op146_writeresp_state33();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_gmem_read_ARREADY();
    void thread_ap_sig_ioackin_gmem_read_AWREADY();
    void thread_ap_sig_ioackin_gmem_read_WREADY();
    void thread_bytes_read2_v_fu_330_p3();
    void thread_bytes_read_fu_335_p2();
    void thread_cond_fu_470_p2();
    void thread_data_V_address0();
    void thread_data_V_ce0();
    void thread_data_V_we0();
    void thread_exitcond_flatten_fu_426_p2();
    void thread_extLd_fu_284_p1();
    void thread_gmem_read_ARADDR();
    void thread_gmem_read_ARVALID();
    void thread_gmem_read_AWADDR();
    void thread_gmem_read_AWVALID();
    void thread_gmem_read_BREADY();
    void thread_gmem_read_RREADY();
    void thread_gmem_read_WVALID();
    void thread_gmem_read_blk_n_AR();
    void thread_gmem_read_blk_n_AW();
    void thread_gmem_read_blk_n_B();
    void thread_gmem_read_blk_n_R();
    void thread_gmem_read_blk_n_W();
    void thread_h_1_fu_377_p2();
    void thread_h_cast_fu_368_p1();
    void thread_h_s_fu_451_p2();
    void thread_indvar_flatten_next_fu_431_p2();
    void thread_input_V2_sum3_cast_fu_509_p1();
    void thread_input_V2_sum3_fu_504_p2();
    void thread_input_V2_sum4_cast_fu_404_p1();
    void thread_input_V2_sum4_fu_387_p2();
    void thread_input_V2_sum_cast_fu_300_p1();
    void thread_input_V2_sum_fu_288_p2();
    void thread_stream_out_V_1_ack_in();
    void thread_stream_out_V_1_ack_out();
    void thread_stream_out_V_1_data_out();
    void thread_stream_out_V_1_load_A();
    void thread_stream_out_V_1_load_B();
    void thread_stream_out_V_1_sel();
    void thread_stream_out_V_1_state_cmp_full();
    void thread_stream_out_V_1_vld_in();
    void thread_stream_out_V_1_vld_out();
    void thread_stream_out_V_TDATA();
    void thread_stream_out_V_TDATA_blk_n();
    void thread_stream_out_V_TVALID();
    void thread_t_V_1_mid2_fu_443_p3();
    void thread_temp_V_mid2_fu_465_p1();
    void thread_temp_V_mid2_v_fu_457_p3();
    void thread_tmp_10_cast_fu_270_p1();
    void thread_tmp_10_fu_341_p2();
    void thread_tmp_11_fu_347_p1();
    void thread_tmp_12_fu_351_p3();
    void thread_tmp_13_fu_359_p2();
    void thread_tmp_15_fu_364_p1();
    void thread_tmp_16_fu_419_p3();
    void thread_tmp_17_fu_437_p2();
    void thread_tmp_18_fu_482_p1();
    void thread_tmp_19_fu_486_p4();
    void thread_tmp_1_fu_310_p2();
    void thread_tmp_20_fu_496_p3();
    void thread_tmp_2_fu_314_p2();
    void thread_tmp_3_fu_260_p4();
    void thread_tmp_4_fu_327_p1();
    void thread_tmp_5_fu_372_p2();
    void thread_tmp_6_cast_fu_383_p1();
    void thread_tmp_6_fu_318_p1();
    void thread_tmp_7_fu_392_p2();
    void thread_tmp_8_fu_321_p2();
    void thread_tmp_9_fu_414_p1();
    void thread_tmp_fu_274_p2();
    void thread_word_V_fu_476_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
