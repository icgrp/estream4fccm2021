

================================================================
== Vivado HLS Report for 'circ_buff_write_many128'
================================================================
* Date:           Fri Apr  2 17:21:12 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        estream_write
* Solution:       circ_buff_write_many128
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|     3.500|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-------+----------+-----------+-----------+-----------+----------+
        |                 |   Latency   | Iteration|  Initiation Interval  |    Trip   |          |
        |    Loop Name    | min |  max  |  Latency |  achieved |   target  |   Count   | Pipelined|
        +-----------------+-----+-------+----------+-----------+-----------+-----------+----------+
        |- Loop 1         |    8|      8|         2|          -|          -|          4|    no    |
        |- Loop 2         |    4|      4|         1|          -|          -|          4|    no    |
        |- Loop 3         |    ?|      ?|         ?|          -|          -|          4|    no    |
        | + fifo_read     |    ?|      ?|         ?|          -|          -|          ?|    no    |
        |  ++ reassemble  |    ?|      ?|         1|          1|          1|          ?|    yes   |
        | + gmem_write    |    0|  32773|         8|          1|          1| 0 ~ 32767 |    yes   |
        +-----------------+-----+-------+----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 34
* Pipeline : 2
  Pipeline-0 : II = 1, D = 1, States = { 15 }
  Pipeline-1 : II = 1, D = 8, States = { 17 18 19 20 21 22 23 24 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!first_load & !tmp_1)
	4  / (tmp_1 & !tmp_4) | (first_load & !tmp_4)
	33  / (tmp_1 & tmp_4) | (first_load & tmp_4)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond1)
	34  / (exitcond1)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	32  / (or_cond)
	14  / (!or_cond)
14 --> 
	15  / (tmp_11 & empty_n)
	17  / (!empty_n) | (!tmp_11)
15 --> 
	16  / (!tmp_14)
	15  / (tmp_14)
16 --> 
	14  / true
17 --> 
	25  / (!tmp_16)
	18  / (tmp_16)
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	17  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	4  / true
33 --> 
	33  / (!exitcond)
	34  / (exitcond)
34 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 35 [1/1] (1.00ns)   --->   "%output_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %output_V)"   --->   Operation 35 'read' 'output_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%tmp = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %output_V_read, i32 4, i32 31)"   --->   Operation 36 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_27_cast = zext i28 %tmp to i29"   --->   Operation 37 'zext' 'tmp_27_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i128* %gmem_out), !map !68"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %fifo_in_3_V), !map !74"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %fifo_in_2_V), !map !80"   --->   Operation 40 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %fifo_in_1_V), !map !86"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %fifo_in_0_V), !map !92"   --->   Operation 42 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %reset), !map !98"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64* %debug_register), !map !102"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x i8]* %useable_words), !map !106"   --->   Operation 45 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([24 x i8]* @circ_buff_write_many) nounwind"   --->   Operation 46 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%data_V = alloca [512 x i128], align 8" [./estream_write/c_src/circ_buff_write_many_128.cpp:60]   --->   Operation 47 'alloca' 'data_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 512> <RAM>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i128* %gmem_out, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:32]   --->   Operation 48 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %debug_register, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:34]   --->   Operation 49 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([4 x i8]* %useable_words, [1 x i8]* @p_str12, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str12, i32 -1, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12, [1 x i8]* @p_str12)" [./estream_write/c_src/circ_buff_write_many_128.cpp:35]   --->   Operation 50 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([4 x i8]* %useable_words, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:35]   --->   Operation 51 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %reset, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:36]   --->   Operation 52 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %output_V, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:37]   --->   Operation 53 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:38]   --->   Operation 54 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_in_0_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [8 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 55 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_in_1_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [8 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 56 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_in_2_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [8 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 57 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_in_3_V, [5 x i8]* @p_str6, i32 1, i32 1, [5 x i8]* @p_str7, i32 0, i32 0, [8 x i8]* @p_str8, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 58 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%first_load = load i1* @first, align 1"   --->   Operation 59 'load' 'first_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.65ns)   --->   "br i1 %first_load, label %._crit_edge, label %.preheader149.preheader" [./estream_write/c_src/circ_buff_write_many_128.cpp:77]   --->   Operation 60 'br' <Predicate = true> <Delay = 0.65>
ST_1 : Operation 61 [1/1] (0.65ns)   --->   "br label %.preheader149" [./estream_write/c_src/circ_buff_write_many_128.cpp:79]   --->   Operation 61 'br' <Predicate = (!first_load)> <Delay = 0.65>

State 2 <SV = 1> <Delay = 2.22>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%i = phi i3 [ %i_1, %2 ], [ 0, %.preheader149.preheader ]"   --->   Operation 62 'phi' 'i' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.58ns)   --->   "%tmp_1 = icmp eq i3 %i, -4" [./estream_write/c_src/circ_buff_write_many_128.cpp:79]   --->   Operation 63 'icmp' 'tmp_1' <Predicate = (!first_load)> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 64 'speclooptripcount' 'empty_5' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.67ns)   --->   "%i_1 = add i3 %i, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:79]   --->   Operation 65 'add' 'i_1' <Predicate = (!first_load)> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %._crit_edge.loopexit, label %1" [./estream_write/c_src/circ_buff_write_many_128.cpp:79]   --->   Operation 66 'br' <Predicate = (!first_load)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_2 = zext i3 %i to i64" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 67 'zext' 'tmp_2' <Predicate = (!first_load & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%useable_words_addr = getelementptr [4 x i8]* %useable_words, i64 0, i64 %tmp_2" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 68 'getelementptr' 'useable_words_addr' <Predicate = (!first_load & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 69 [2/2] (0.67ns)   --->   "%useable_words_load = load volatile i8* %useable_words_addr, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 69 'load' 'useable_words_load' <Predicate = (!first_load & !tmp_1)> <Delay = 0.67> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 4> <RAM>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_3 = trunc i3 %i to i2" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 70 'trunc' 'tmp_3' <Predicate = (!first_load & !tmp_1)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.65ns)   --->   "br label %._crit_edge"   --->   Operation 71 'br' <Predicate = (!first_load & tmp_1)> <Delay = 0.65>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%first_flag = phi i1 [ false, %0 ], [ true, %._crit_edge.loopexit ]"   --->   Operation 72 'phi' 'first_flag' <Predicate = (tmp_1) | (first_load)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (1.00ns)   --->   "%reset_read = call i8 @_ssdm_op_Read.s_axilite.volatile.i8P(i8* %reset)" [./estream_write/c_src/circ_buff_write_many_128.cpp:86]   --->   Operation 73 'read' 'reset_read' <Predicate = (tmp_1) | (first_load)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 74 [1/1] (0.84ns)   --->   "%tmp_4 = icmp eq i8 %reset_read, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:86]   --->   Operation 74 'icmp' 'tmp_4' <Predicate = (tmp_1) | (first_load)> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "br i1 %tmp_4, label %.preheader148.preheader, label %.preheader.preheader" [./estream_write/c_src/circ_buff_write_many_128.cpp:86]   --->   Operation 75 'br' <Predicate = (tmp_1) | (first_load)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.65ns)   --->   "br label %.preheader" [./estream_write/c_src/circ_buff_write_many_128.cpp:97]   --->   Operation 76 'br' <Predicate = (tmp_1 & !tmp_4) | (first_load & !tmp_4)> <Delay = 0.65>
ST_2 : Operation 77 [1/1] (0.65ns)   --->   "br label %.preheader148" [./estream_write/c_src/circ_buff_write_many_128.cpp:88]   --->   Operation 77 'br' <Predicate = (tmp_1 & tmp_4) | (first_load & tmp_4)> <Delay = 0.65>

State 3 <SV = 2> <Delay = 0.72>
ST_3 : Operation 78 [1/2] (0.67ns)   --->   "%useable_words_load = load volatile i8* %useable_words_addr, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 78 'load' 'useable_words_load' <Predicate = true> <Delay = 0.67> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 4> <RAM>
ST_3 : Operation 79 [1/1] (0.72ns)   --->   "switch i2 %tmp_3, label %branch3 [
    i2 0, label %branch0
    i2 1, label %branch1
    i2 -2, label %branch2
  ]" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 79 'switch' <Predicate = true> <Delay = 0.72>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "store i8 %useable_words_load, i8* @local_words_2, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 80 'store' <Predicate = (tmp_3 == 2)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "br label %2" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 81 'br' <Predicate = (tmp_3 == 2)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "store i8 %useable_words_load, i8* @local_words_1, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 82 'store' <Predicate = (tmp_3 == 1)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "br label %2" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 83 'br' <Predicate = (tmp_3 == 1)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "store i8 %useable_words_load, i8* @local_words_0, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 84 'store' <Predicate = (tmp_3 == 0)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "br label %2" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 85 'br' <Predicate = (tmp_3 == 0)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "store i8 %useable_words_load, i8* @local_words_3, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 86 'store' <Predicate = (tmp_3 == 3)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "br label %2" [./estream_write/c_src/circ_buff_write_many_128.cpp:81]   --->   Operation 87 'br' <Predicate = (tmp_3 == 3)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "br label %.preheader149" [./estream_write/c_src/circ_buff_write_many_128.cpp:79]   --->   Operation 88 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.77>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%stride = phi i3 [ %stride_1, %.loopexit146 ], [ 0, %.preheader.preheader ]"   --->   Operation 89 'phi' 'stride' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.58ns)   --->   "%exitcond1 = icmp eq i3 %stride, -4" [./estream_write/c_src/circ_buff_write_many_128.cpp:97]   --->   Operation 90 'icmp' 'exitcond1' <Predicate = true> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 91 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.67ns)   --->   "%stride_1 = add i3 %stride, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:97]   --->   Operation 92 'add' 'stride_1' <Predicate = true> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.loopexit147.loopexit, label %5" [./estream_write/c_src/circ_buff_write_many_128.cpp:97]   --->   Operation 93 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_13 = trunc i3 %stride to i2" [./estream_write/c_src/circ_buff_write_many_128.cpp:97]   --->   Operation 94 'trunc' 'tmp_13' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%idx = call i11 @_ssdm_op_BitConcatenate.i11.i2.i6.i2.i1(i2 %tmp_13, i6 0, i2 %tmp_13, i1 false)" [./estream_write/c_src/circ_buff_write_many_128.cpp:100]   --->   Operation 95 'bitconcatenate' 'idx' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%idx_cast = zext i11 %idx to i12" [./estream_write/c_src/circ_buff_write_many_128.cpp:100]   --->   Operation 96 'zext' 'idx_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.79ns)   --->   "%tmp_s = add i12 512, %idx_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 97 'add' 'tmp_s' <Predicate = (!exitcond1)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_3_cast = zext i12 %tmp_s to i29" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 98 'zext' 'tmp_3_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.97ns)   --->   "%output_V2_sum = add i29 %tmp_27_cast, %tmp_3_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 99 'add' 'output_V2_sum' <Predicate = (!exitcond1)> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 100 [1/1] (0.65ns)   --->   "br label %.loopexit147"   --->   Operation 100 'br' <Predicate = (exitcond1)> <Delay = 0.65>

State 5 <SV = 3> <Delay = 3.50>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%output_V2_sum_cast = zext i29 %output_V2_sum to i64" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 101 'zext' 'output_V2_sum_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%gmem_out_addr = getelementptr i128* %gmem_out, i64 %output_V2_sum_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 102 'getelementptr' 'gmem_out_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [7/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 103 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 4> <Delay = 3.50>
ST_6 : Operation 104 [6/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 104 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 5> <Delay = 3.50>
ST_7 : Operation 105 [5/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 105 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 6> <Delay = 3.50>
ST_8 : Operation 106 [4/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 106 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 7> <Delay = 3.50>
ST_9 : Operation 107 [3/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 107 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 8> <Delay = 3.50>
ST_10 : Operation 108 [2/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 108 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 9> <Delay = 3.50>
ST_11 : Operation 109 [1/7] (3.50ns)   --->   "%temp_tail_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i128P(i128* %gmem_out_addr, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 109 'readreq' 'temp_tail_V_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 10> <Delay = 3.50>
ST_12 : Operation 110 [1/1] (0.00ns)   --->   "%head_3_load = load i16* @head_3, align 2" [aesl_mux_load.4i16P.i2:16->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 110 'load' 'head_3_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 111 [1/1] (0.00ns)   --->   "%head_0_load = load i16* @head_0, align 2" [aesl_mux_load.4i16P.i2:10->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 111 'load' 'head_0_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "%head_1_load = load i16* @head_1, align 2" [aesl_mux_load.4i16P.i2:12->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 112 'load' 'head_1_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 113 [1/1] (0.44ns)   --->   "%sel_tmp_i = icmp eq i2 %tmp_13, 0" [aesl_mux_load.4i16P.i2:18->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 113 'icmp' 'sel_tmp_i' <Predicate = true> <Delay = 0.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp3_i)   --->   "%sel_tmp1_i = select i1 %sel_tmp_i, i16 %head_0_load, i16 %head_3_load" [aesl_mux_load.4i16P.i2:16->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 114 'select' 'sel_tmp1_i' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 115 [1/1] (0.44ns)   --->   "%sel_tmp2_i = icmp eq i2 %tmp_13, 1" [aesl_mux_load.4i16P.i2:18->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 115 'icmp' 'sel_tmp2_i' <Predicate = true> <Delay = 0.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 116 [1/1] (0.35ns) (out node of the LUT)   --->   "%sel_tmp3_i = select i1 %sel_tmp2_i, i16 %head_1_load, i16 %sel_tmp1_i" [aesl_mux_load.4i16P.i2:16->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 116 'select' 'sel_tmp3_i' <Predicate = true> <Delay = 0.35> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 117 [1/1] (0.44ns)   --->   "%sel_tmp4_i = icmp eq i2 %tmp_13, -2" [aesl_mux_load.4i16P.i2:18->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 117 'icmp' 'sel_tmp4_i' <Predicate = true> <Delay = 0.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 118 [1/1] (3.50ns)   --->   "%temp_tail_V = call i128 @_ssdm_op_Read.m_axi.volatile.i128P(i128* %gmem_out_addr)" [./estream_write/c_src/circ_buff_write_many_128.cpp:104]   --->   Operation 118 'read' 'temp_tail_V' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 119 [1/1] (0.00ns)   --->   "%stream_tail = trunc i128 %temp_tail_V to i16" [./estream_write/c_src/circ_buff_write_many_128.cpp:106]   --->   Operation 119 'trunc' 'stream_tail' <Predicate = true> <Delay = 0.00>

State 13 <SV = 11> <Delay = 3.15>
ST_13 : Operation 120 [1/1] (0.00ns)   --->   "%idx_cast5 = zext i11 %idx to i17" [./estream_write/c_src/circ_buff_write_many_128.cpp:100]   --->   Operation 120 'zext' 'idx_cast5' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 121 [1/1] (0.00ns)   --->   "%head_2_load = load i16* @head_2, align 2" [aesl_mux_load.4i16P.i2:14->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 121 'load' 'head_2_load' <Predicate = (sel_tmp4_i)> <Delay = 0.00>
ST_13 : Operation 122 [1/1] (0.35ns) (out node of the LUT)   --->   "%stream_head = select i1 %sel_tmp4_i, i16 %head_2_load, i16 %sel_tmp3_i" [aesl_mux_load.4i16P.i2:16->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 122 'select' 'stream_head' <Predicate = true> <Delay = 0.35> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "%local_words_0_load = load i8* @local_words_0, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:108]   --->   Operation 123 'load' 'local_words_0_load' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 124 [1/1] (0.00ns)   --->   "%local_words_1_load = load i8* @local_words_1, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:108]   --->   Operation 124 'load' 'local_words_1_load' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 125 [1/1] (0.00ns)   --->   "%local_words_2_load = load i8* @local_words_2, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:108]   --->   Operation 125 'load' 'local_words_2_load' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 126 [1/1] (0.00ns)   --->   "%local_words_3_load = load i8* @local_words_3, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:108]   --->   Operation 126 'load' 'local_words_3_load' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 127 [1/1] (0.39ns)   --->   "%words = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %local_words_0_load, i8 %local_words_1_load, i8 %local_words_2_load, i8 %local_words_3_load, i2 %tmp_13)" [./estream_write/c_src/circ_buff_write_many_128.cpp:108]   --->   Operation 127 'mux' 'words' <Predicate = true> <Delay = 0.39> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 128 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i16 %stream_head to i17" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 128 'zext' 'tmp_6_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_21 = trunc i16 %stream_head to i9" [aesl_mux_load.4i16P.i2:16->./estream_write/c_src/circ_buff_write_many_128.cpp:102]   --->   Operation 129 'trunc' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 130 [1/1] (0.85ns)   --->   "%tmp_8 = add i17 1, %tmp_6_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 130 'add' 'tmp_8' <Predicate = true> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 131 [1/1] (0.77ns)   --->   "%tmp_8_cast4 = add i9 1, %tmp_21" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 131 'add' 'tmp_8_cast4' <Predicate = true> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_8_cast = zext i17 %tmp_8 to i18" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 132 'zext' 'tmp_8_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_5_cast3 = zext i16 %stream_tail to i17" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 133 'zext' 'tmp_5_cast3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 134 [1/1] (0.00ns)   --->   "%tmp_5_cast = zext i16 %stream_tail to i18" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 134 'zext' 'tmp_5_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 135 [1/1] (1.09ns)   --->   "%tmp_9 = icmp eq i18 %tmp_8_cast, %tmp_5_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 135 'icmp' 'tmp_9' <Predicate = true> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_10_cast = zext i9 %tmp_8_cast4 to i17" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 136 'zext' 'tmp_10_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 137 [1/1] (1.10ns)   --->   "%tmp_5 = icmp eq i17 %tmp_10_cast, %tmp_5_cast3" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 137 'icmp' 'tmp_5' <Predicate = true> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 138 [1/1] (0.28ns)   --->   "%or_cond = or i1 %tmp_9, %tmp_5" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 138 'or' 'or_cond' <Predicate = true> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 139 [1/1] (0.00ns)   --->   "br i1 %or_cond, label %.loopexit146, label %6" [./estream_write/c_src/circ_buff_write_many_128.cpp:113]   --->   Operation 139 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 140 [1/1] (1.09ns)   --->   "%tmp_7 = icmp ult i17 %tmp_8, %tmp_5_cast3" [./estream_write/c_src/circ_buff_write_many_128.cpp:128]   --->   Operation 140 'icmp' 'tmp_7' <Predicate = (!or_cond)> <Delay = 1.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node bytes_to_write)   --->   "%p_neg = xor i16 %stream_head, -1" [./estream_write/c_src/circ_buff_write_many_128.cpp:130]   --->   Operation 141 'xor' 'p_neg' <Predicate = (!or_cond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 142 [1/1] (0.85ns)   --->   "%tmp_10 = sub i16 511, %stream_head" [./estream_write/c_src/circ_buff_write_many_128.cpp:136]   --->   Operation 142 'sub' 'tmp_10' <Predicate = (!or_cond)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node bytes_to_write)   --->   "%p_neg150_pn = select i1 %tmp_7, i16 %p_neg, i16 %tmp_10" [./estream_write/c_src/circ_buff_write_many_128.cpp:128]   --->   Operation 143 'select' 'p_neg150_pn' <Predicate = (!or_cond)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 144 [1/1] (0.85ns) (out node of the LUT)   --->   "%bytes_to_write = add i16 %p_neg150_pn, %stream_tail" [./estream_write/c_src/circ_buff_write_many_128.cpp:130]   --->   Operation 144 'add' 'bytes_to_write' <Predicate = (!or_cond)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 145 [1/1] (0.65ns)   --->   "br label %7" [./estream_write/c_src/circ_buff_write_many_128.cpp:140]   --->   Operation 145 'br' <Predicate = (!or_cond)> <Delay = 0.65>

State 14 <SV = 12> <Delay = 1.75>
ST_14 : Operation 146 [1/1] (0.00ns)   --->   "%h = phi i15 [ 0, %6 ], [ %h_1, %14 ]"   --->   Operation 146 'phi' 'h' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 147 [1/1] (0.00ns)   --->   "%bytes_to_write_2 = zext i15 %h to i16" [./estream_write/c_src/circ_buff_write_many_128.cpp:140]   --->   Operation 147 'zext' 'bytes_to_write_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 148 [1/1] (1.10ns)   --->   "%tmp_11 = icmp slt i16 %bytes_to_write_2, %bytes_to_write" [./estream_write/c_src/circ_buff_write_many_128.cpp:140]   --->   Operation 148 'icmp' 'tmp_11' <Predicate = true> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 149 [1/1] (0.84ns)   --->   "%h_1 = add i15 %h, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:140]   --->   Operation 149 'add' 'h_1' <Predicate = true> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 150 [1/1] (0.65ns)   --->   "br i1 %tmp_11, label %8, label %.loopexit" [./estream_write/c_src/circ_buff_write_many_128.cpp:140]   --->   Operation 150 'br' <Predicate = true> <Delay = 0.65>
ST_14 : Operation 151 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str9) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:141]   --->   Operation 151 'specloopname' <Predicate = (tmp_11)> <Delay = 0.00>
ST_14 : Operation 152 [1/1] (0.00ns)   --->   "%tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str9)" [./estream_write/c_src/circ_buff_write_many_128.cpp:141]   --->   Operation 152 'specregionbegin' 'tmp_12' <Predicate = (tmp_11)> <Delay = 0.00>
ST_14 : Operation 153 [1/1] (0.72ns)   --->   "switch i2 %tmp_13, label %branch313 [
    i2 0, label %branch07
    i2 1, label %branch19
    i2 -2, label %branch211
  ]" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 153 'switch' <Predicate = (tmp_11)> <Delay = 0.72>
ST_14 : Operation 154 [1/1] (0.00ns)   --->   "%fifo_in_2_V_read = call { i1, i64 } @_ssdm_op_NbRead.axis.volatile.i64P(i64* %fifo_in_2_V)" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 154 'nbread' 'fifo_in_2_V_read' <Predicate = (tmp_11 & tmp_13 == 2)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 155 [1/1] (0.00ns)   --->   "%p_vld9 = extractvalue { i1, i64 } %fifo_in_2_V_read, 0" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 155 'extractvalue' 'p_vld9' <Predicate = (tmp_11 & tmp_13 == 2)> <Delay = 0.00>
ST_14 : Operation 156 [1/1] (0.00ns)   --->   "%tmp_28 = extractvalue { i1, i64 } %fifo_in_2_V_read, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 156 'extractvalue' 'tmp_28' <Predicate = (tmp_11 & tmp_13 == 2)> <Delay = 0.00>
ST_14 : Operation 157 [1/1] (0.69ns)   --->   "br label %9" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 157 'br' <Predicate = (tmp_11 & tmp_13 == 2)> <Delay = 0.69>
ST_14 : Operation 158 [1/1] (0.00ns)   --->   "%fifo_in_1_V_read = call { i1, i64 } @_ssdm_op_NbRead.axis.volatile.i64P(i64* %fifo_in_1_V)" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 158 'nbread' 'fifo_in_1_V_read' <Predicate = (tmp_11 & tmp_13 == 1)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 159 [1/1] (0.00ns)   --->   "%p_vld7 = extractvalue { i1, i64 } %fifo_in_1_V_read, 0" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 159 'extractvalue' 'p_vld7' <Predicate = (tmp_11 & tmp_13 == 1)> <Delay = 0.00>
ST_14 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_27 = extractvalue { i1, i64 } %fifo_in_1_V_read, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 160 'extractvalue' 'tmp_27' <Predicate = (tmp_11 & tmp_13 == 1)> <Delay = 0.00>
ST_14 : Operation 161 [1/1] (0.69ns)   --->   "br label %9" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 161 'br' <Predicate = (tmp_11 & tmp_13 == 1)> <Delay = 0.69>
ST_14 : Operation 162 [1/1] (0.00ns)   --->   "%fifo_in_0_V_read = call { i1, i64 } @_ssdm_op_NbRead.axis.volatile.i64P(i64* %fifo_in_0_V)" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 162 'nbread' 'fifo_in_0_V_read' <Predicate = (tmp_11 & tmp_13 == 0)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 163 [1/1] (0.00ns)   --->   "%p_vld = extractvalue { i1, i64 } %fifo_in_0_V_read, 0" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 163 'extractvalue' 'p_vld' <Predicate = (tmp_11 & tmp_13 == 0)> <Delay = 0.00>
ST_14 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_25 = extractvalue { i1, i64 } %fifo_in_0_V_read, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 164 'extractvalue' 'tmp_25' <Predicate = (tmp_11 & tmp_13 == 0)> <Delay = 0.00>
ST_14 : Operation 165 [1/1] (0.69ns)   --->   "br label %9" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 165 'br' <Predicate = (tmp_11 & tmp_13 == 0)> <Delay = 0.69>
ST_14 : Operation 166 [1/1] (0.00ns)   --->   "%fifo_in_3_V_read = call { i1, i64 } @_ssdm_op_NbRead.axis.volatile.i64P(i64* %fifo_in_3_V)" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 166 'nbread' 'fifo_in_3_V_read' <Predicate = (tmp_11 & tmp_13 == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 167 [1/1] (0.00ns)   --->   "%p_vld1 = extractvalue { i1, i64 } %fifo_in_3_V_read, 0" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 167 'extractvalue' 'p_vld1' <Predicate = (tmp_11 & tmp_13 == 3)> <Delay = 0.00>
ST_14 : Operation 168 [1/1] (0.00ns)   --->   "%tmp_23 = extractvalue { i1, i64 } %fifo_in_3_V_read, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 168 'extractvalue' 'tmp_23' <Predicate = (tmp_11 & tmp_13 == 3)> <Delay = 0.00>
ST_14 : Operation 169 [1/1] (0.69ns)   --->   "br label %9" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 169 'br' <Predicate = (tmp_11 & tmp_13 == 3)> <Delay = 0.69>
ST_14 : Operation 170 [1/1] (0.00ns)   --->   "%low = phi i64 [ %tmp_23, %branch313 ], [ %tmp_28, %branch211 ], [ %tmp_27, %branch19 ], [ %tmp_25, %branch07 ]"   --->   Operation 170 'phi' 'low' <Predicate = (tmp_11)> <Delay = 0.00>
ST_14 : Operation 171 [1/1] (0.00ns)   --->   "%empty_n = phi i1 [ %p_vld1, %branch313 ], [ %p_vld9, %branch211 ], [ %p_vld7, %branch19 ], [ %p_vld, %branch07 ]" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 171 'phi' 'empty_n' <Predicate = (tmp_11)> <Delay = 0.00>
ST_14 : Operation 172 [1/1] (0.65ns)   --->   "br i1 %empty_n, label %10, label %.loopexit" [./estream_write/c_src/circ_buff_write_many_128.cpp:144]   --->   Operation 172 'br' <Predicate = (tmp_11)> <Delay = 0.65>
ST_14 : Operation 173 [1/1] (0.00ns)   --->   "%part_V = zext i64 %low to i128" [./estream_write/c_src/circ_buff_write_many_128.cpp:145]   --->   Operation 173 'zext' 'part_V' <Predicate = (tmp_11 & empty_n)> <Delay = 0.00>
ST_14 : Operation 174 [1/1] (0.65ns)   --->   "br label %11" [./estream_write/c_src/circ_buff_write_many_128.cpp:147]   --->   Operation 174 'br' <Predicate = (tmp_11 & empty_n)> <Delay = 0.65>
ST_14 : Operation 175 [1/1] (0.00ns)   --->   "%bytes_to_write_1 = phi i16 [ %bytes_to_write_2, %9 ], [ %bytes_to_write, %7 ]"   --->   Operation 175 'phi' 'bytes_to_write_1' <Predicate = (!empty_n) | (!tmp_11)> <Delay = 0.00>
ST_14 : Operation 176 [1/1] (0.65ns)   --->   "br label %15" [./estream_write/c_src/circ_buff_write_many_128.cpp:163]   --->   Operation 176 'br' <Predicate = (!empty_n) | (!tmp_11)> <Delay = 0.65>

State 15 <SV = 13> <Delay = 2.08>
ST_15 : Operation 177 [1/1] (0.00ns)   --->   "%p_s = phi i128 [ %part_V, %10 ], [ %part_V_1, %13 ]"   --->   Operation 177 'phi' 'p_s' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 178 [1/1] (0.00ns)   --->   "%t_V = phi i4 [ 1, %10 ], [ %word_V, %13 ]"   --->   Operation 178 'phi' 't_V' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 179 [1/1] (0.00ns)   --->   "%tmp_19_cast = zext i4 %t_V to i8" [./estream_write/c_src/circ_buff_write_many_128.cpp:147]   --->   Operation 179 'zext' 'tmp_19_cast' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 180 [1/1] (0.84ns)   --->   "%tmp_14 = icmp ult i8 %tmp_19_cast, %words" [./estream_write/c_src/circ_buff_write_many_128.cpp:147]   --->   Operation 180 'icmp' 'tmp_14' <Predicate = true> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 181 [1/1] (0.00ns)   --->   "br i1 %tmp_14, label %12, label %14" [./estream_write/c_src/circ_buff_write_many_128.cpp:147]   --->   Operation 181 'br' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 182 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str10) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:148]   --->   Operation 182 'specloopname' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 183 [1/1] (0.00ns)   --->   "%tmp_15 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str10)" [./estream_write/c_src/circ_buff_write_many_128.cpp:148]   --->   Operation 183 'specregionbegin' 'tmp_15' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 184 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:149]   --->   Operation 184 'specpipeline' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 185 [1/1] (0.72ns)   --->   "switch i2 %tmp_13, label %branch718 [
    i2 0, label %branch415
    i2 1, label %branch516
    i2 -2, label %branch617
  ]" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 185 'switch' <Predicate = (tmp_14)> <Delay = 0.72>
ST_15 : Operation 186 [1/1] (0.00ns)   --->   "%tmp_33 = call i64 @_ssdm_op_Read.axis.volatile.i64P(i64* %fifo_in_2_V)" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 186 'read' 'tmp_33' <Predicate = (tmp_13 == 2 & tmp_14)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 187 [1/1] (0.69ns)   --->   "br label %13" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 187 'br' <Predicate = (tmp_13 == 2 & tmp_14)> <Delay = 0.69>
ST_15 : Operation 188 [1/1] (0.00ns)   --->   "%tmp_32 = call i64 @_ssdm_op_Read.axis.volatile.i64P(i64* %fifo_in_1_V)" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 188 'read' 'tmp_32' <Predicate = (tmp_13 == 1 & tmp_14)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 189 [1/1] (0.69ns)   --->   "br label %13" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 189 'br' <Predicate = (tmp_13 == 1 & tmp_14)> <Delay = 0.69>
ST_15 : Operation 190 [1/1] (0.00ns)   --->   "%tmp_31 = call i64 @_ssdm_op_Read.axis.volatile.i64P(i64* %fifo_in_0_V)" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 190 'read' 'tmp_31' <Predicate = (tmp_13 == 0 & tmp_14)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 191 [1/1] (0.69ns)   --->   "br label %13" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 191 'br' <Predicate = (tmp_13 == 0 & tmp_14)> <Delay = 0.69>
ST_15 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_30 = call i64 @_ssdm_op_Read.axis.volatile.i64P(i64* %fifo_in_3_V)" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 192 'read' 'tmp_30' <Predicate = (tmp_13 == 3 & tmp_14)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_15 : Operation 193 [1/1] (0.69ns)   --->   "br label %13" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 193 'br' <Predicate = (tmp_13 == 3 & tmp_14)> <Delay = 0.69>
ST_15 : Operation 194 [1/1] (0.00ns)   --->   "%tmp_161 = phi i64 [ %tmp_30, %branch718 ], [ %tmp_33, %branch617 ], [ %tmp_32, %branch516 ], [ %tmp_31, %branch415 ]"   --->   Operation 194 'phi' 'tmp_161' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%hi = trunc i64 %tmp_161 to i32" [./estream_write/c_src/circ_buff_write_many_128.cpp:150]   --->   Operation 195 'trunc' 'hi' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%hi_p_V = zext i32 %hi to i128" [./estream_write/c_src/circ_buff_write_many_128.cpp:151]   --->   Operation 196 'zext' 'hi_p_V' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%tmp_35 = trunc i4 %t_V to i2" [./estream_write/c_src/circ_buff_write_many_128.cpp:152]   --->   Operation 197 'trunc' 'tmp_35' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%op2_assign = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 0, i8 32, i8 64, i8 96, i2 %tmp_35)" [./estream_write/c_src/circ_buff_write_many_128.cpp:152]   --->   Operation 198 'mux' 'op2_assign' <Predicate = (tmp_14)> <Delay = 0.00> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%tmp_24 = zext i8 %op2_assign to i128" [./estream_write/c_src/circ_buff_write_many_128.cpp:152]   --->   Operation 199 'zext' 'tmp_24' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node part_V_1)   --->   "%r_V = shl i128 %hi_p_V, %tmp_24" [./estream_write/c_src/circ_buff_write_many_128.cpp:152]   --->   Operation 200 'shl' 'r_V' <Predicate = (tmp_14)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 201 [1/1] (1.38ns) (out node of the LUT)   --->   "%part_V_1 = or i128 %r_V, %p_s" [./estream_write/c_src/circ_buff_write_many_128.cpp:153]   --->   Operation 201 'or' 'part_V_1' <Predicate = (tmp_14)> <Delay = 1.38> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 202 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str10, i32 %tmp_15)" [./estream_write/c_src/circ_buff_write_many_128.cpp:154]   --->   Operation 202 'specregionend' 'empty_8' <Predicate = (tmp_14)> <Delay = 0.00>
ST_15 : Operation 203 [1/1] (0.79ns)   --->   "%word_V = add i4 1, %t_V" [./estream_write/c_src/circ_buff_write_many_128.cpp:147]   --->   Operation 203 'add' 'word_V' <Predicate = (tmp_14)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 204 [1/1] (0.00ns)   --->   "br label %11" [./estream_write/c_src/circ_buff_write_many_128.cpp:147]   --->   Operation 204 'br' <Predicate = (tmp_14)> <Delay = 0.00>

State 16 <SV = 14> <Delay = 1.23>
ST_16 : Operation 205 [1/1] (0.00ns)   --->   "%tmp_17 = zext i15 %h to i64" [./estream_write/c_src/circ_buff_write_many_128.cpp:160]   --->   Operation 205 'zext' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 206 [1/1] (0.00ns)   --->   "%data_V_addr = getelementptr [512 x i128]* %data_V, i64 0, i64 %tmp_17" [./estream_write/c_src/circ_buff_write_many_128.cpp:160]   --->   Operation 206 'getelementptr' 'data_V_addr' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 207 [1/1] (1.23ns)   --->   "store i128 %p_s, i128* %data_V_addr, align 16" [./estream_write/c_src/circ_buff_write_many_128.cpp:160]   --->   Operation 207 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 512> <RAM>
ST_16 : Operation 208 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str9, i32 %tmp_12)" [./estream_write/c_src/circ_buff_write_many_128.cpp:161]   --->   Operation 208 'specregionend' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 209 [1/1] (0.00ns)   --->   "br label %7" [./estream_write/c_src/circ_buff_write_many_128.cpp:140]   --->   Operation 209 'br' <Predicate = true> <Delay = 0.00>

State 17 <SV = 13> <Delay = 1.82>
ST_17 : Operation 210 [1/1] (0.00ns)   --->   "%val_assign_1 = phi i16 [ %stream_head, %.loopexit ], [ %stream_head_2_cast, %16 ]"   --->   Operation 210 'phi' 'val_assign_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 211 [1/1] (0.00ns)   --->   "%h2 = phi i15 [ 0, %.loopexit ], [ %h_2, %16 ]"   --->   Operation 211 'phi' 'h2' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 212 [1/1] (0.00ns)   --->   "%h2_cast = zext i15 %h2 to i16" [./estream_write/c_src/circ_buff_write_many_128.cpp:163]   --->   Operation 212 'zext' 'h2_cast' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 213 [1/1] (1.10ns)   --->   "%tmp_16 = icmp slt i16 %h2_cast, %bytes_to_write_1" [./estream_write/c_src/circ_buff_write_many_128.cpp:163]   --->   Operation 213 'icmp' 'tmp_16' <Predicate = true> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 214 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 32767, i64 0)"   --->   Operation 214 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 215 [1/1] (0.84ns)   --->   "%h_2 = add i15 %h2, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:163]   --->   Operation 215 'add' 'h_2' <Predicate = true> <Delay = 0.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 216 [1/1] (0.00ns)   --->   "br i1 %tmp_16, label %16, label %17" [./estream_write/c_src/circ_buff_write_many_128.cpp:163]   --->   Operation 216 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 217 [1/1] (0.00ns)   --->   "%tmp_28_cast = zext i16 %val_assign_1 to i17" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 217 'zext' 'tmp_28_cast' <Predicate = (tmp_16)> <Delay = 0.00>
ST_17 : Operation 218 [1/1] (0.85ns)   --->   "%tmp_19 = add i17 %tmp_28_cast, %idx_cast5" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 218 'add' 'tmp_19' <Predicate = (tmp_16)> <Delay = 0.85> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 219 [1/1] (0.00ns)   --->   "%tmp_21_cast = zext i17 %tmp_19 to i29" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 219 'zext' 'tmp_21_cast' <Predicate = (tmp_16)> <Delay = 0.00>
ST_17 : Operation 220 [1/1] (0.00ns)   --->   "%tmp_20 = zext i15 %h2 to i64" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 220 'zext' 'tmp_20' <Predicate = (tmp_16)> <Delay = 0.00>
ST_17 : Operation 221 [1/1] (0.00ns)   --->   "%data_V_addr_1 = getelementptr [512 x i128]* %data_V, i64 0, i64 %tmp_20" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 221 'getelementptr' 'data_V_addr_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_17 : Operation 222 [2/2] (1.23ns)   --->   "%data_V_load = load i128* %data_V_addr_1, align 16" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 222 'load' 'data_V_load' <Predicate = (tmp_16)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 512> <RAM>
ST_17 : Operation 223 [1/1] (0.97ns)   --->   "%output_V2_sum4 = add i29 %tmp_27_cast, %tmp_21_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 223 'add' 'output_V2_sum4' <Predicate = (tmp_16)> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 224 [1/1] (0.00ns)   --->   "%tmp_29 = trunc i16 %val_assign_1 to i9" [./estream_write/c_src/circ_buff_write_many_128.cpp:169]   --->   Operation 224 'trunc' 'tmp_29' <Predicate = (tmp_16)> <Delay = 0.00>
ST_17 : Operation 225 [1/1] (0.77ns)   --->   "%stream_head_1 = add i9 1, %tmp_29" [./estream_write/c_src/circ_buff_write_many_128.cpp:169]   --->   Operation 225 'add' 'stream_head_1' <Predicate = (tmp_16)> <Delay = 0.77> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 226 [1/1] (0.00ns)   --->   "%stream_head_2_cast = zext i9 %stream_head_1 to i16" [./estream_write/c_src/circ_buff_write_many_128.cpp:170]   --->   Operation 226 'zext' 'stream_head_2_cast' <Predicate = (tmp_16)> <Delay = 0.00>

State 18 <SV = 14> <Delay = 3.50>
ST_18 : Operation 227 [1/2] (1.23ns)   --->   "%data_V_load = load i128* %data_V_addr_1, align 16" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 227 'load' 'data_V_load' <Predicate = (tmp_16)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 512> <RAM>
ST_18 : Operation 228 [1/1] (0.00ns)   --->   "%output_V2_sum4_cast = zext i29 %output_V2_sum4 to i64" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 228 'zext' 'output_V2_sum4_cast' <Predicate = (tmp_16)> <Delay = 0.00>
ST_18 : Operation 229 [1/1] (0.00ns)   --->   "%gmem_out_addr_1 = getelementptr i128* %gmem_out, i64 %output_V2_sum4_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 229 'getelementptr' 'gmem_out_addr_1' <Predicate = (tmp_16)> <Delay = 0.00>
ST_18 : Operation 230 [1/1] (3.50ns)   --->   "%gmem_out_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i128P(i128* %gmem_out_addr_1, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 230 'writereq' 'gmem_out_addr_1_req' <Predicate = (tmp_16)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 15> <Delay = 3.50>
ST_19 : Operation 231 [1/1] (3.50ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i128P(i128* %gmem_out_addr_1, i128 %data_V_load, i16 -1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 231 'write' <Predicate = (tmp_16)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 16> <Delay = 3.50>
ST_20 : Operation 232 [5/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 232 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_16)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 17> <Delay = 3.50>
ST_21 : Operation 233 [4/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 233 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_16)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 18> <Delay = 3.50>
ST_22 : Operation 234 [3/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 234 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_16)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 19> <Delay = 3.50>
ST_23 : Operation 235 [2/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 235 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_16)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 20> <Delay = 3.50>
ST_24 : Operation 236 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str11) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:164]   --->   Operation 236 'specloopname' <Predicate = (tmp_16)> <Delay = 0.00>
ST_24 : Operation 237 [1/1] (0.00ns)   --->   "%tmp_18 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str11)" [./estream_write/c_src/circ_buff_write_many_128.cpp:164]   --->   Operation 237 'specregionbegin' 'tmp_18' <Predicate = (tmp_16)> <Delay = 0.00>
ST_24 : Operation 238 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [./estream_write/c_src/circ_buff_write_many_128.cpp:165]   --->   Operation 238 'specpipeline' <Predicate = (tmp_16)> <Delay = 0.00>
ST_24 : Operation 239 [1/5] (3.50ns)   --->   "%gmem_out_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:167]   --->   Operation 239 'writeresp' 'gmem_out_addr_1_resp' <Predicate = (tmp_16)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 240 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str11, i32 %tmp_18)" [./estream_write/c_src/circ_buff_write_many_128.cpp:171]   --->   Operation 240 'specregionend' 'empty_11' <Predicate = (tmp_16)> <Delay = 0.00>
ST_24 : Operation 241 [1/1] (0.00ns)   --->   "br label %15" [./estream_write/c_src/circ_buff_write_many_128.cpp:163]   --->   Operation 241 'br' <Predicate = (tmp_16)> <Delay = 0.00>

State 25 <SV = 14> <Delay = 1.77>
ST_25 : Operation 242 [1/1] (0.79ns)   --->   "%tmp_22 = add i12 %idx_cast, 513" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 242 'add' 'tmp_22' <Predicate = true> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 243 [1/1] (0.00ns)   --->   "%tmp_25_cast = zext i12 %tmp_22 to i29" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 243 'zext' 'tmp_25_cast' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 244 [1/1] (0.97ns)   --->   "%output_V2_sum3 = add i29 %tmp_25_cast, %tmp_27_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 244 'add' 'output_V2_sum3' <Predicate = true> <Delay = 0.97> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 15> <Delay = 3.50>
ST_26 : Operation 245 [1/1] (0.00ns)   --->   "%output_V2_sum3_cast = zext i29 %output_V2_sum3 to i64" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 245 'zext' 'output_V2_sum3_cast' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 246 [1/1] (0.00ns)   --->   "%gmem_out_addr_2 = getelementptr i128* %gmem_out, i64 %output_V2_sum3_cast" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 246 'getelementptr' 'gmem_out_addr_2' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 247 [1/1] (3.50ns)   --->   "%gmem_out_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i128P(i128* %gmem_out_addr_2, i32 1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 247 'writereq' 'gmem_out_addr_2_req' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 16> <Delay = 3.50>
ST_27 : Operation 248 [1/1] (0.00ns)   --->   "%p_1 = zext i16 %val_assign_1 to i128" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 248 'zext' 'p_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 249 [1/1] (3.50ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i128P(i128* %gmem_out_addr_2, i128 %p_1, i16 -1)" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 249 'write' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 17> <Delay = 3.50>
ST_28 : Operation 250 [5/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 250 'writeresp' 'gmem_out_addr_2_resp' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 18> <Delay = 3.50>
ST_29 : Operation 251 [4/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 251 'writeresp' 'gmem_out_addr_2_resp' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 19> <Delay = 3.50>
ST_30 : Operation 252 [3/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 252 'writeresp' 'gmem_out_addr_2_resp' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 20> <Delay = 3.50>
ST_31 : Operation 253 [2/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 253 'writeresp' 'gmem_out_addr_2_resp' <Predicate = true> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 21> <Delay = 3.50>
ST_32 : Operation 254 [1/5] (3.50ns)   --->   "%gmem_out_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i128P(i128* %gmem_out_addr_2)" [./estream_write/c_src/circ_buff_write_many_128.cpp:176]   --->   Operation 254 'writeresp' 'gmem_out_addr_2_resp' <Predicate = (!or_cond)> <Delay = 3.50> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 255 [1/1] (0.72ns)   --->   "switch i2 %tmp_13, label %branch7 [
    i2 0, label %branch4
    i2 1, label %branch5
    i2 -2, label %branch6
  ]" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 255 'switch' <Predicate = (!or_cond)> <Delay = 0.72>
ST_32 : Operation 256 [1/1] (0.65ns)   --->   "store i16 %val_assign_1, i16* @head_2, align 2" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 256 'store' <Predicate = (!or_cond & tmp_13 == 2)> <Delay = 0.65>
ST_32 : Operation 257 [1/1] (0.00ns)   --->   "br label %18" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 257 'br' <Predicate = (!or_cond & tmp_13 == 2)> <Delay = 0.00>
ST_32 : Operation 258 [1/1] (0.65ns)   --->   "store i16 %val_assign_1, i16* @head_1, align 2" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 258 'store' <Predicate = (!or_cond & tmp_13 == 1)> <Delay = 0.65>
ST_32 : Operation 259 [1/1] (0.00ns)   --->   "br label %18" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 259 'br' <Predicate = (!or_cond & tmp_13 == 1)> <Delay = 0.00>
ST_32 : Operation 260 [1/1] (0.65ns)   --->   "store i16 %val_assign_1, i16* @head_0, align 2" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 260 'store' <Predicate = (!or_cond & tmp_13 == 0)> <Delay = 0.65>
ST_32 : Operation 261 [1/1] (0.00ns)   --->   "br label %18" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 261 'br' <Predicate = (!or_cond & tmp_13 == 0)> <Delay = 0.00>
ST_32 : Operation 262 [1/1] (0.65ns)   --->   "store i16 %val_assign_1, i16* @head_3, align 2" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 262 'store' <Predicate = (!or_cond & tmp_13 == 3)> <Delay = 0.65>
ST_32 : Operation 263 [1/1] (0.00ns)   --->   "br label %18" [./estream_write/c_src/circ_buff_write_many_128.cpp:177]   --->   Operation 263 'br' <Predicate = (!or_cond & tmp_13 == 3)> <Delay = 0.00>
ST_32 : Operation 264 [1/1] (0.00ns)   --->   "br label %.loopexit146"   --->   Operation 264 'br' <Predicate = (!or_cond)> <Delay = 0.00>
ST_32 : Operation 265 [1/1] (0.00ns)   --->   "br label %.preheader" [./estream_write/c_src/circ_buff_write_many_128.cpp:97]   --->   Operation 265 'br' <Predicate = true> <Delay = 0.00>

State 33 <SV = 2> <Delay = 0.77>
ST_33 : Operation 266 [1/1] (0.00ns)   --->   "%i1 = phi i3 [ %i_2, %4 ], [ 0, %.preheader148.preheader ]"   --->   Operation 266 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 267 [1/1] (0.58ns)   --->   "%exitcond = icmp eq i3 %i1, -4" [./estream_write/c_src/circ_buff_write_many_128.cpp:88]   --->   Operation 267 'icmp' 'exitcond' <Predicate = true> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 268 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 268 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 269 [1/1] (0.67ns)   --->   "%i_2 = add i3 %i1, 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:88]   --->   Operation 269 'add' 'i_2' <Predicate = true> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 270 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.loopexit147.loopexit14, label %3" [./estream_write/c_src/circ_buff_write_many_128.cpp:88]   --->   Operation 270 'br' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 271 [1/1] (0.00ns)   --->   "%tmp_6 = trunc i3 %i1 to i2" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 271 'trunc' 'tmp_6' <Predicate = (!exitcond)> <Delay = 0.00>
ST_33 : Operation 272 [1/1] (0.72ns)   --->   "switch i2 %tmp_6, label %branch11 [
    i2 0, label %branch8
    i2 1, label %branch9
    i2 -2, label %branch10
  ]" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 272 'switch' <Predicate = (!exitcond)> <Delay = 0.72>
ST_33 : Operation 273 [1/1] (0.65ns)   --->   "store i16 0, i16* @head_2, align 2" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 273 'store' <Predicate = (!exitcond & tmp_6 == 2)> <Delay = 0.65>
ST_33 : Operation 274 [1/1] (0.00ns)   --->   "br label %4" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 274 'br' <Predicate = (!exitcond & tmp_6 == 2)> <Delay = 0.00>
ST_33 : Operation 275 [1/1] (0.65ns)   --->   "store i16 0, i16* @head_1, align 2" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 275 'store' <Predicate = (!exitcond & tmp_6 == 1)> <Delay = 0.65>
ST_33 : Operation 276 [1/1] (0.00ns)   --->   "br label %4" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 276 'br' <Predicate = (!exitcond & tmp_6 == 1)> <Delay = 0.00>
ST_33 : Operation 277 [1/1] (0.65ns)   --->   "store i16 0, i16* @head_0, align 2" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 277 'store' <Predicate = (!exitcond & tmp_6 == 0)> <Delay = 0.65>
ST_33 : Operation 278 [1/1] (0.00ns)   --->   "br label %4" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 278 'br' <Predicate = (!exitcond & tmp_6 == 0)> <Delay = 0.00>
ST_33 : Operation 279 [1/1] (0.65ns)   --->   "store i16 0, i16* @head_3, align 2" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 279 'store' <Predicate = (!exitcond & tmp_6 == 3)> <Delay = 0.65>
ST_33 : Operation 280 [1/1] (0.00ns)   --->   "br label %4" [./estream_write/c_src/circ_buff_write_many_128.cpp:90]   --->   Operation 280 'br' <Predicate = (!exitcond & tmp_6 == 3)> <Delay = 0.00>
ST_33 : Operation 281 [1/1] (0.00ns)   --->   "br label %.preheader148" [./estream_write/c_src/circ_buff_write_many_128.cpp:88]   --->   Operation 281 'br' <Predicate = (!exitcond)> <Delay = 0.00>
ST_33 : Operation 282 [1/1] (0.65ns)   --->   "br label %.loopexit147"   --->   Operation 282 'br' <Predicate = (exitcond)> <Delay = 0.65>

State 34 <SV = 3> <Delay = 0.00>
ST_34 : Operation 283 [1/1] (0.00ns)   --->   "%first_flag_1 = phi i1 [ %first_flag, %.loopexit147.loopexit ], [ true, %.loopexit147.loopexit14 ]"   --->   Operation 283 'phi' 'first_flag_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 284 [1/1] (0.00ns)   --->   "%first_new_1 = phi i1 [ true, %.loopexit147.loopexit ], [ false, %.loopexit147.loopexit14 ]"   --->   Operation 284 'phi' 'first_new_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 285 [1/1] (0.00ns)   --->   "br i1 %first_flag_1, label %mergeST, label %.loopexit147.new"   --->   Operation 285 'br' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 286 [1/1] (0.00ns)   --->   "store i1 %first_new_1, i1* @first, align 1" [./estream_write/c_src/circ_buff_write_many_128.cpp:83]   --->   Operation 286 'store' <Predicate = (first_flag_1)> <Delay = 0.00>
ST_34 : Operation 287 [1/1] (0.00ns)   --->   "br label %.loopexit147.new"   --->   Operation 287 'br' <Predicate = (first_flag_1)> <Delay = 0.00>
ST_34 : Operation 288 [1/1] (0.00ns)   --->   "ret void" [./estream_write/c_src/circ_buff_write_many_128.cpp:181]   --->   Operation 288 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'output_V' [19]  (1 ns)

 <State 2>: 2.22ns
The critical path consists of the following:
	s_axi read on port 'reset' (./estream_write/c_src/circ_buff_write_many_128.cpp:86) [77]  (1 ns)
	'icmp' operation ('tmp_4', ./estream_write/c_src/circ_buff_write_many_128.cpp:86) [78]  (0.849 ns)
	blocking operation 0.374 ns on control path)

 <State 3>: 0.721ns
The critical path consists of the following:

 <State 4>: 1.77ns
The critical path consists of the following:
	'phi' operation ('stride') with incoming values : ('stride', ./estream_write/c_src/circ_buff_write_many_128.cpp:97) [83]  (0 ns)
	'add' operation ('tmp_s', ./estream_write/c_src/circ_buff_write_many_128.cpp:104) [103]  (0.798 ns)
	'add' operation ('output_V2_sum', ./estream_write/c_src/circ_buff_write_many_128.cpp:104) [105]  (0.975 ns)

 <State 5>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_out_addr', ./estream_write/c_src/circ_buff_write_many_128.cpp:104) [107]  (0 ns)
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:104) [108]  (3.5 ns)

 <State 6>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:104) [108]  (3.5 ns)

 <State 7>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:104) [108]  (3.5 ns)

 <State 8>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:104) [108]  (3.5 ns)

 <State 9>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:104) [108]  (3.5 ns)

 <State 10>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:104) [108]  (3.5 ns)

 <State 11>: 3.5ns
The critical path consists of the following:
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:104) [108]  (3.5 ns)

 <State 12>: 3.5ns
The critical path consists of the following:
	bus read on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:104) [109]  (3.5 ns)

 <State 13>: 3.16ns
The critical path consists of the following:
	'load' operation ('head_2_load', aesl_mux_load.4i16P.i2:14->./estream_write/c_src/circ_buff_write_many_128.cpp:102) on static variable 'head_2' [96]  (0 ns)
	'select' operation ('stream_head', aesl_mux_load.4i16P.i2:16->./estream_write/c_src/circ_buff_write_many_128.cpp:102) [102]  (0.357 ns)
	'add' operation ('tmp_8', ./estream_write/c_src/circ_buff_write_many_128.cpp:113) [118]  (0.853 ns)
	'icmp' operation ('tmp_7', ./estream_write/c_src/circ_buff_write_many_128.cpp:128) [129]  (1.1 ns)
	'select' operation ('p_neg150_pn', ./estream_write/c_src/circ_buff_write_many_128.cpp:128) [132]  (0 ns)
	'add' operation ('bytes_to_write', ./estream_write/c_src/circ_buff_write_many_128.cpp:130) [133]  (0.853 ns)

 <State 14>: 1.76ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', ./estream_write/c_src/circ_buff_write_many_128.cpp:140) [136]  (0 ns)
	'icmp' operation ('tmp_11', ./estream_write/c_src/circ_buff_write_many_128.cpp:140) [138]  (1.1 ns)
	multiplexor before 'phi' operation ('bytes_to_write') with incoming values : ('bytes_to_write', ./estream_write/c_src/circ_buff_write_many_128.cpp:130) ('bytes_to_write', ./estream_write/c_src/circ_buff_write_many_128.cpp:140) [214]  (0.656 ns)
	'phi' operation ('bytes_to_write') with incoming values : ('bytes_to_write', ./estream_write/c_src/circ_buff_write_many_128.cpp:130) ('bytes_to_write', ./estream_write/c_src/circ_buff_write_many_128.cpp:140) [214]  (0 ns)

 <State 15>: 2.08ns
The critical path consists of the following:
	axis read on port 'fifo_in_2_V' (./estream_write/c_src/circ_buff_write_many_128.cpp:150) [184]  (0 ns)
	multiplexor before 'phi' operation ('tmp') with incoming values : ('tmp', ./estream_write/c_src/circ_buff_write_many_128.cpp:150) [196]  (0.694 ns)
	'phi' operation ('tmp') with incoming values : ('tmp', ./estream_write/c_src/circ_buff_write_many_128.cpp:150) [196]  (0 ns)
	'shl' operation ('r.V', ./estream_write/c_src/circ_buff_write_many_128.cpp:152) [202]  (0 ns)
	'or' operation ('part.V', ./estream_write/c_src/circ_buff_write_many_128.cpp:153) [203]  (1.39 ns)

 <State 16>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('data_V_addr', ./estream_write/c_src/circ_buff_write_many_128.cpp:160) [209]  (0 ns)
	'store' operation (./estream_write/c_src/circ_buff_write_many_128.cpp:160) of variable 'part.V' on array 'data.V', ./estream_write/c_src/circ_buff_write_many_128.cpp:60 [210]  (1.24 ns)

 <State 17>: 1.83ns
The critical path consists of the following:
	'phi' operation ('stream_head') with incoming values : ('stream_head', aesl_mux_load.4i16P.i2:16->./estream_write/c_src/circ_buff_write_many_128.cpp:102) ('stream_head_2_cast', ./estream_write/c_src/circ_buff_write_many_128.cpp:170) [217]  (0 ns)
	'add' operation ('tmp_19', ./estream_write/c_src/circ_buff_write_many_128.cpp:167) [229]  (0.853 ns)
	'add' operation ('output_V2_sum4', ./estream_write/c_src/circ_buff_write_many_128.cpp:167) [234]  (0.975 ns)

 <State 18>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_out_addr_1', ./estream_write/c_src/circ_buff_write_many_128.cpp:167) [236]  (0 ns)
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:167) [237]  (3.5 ns)

 <State 19>: 3.5ns
The critical path consists of the following:
	bus write on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:167) [238]  (3.5 ns)

 <State 20>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:167) [239]  (3.5 ns)

 <State 21>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:167) [239]  (3.5 ns)

 <State 22>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:167) [239]  (3.5 ns)

 <State 23>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:167) [239]  (3.5 ns)

 <State 24>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:167) [239]  (3.5 ns)

 <State 25>: 1.77ns
The critical path consists of the following:
	'add' operation ('tmp_22', ./estream_write/c_src/circ_buff_write_many_128.cpp:176) [246]  (0.798 ns)
	'add' operation ('output_V2_sum3', ./estream_write/c_src/circ_buff_write_many_128.cpp:176) [249]  (0.975 ns)

 <State 26>: 3.5ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_out_addr_2', ./estream_write/c_src/circ_buff_write_many_128.cpp:176) [251]  (0 ns)
	bus request on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:176) [252]  (3.5 ns)

 <State 27>: 3.5ns
The critical path consists of the following:
	bus write on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:176) [253]  (3.5 ns)

 <State 28>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:176) [254]  (3.5 ns)

 <State 29>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:176) [254]  (3.5 ns)

 <State 30>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:176) [254]  (3.5 ns)

 <State 31>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:176) [254]  (3.5 ns)

 <State 32>: 3.5ns
The critical path consists of the following:
	bus access on port 'gmem_out' (./estream_write/c_src/circ_buff_write_many_128.cpp:176) [254]  (3.5 ns)

 <State 33>: 0.77ns
The critical path consists of the following:
	'icmp' operation ('exitcond', ./estream_write/c_src/circ_buff_write_many_128.cpp:88) [278]  (0.584 ns)
	blocking operation 0.187 ns on control path)

 <State 34>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
