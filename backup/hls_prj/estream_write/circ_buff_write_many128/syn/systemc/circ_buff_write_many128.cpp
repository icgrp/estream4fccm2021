// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "circ_buff_write_many128.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic circ_buff_write_many128::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic circ_buff_write_many128::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state1 = "1";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state2 = "10";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state3 = "100";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state4 = "1000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state5 = "10000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state6 = "100000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state7 = "1000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state8 = "10000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state9 = "100000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state10 = "1000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state11 = "10000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state12 = "100000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_pp1_stage0 = "10000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state25 = "100000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state26 = "1000000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state27 = "10000000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state28 = "100000000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state29 = "1000000000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state30 = "10000000000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state31 = "100000000000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state32 = "1000000000000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state33 = "10000000000000000000000000";
const sc_lv<27> circ_buff_write_many128::ap_ST_fsm_state34 = "100000000000000000000000000";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool circ_buff_write_many128::ap_const_boolean_1 = true;
const sc_lv<1> circ_buff_write_many128::ap_const_lv1_0 = "0";
const sc_lv<16> circ_buff_write_many128::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> circ_buff_write_many128::ap_const_lv8_0 = "00000000";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_4 = "100";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_B = "1011";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_10 = "10000";
const bool circ_buff_write_many128::ap_const_boolean_0 = false;
const sc_lv<1> circ_buff_write_many128::ap_const_lv1_1 = "1";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_12 = "10010";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_13 = "10011";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_18 = "11000";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_E = "1110";
const sc_lv<2> circ_buff_write_many128::ap_const_lv2_0 = "00";
const sc_lv<2> circ_buff_write_many128::ap_const_lv2_1 = "1";
const sc_lv<2> circ_buff_write_many128::ap_const_lv2_2 = "10";
const sc_lv<2> circ_buff_write_many128::ap_const_lv2_3 = "11";
const int circ_buff_write_many128::C_S_AXI_DATA_WIDTH = "100000";
const int circ_buff_write_many128::C_M_AXI_GMEM_OUT_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int circ_buff_write_many128::C_M_AXI_GMEM_OUT_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int circ_buff_write_many128::C_M_AXI_GMEM_OUT_CACHE_VALUE = "11";
const int circ_buff_write_many128::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_1 = "1";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_3 = "11";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_C = "1100";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_D = "1101";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_11 = "10001";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_19 = "11001";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_2 = "10";
const sc_lv<3> circ_buff_write_many128::ap_const_lv3_0 = "000";
const sc_lv<15> circ_buff_write_many128::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_F = "1111";
const sc_lv<4> circ_buff_write_many128::ap_const_lv4_1 = "1";
const sc_lv<4> circ_buff_write_many128::ap_const_lv4_0 = "0000";
const sc_lv<16> circ_buff_write_many128::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_1A = "11010";
const sc_lv<32> circ_buff_write_many128::ap_const_lv32_1F = "11111";
const sc_lv<3> circ_buff_write_many128::ap_const_lv3_4 = "100";
const sc_lv<3> circ_buff_write_many128::ap_const_lv3_1 = "1";
const sc_lv<8> circ_buff_write_many128::ap_const_lv8_1 = "1";
const sc_lv<6> circ_buff_write_many128::ap_const_lv6_0 = "000000";
const sc_lv<12> circ_buff_write_many128::ap_const_lv12_200 = "1000000000";
const sc_lv<17> circ_buff_write_many128::ap_const_lv17_1 = "1";
const sc_lv<9> circ_buff_write_many128::ap_const_lv9_1 = "1";
const sc_lv<16> circ_buff_write_many128::ap_const_lv16_1FF = "111111111";
const sc_lv<15> circ_buff_write_many128::ap_const_lv15_1 = "1";
const sc_lv<8> circ_buff_write_many128::ap_const_lv8_20 = "100000";
const sc_lv<8> circ_buff_write_many128::ap_const_lv8_40 = "1000000";
const sc_lv<8> circ_buff_write_many128::ap_const_lv8_60 = "1100000";
const sc_lv<12> circ_buff_write_many128::ap_const_lv12_201 = "1000000001";

circ_buff_write_many128::circ_buff_write_many128(sc_module_name name) : sc_module(name), mVcdFile(0) {
    circ_buff_write_many128_control_s_axi_U = new circ_buff_write_many128_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("circ_buff_write_many128_control_s_axi_U");
    circ_buff_write_many128_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    circ_buff_write_many128_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    circ_buff_write_many128_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    circ_buff_write_many128_control_s_axi_U->WVALID(s_axi_control_WVALID);
    circ_buff_write_many128_control_s_axi_U->WREADY(s_axi_control_WREADY);
    circ_buff_write_many128_control_s_axi_U->WDATA(s_axi_control_WDATA);
    circ_buff_write_many128_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    circ_buff_write_many128_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    circ_buff_write_many128_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    circ_buff_write_many128_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    circ_buff_write_many128_control_s_axi_U->RVALID(s_axi_control_RVALID);
    circ_buff_write_many128_control_s_axi_U->RREADY(s_axi_control_RREADY);
    circ_buff_write_many128_control_s_axi_U->RDATA(s_axi_control_RDATA);
    circ_buff_write_many128_control_s_axi_U->RRESP(s_axi_control_RRESP);
    circ_buff_write_many128_control_s_axi_U->BVALID(s_axi_control_BVALID);
    circ_buff_write_many128_control_s_axi_U->BREADY(s_axi_control_BREADY);
    circ_buff_write_many128_control_s_axi_U->BRESP(s_axi_control_BRESP);
    circ_buff_write_many128_control_s_axi_U->ACLK(ap_clk);
    circ_buff_write_many128_control_s_axi_U->ARESET(ap_rst_n_inv);
    circ_buff_write_many128_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    circ_buff_write_many128_control_s_axi_U->ap_start(ap_start);
    circ_buff_write_many128_control_s_axi_U->interrupt(interrupt);
    circ_buff_write_many128_control_s_axi_U->ap_ready(ap_ready);
    circ_buff_write_many128_control_s_axi_U->ap_done(ap_done);
    circ_buff_write_many128_control_s_axi_U->ap_idle(ap_idle);
    circ_buff_write_many128_control_s_axi_U->output_V(output_V);
    circ_buff_write_many128_control_s_axi_U->reset(reset);
    circ_buff_write_many128_control_s_axi_U->debug_register(debug_register);
    circ_buff_write_many128_control_s_axi_U->useable_words_address0(useable_words_address0);
    circ_buff_write_many128_control_s_axi_U->useable_words_ce0(useable_words_ce0);
    circ_buff_write_many128_control_s_axi_U->useable_words_q0(useable_words_q0);
    circ_buff_write_many128_gmem_out_m_axi_U = new circ_buff_write_many128_gmem_out_m_axi<0,128,32,5,16,16,16,16,C_M_AXI_GMEM_OUT_ID_WIDTH,C_M_AXI_GMEM_OUT_ADDR_WIDTH,C_M_AXI_GMEM_OUT_DATA_WIDTH,C_M_AXI_GMEM_OUT_AWUSER_WIDTH,C_M_AXI_GMEM_OUT_ARUSER_WIDTH,C_M_AXI_GMEM_OUT_WUSER_WIDTH,C_M_AXI_GMEM_OUT_RUSER_WIDTH,C_M_AXI_GMEM_OUT_BUSER_WIDTH,C_M_AXI_GMEM_OUT_USER_VALUE,C_M_AXI_GMEM_OUT_PROT_VALUE,C_M_AXI_GMEM_OUT_CACHE_VALUE>("circ_buff_write_many128_gmem_out_m_axi_U");
    circ_buff_write_many128_gmem_out_m_axi_U->AWVALID(m_axi_gmem_out_AWVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->AWREADY(m_axi_gmem_out_AWREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->AWADDR(m_axi_gmem_out_AWADDR);
    circ_buff_write_many128_gmem_out_m_axi_U->AWID(m_axi_gmem_out_AWID);
    circ_buff_write_many128_gmem_out_m_axi_U->AWLEN(m_axi_gmem_out_AWLEN);
    circ_buff_write_many128_gmem_out_m_axi_U->AWSIZE(m_axi_gmem_out_AWSIZE);
    circ_buff_write_many128_gmem_out_m_axi_U->AWBURST(m_axi_gmem_out_AWBURST);
    circ_buff_write_many128_gmem_out_m_axi_U->AWLOCK(m_axi_gmem_out_AWLOCK);
    circ_buff_write_many128_gmem_out_m_axi_U->AWCACHE(m_axi_gmem_out_AWCACHE);
    circ_buff_write_many128_gmem_out_m_axi_U->AWPROT(m_axi_gmem_out_AWPROT);
    circ_buff_write_many128_gmem_out_m_axi_U->AWQOS(m_axi_gmem_out_AWQOS);
    circ_buff_write_many128_gmem_out_m_axi_U->AWREGION(m_axi_gmem_out_AWREGION);
    circ_buff_write_many128_gmem_out_m_axi_U->AWUSER(m_axi_gmem_out_AWUSER);
    circ_buff_write_many128_gmem_out_m_axi_U->WVALID(m_axi_gmem_out_WVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->WREADY(m_axi_gmem_out_WREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->WDATA(m_axi_gmem_out_WDATA);
    circ_buff_write_many128_gmem_out_m_axi_U->WSTRB(m_axi_gmem_out_WSTRB);
    circ_buff_write_many128_gmem_out_m_axi_U->WLAST(m_axi_gmem_out_WLAST);
    circ_buff_write_many128_gmem_out_m_axi_U->WID(m_axi_gmem_out_WID);
    circ_buff_write_many128_gmem_out_m_axi_U->WUSER(m_axi_gmem_out_WUSER);
    circ_buff_write_many128_gmem_out_m_axi_U->ARVALID(m_axi_gmem_out_ARVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->ARREADY(m_axi_gmem_out_ARREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->ARADDR(m_axi_gmem_out_ARADDR);
    circ_buff_write_many128_gmem_out_m_axi_U->ARID(m_axi_gmem_out_ARID);
    circ_buff_write_many128_gmem_out_m_axi_U->ARLEN(m_axi_gmem_out_ARLEN);
    circ_buff_write_many128_gmem_out_m_axi_U->ARSIZE(m_axi_gmem_out_ARSIZE);
    circ_buff_write_many128_gmem_out_m_axi_U->ARBURST(m_axi_gmem_out_ARBURST);
    circ_buff_write_many128_gmem_out_m_axi_U->ARLOCK(m_axi_gmem_out_ARLOCK);
    circ_buff_write_many128_gmem_out_m_axi_U->ARCACHE(m_axi_gmem_out_ARCACHE);
    circ_buff_write_many128_gmem_out_m_axi_U->ARPROT(m_axi_gmem_out_ARPROT);
    circ_buff_write_many128_gmem_out_m_axi_U->ARQOS(m_axi_gmem_out_ARQOS);
    circ_buff_write_many128_gmem_out_m_axi_U->ARREGION(m_axi_gmem_out_ARREGION);
    circ_buff_write_many128_gmem_out_m_axi_U->ARUSER(m_axi_gmem_out_ARUSER);
    circ_buff_write_many128_gmem_out_m_axi_U->RVALID(m_axi_gmem_out_RVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->RREADY(m_axi_gmem_out_RREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->RDATA(m_axi_gmem_out_RDATA);
    circ_buff_write_many128_gmem_out_m_axi_U->RLAST(m_axi_gmem_out_RLAST);
    circ_buff_write_many128_gmem_out_m_axi_U->RID(m_axi_gmem_out_RID);
    circ_buff_write_many128_gmem_out_m_axi_U->RUSER(m_axi_gmem_out_RUSER);
    circ_buff_write_many128_gmem_out_m_axi_U->RRESP(m_axi_gmem_out_RRESP);
    circ_buff_write_many128_gmem_out_m_axi_U->BVALID(m_axi_gmem_out_BVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->BREADY(m_axi_gmem_out_BREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->BRESP(m_axi_gmem_out_BRESP);
    circ_buff_write_many128_gmem_out_m_axi_U->BID(m_axi_gmem_out_BID);
    circ_buff_write_many128_gmem_out_m_axi_U->BUSER(m_axi_gmem_out_BUSER);
    circ_buff_write_many128_gmem_out_m_axi_U->ACLK(ap_clk);
    circ_buff_write_many128_gmem_out_m_axi_U->ARESET(ap_rst_n_inv);
    circ_buff_write_many128_gmem_out_m_axi_U->ACLK_EN(ap_var_for_const0);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARVALID(gmem_out_ARVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARREADY(gmem_out_ARREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARADDR(gmem_out_ARADDR);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARID(ap_var_for_const1);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARLEN(ap_var_for_const2);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARSIZE(ap_var_for_const3);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARLOCK(ap_var_for_const4);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARCACHE(ap_var_for_const5);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARQOS(ap_var_for_const5);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARPROT(ap_var_for_const3);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARUSER(ap_var_for_const1);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARBURST(ap_var_for_const4);
    circ_buff_write_many128_gmem_out_m_axi_U->I_ARREGION(ap_var_for_const5);
    circ_buff_write_many128_gmem_out_m_axi_U->I_RVALID(gmem_out_RVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->I_RREADY(gmem_out_RREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->I_RDATA(gmem_out_RDATA);
    circ_buff_write_many128_gmem_out_m_axi_U->I_RID(gmem_out_RID);
    circ_buff_write_many128_gmem_out_m_axi_U->I_RUSER(gmem_out_RUSER);
    circ_buff_write_many128_gmem_out_m_axi_U->I_RRESP(gmem_out_RRESP);
    circ_buff_write_many128_gmem_out_m_axi_U->I_RLAST(gmem_out_RLAST);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWVALID(gmem_out_AWVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWREADY(gmem_out_AWREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWADDR(gmem_out_AWADDR);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWID(ap_var_for_const1);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWLEN(ap_var_for_const2);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWSIZE(ap_var_for_const3);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWLOCK(ap_var_for_const4);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWCACHE(ap_var_for_const5);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWQOS(ap_var_for_const5);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWPROT(ap_var_for_const3);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWUSER(ap_var_for_const1);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWBURST(ap_var_for_const4);
    circ_buff_write_many128_gmem_out_m_axi_U->I_AWREGION(ap_var_for_const5);
    circ_buff_write_many128_gmem_out_m_axi_U->I_WVALID(gmem_out_WVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->I_WREADY(gmem_out_WREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->I_WDATA(gmem_out_WDATA);
    circ_buff_write_many128_gmem_out_m_axi_U->I_WID(ap_var_for_const1);
    circ_buff_write_many128_gmem_out_m_axi_U->I_WUSER(ap_var_for_const1);
    circ_buff_write_many128_gmem_out_m_axi_U->I_WLAST(ap_var_for_const6);
    circ_buff_write_many128_gmem_out_m_axi_U->I_WSTRB(ap_var_for_const7);
    circ_buff_write_many128_gmem_out_m_axi_U->I_BVALID(gmem_out_BVALID);
    circ_buff_write_many128_gmem_out_m_axi_U->I_BREADY(gmem_out_BREADY);
    circ_buff_write_many128_gmem_out_m_axi_U->I_BRESP(gmem_out_BRESP);
    circ_buff_write_many128_gmem_out_m_axi_U->I_BID(gmem_out_BID);
    circ_buff_write_many128_gmem_out_m_axi_U->I_BUSER(gmem_out_BUSER);
    data_V_U = new circ_buff_write_many128_data_V("data_V_U");
    data_V_U->clk(ap_clk);
    data_V_U->reset(ap_rst_n_inv);
    data_V_U->address0(data_V_address0);
    data_V_U->ce0(data_V_ce0);
    data_V_U->we0(data_V_we0);
    data_V_U->d0(p_s_reg_400);
    data_V_U->q0(data_V_q0);
    circ_buff_write_many128_mux_42_8_1_1_U1 = new circ_buff_write_many128_mux_42_8_1_1<1,1,8,8,8,8,2,8>("circ_buff_write_many128_mux_42_8_1_1_U1");
    circ_buff_write_many128_mux_42_8_1_1_U1->din0(local_words_0);
    circ_buff_write_many128_mux_42_8_1_1_U1->din1(local_words_1);
    circ_buff_write_many128_mux_42_8_1_1_U1->din2(local_words_2);
    circ_buff_write_many128_mux_42_8_1_1_U1->din3(local_words_3);
    circ_buff_write_many128_mux_42_8_1_1_U1->din4(tmp_13_reg_1117);
    circ_buff_write_many128_mux_42_8_1_1_U1->dout(words_fu_698_p6);
    circ_buff_write_many128_mux_42_8_1_1_U2 = new circ_buff_write_many128_mux_42_8_1_1<1,1,8,8,8,8,2,8>("circ_buff_write_many128_mux_42_8_1_1_U2");
    circ_buff_write_many128_mux_42_8_1_1_U2->din0(ap_var_for_const8);
    circ_buff_write_many128_mux_42_8_1_1_U2->din1(ap_var_for_const9);
    circ_buff_write_many128_mux_42_8_1_1_U2->din2(ap_var_for_const10);
    circ_buff_write_many128_mux_42_8_1_1_U2->din3(ap_var_for_const11);
    circ_buff_write_many128_mux_42_8_1_1_U2->din4(op2_assign_fu_875_p5);
    circ_buff_write_many128_mux_42_8_1_1_U2->dout(op2_assign_fu_875_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( tmp_16_reg_1215_pp1_iter6_reg );
    sensitive << ( gmem_out_BVALID );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( tmp_16_reg_1215_pp1_iter6_reg );
    sensitive << ( gmem_out_BVALID );
    sensitive << ( ap_block_state18_io );
    sensitive << ( ap_block_state19_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( tmp_16_reg_1215_pp1_iter6_reg );
    sensitive << ( gmem_out_BVALID );
    sensitive << ( ap_block_state18_io );
    sensitive << ( ap_block_state19_io );

    SC_METHOD(thread_ap_block_state15);
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( ap_predicate_op186_read_state15 );
    sensitive << ( ap_predicate_op188_read_state15 );
    sensitive << ( ap_predicate_op190_read_state15 );
    sensitive << ( ap_predicate_op192_read_state15 );

    SC_METHOD(thread_ap_block_state17_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state18_io);
    sensitive << ( tmp_16_reg_1215 );
    sensitive << ( ap_sig_ioackin_gmem_out_AWREADY );

    SC_METHOD(thread_ap_block_state18_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state19_io);
    sensitive << ( tmp_16_reg_1215_pp1_iter1_reg );
    sensitive << ( ap_sig_ioackin_gmem_out_WREADY );

    SC_METHOD(thread_ap_block_state19_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state20_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state21_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state22_pp1_stage0_iter5);

    SC_METHOD(thread_ap_block_state23_pp1_stage0_iter6);

    SC_METHOD(thread_ap_block_state24_pp1_stage0_iter7);
    sensitive << ( tmp_16_reg_1215_pp1_iter6_reg );
    sensitive << ( gmem_out_BVALID );

    SC_METHOD(thread_ap_block_state32);
    sensitive << ( or_cond_reg_1178 );
    sensitive << ( gmem_out_BVALID );

    SC_METHOD(thread_ap_condition_685);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_16_reg_1215 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_ap_condition_695);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( tmp_16_reg_1215_pp1_iter1_reg );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state17);
    sensitive << ( tmp_16_fu_920_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter5 );
    sensitive << ( ap_enable_reg_pp1_iter6 );

    SC_METHOD(thread_ap_phi_mux_empty_n_phi_fu_379_p8);
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_11_fu_799_p2 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_phi_mux_first_flag_1_phi_fu_475_p4);
    sensitive << ( first_flag_1_reg_471 );

    SC_METHOD(thread_ap_phi_mux_low_phi_fu_366_p8);
    sensitive << ( fifo_in_0_V_TDATA );
    sensitive << ( fifo_in_1_V_TDATA );
    sensitive << ( fifo_in_2_V_TDATA );
    sensitive << ( fifo_in_3_V_TDATA );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_11_fu_799_p2 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_phi_mux_tmp_161_phi_fu_425_p8);
    sensitive << ( fifo_in_0_V_TDATA );
    sensitive << ( fifo_in_1_V_TDATA );
    sensitive << ( fifo_in_2_V_TDATA );
    sensitive << ( fifo_in_3_V_TDATA );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_ap_phi_mux_val_assign_1_phi_fu_442_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_16_reg_1215 );
    sensitive << ( val_assign_1_reg_439 );
    sensitive << ( stream_head_2_cast_reg_1234 );

    SC_METHOD(thread_ap_predicate_op186_read_state15);
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_ap_predicate_op188_read_state15);
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_ap_predicate_op190_read_state15);
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_ap_predicate_op192_read_state15);
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_gmem_out_ARREADY);
    sensitive << ( gmem_out_ARREADY );
    sensitive << ( ap_reg_ioackin_gmem_out_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_out_AWREADY);
    sensitive << ( gmem_out_AWREADY );
    sensitive << ( ap_reg_ioackin_gmem_out_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_out_WREADY);
    sensitive << ( gmem_out_WREADY );
    sensitive << ( ap_reg_ioackin_gmem_out_WREADY );

    SC_METHOD(thread_bytes_to_write_2_fu_794_p1);
    sensitive << ( h_reg_351 );

    SC_METHOD(thread_bytes_to_write_fu_789_p2);
    sensitive << ( stream_tail_reg_1156 );
    sensitive << ( p_neg150_pn_fu_781_p3 );

    SC_METHOD(thread_data_V_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_17_fu_911_p1 );
    sensitive << ( tmp_20_fu_945_p1 );

    SC_METHOD(thread_data_V_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_data_V_we0);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_exitcond1_fu_565_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( stride_reg_340 );

    SC_METHOD(thread_exitcond_fu_1032_p2);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( i1_reg_460 );

    SC_METHOD(thread_fifo_in_0_V_TDATA_blk_n);
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_fifo_in_0_V_TREADY);
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_11_fu_799_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_predicate_op186_read_state15 );
    sensitive << ( ap_predicate_op188_read_state15 );
    sensitive << ( ap_predicate_op190_read_state15 );
    sensitive << ( ap_predicate_op192_read_state15 );

    SC_METHOD(thread_fifo_in_1_V_TDATA_blk_n);
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_fifo_in_1_V_TREADY);
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_11_fu_799_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_predicate_op186_read_state15 );
    sensitive << ( ap_predicate_op188_read_state15 );
    sensitive << ( ap_predicate_op190_read_state15 );
    sensitive << ( ap_predicate_op192_read_state15 );

    SC_METHOD(thread_fifo_in_2_V_TDATA_blk_n);
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_fifo_in_2_V_TREADY);
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_11_fu_799_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_predicate_op186_read_state15 );
    sensitive << ( ap_predicate_op188_read_state15 );
    sensitive << ( ap_predicate_op190_read_state15 );
    sensitive << ( ap_predicate_op192_read_state15 );

    SC_METHOD(thread_fifo_in_3_V_TDATA_blk_n);
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_14_fu_858_p2 );

    SC_METHOD(thread_fifo_in_3_V_TREADY);
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( tmp_11_fu_799_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_predicate_op186_read_state15 );
    sensitive << ( ap_predicate_op188_read_state15 );
    sensitive << ( ap_predicate_op190_read_state15 );
    sensitive << ( ap_predicate_op192_read_state15 );

    SC_METHOD(thread_first_load_load_fu_510_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( first );

    SC_METHOD(thread_gmem_out_ARADDR);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( output_V2_sum_cast_fu_612_p1 );
    sensitive << ( ap_reg_ioackin_gmem_out_ARREADY );

    SC_METHOD(thread_gmem_out_ARVALID);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_reg_ioackin_gmem_out_ARREADY );

    SC_METHOD(thread_gmem_out_AWADDR);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( output_V2_sum4_cast_fu_969_p1 );
    sensitive << ( output_V2_sum3_cast_fu_993_p1 );
    sensitive << ( ap_reg_ioackin_gmem_out_AWREADY );
    sensitive << ( ap_condition_685 );

    SC_METHOD(thread_gmem_out_AWVALID);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_16_reg_1215 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_reg_ioackin_gmem_out_AWREADY );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_gmem_out_BREADY);
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( tmp_16_reg_1215_pp1_iter6_reg );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( or_cond_reg_1178 );
    sensitive << ( gmem_out_BVALID );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_gmem_out_RREADY);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( gmem_out_RVALID );

    SC_METHOD(thread_gmem_out_WDATA);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( data_V_load_reg_1239 );
    sensitive << ( ap_reg_ioackin_gmem_out_WREADY );
    sensitive << ( p_1_fu_1003_p1 );
    sensitive << ( ap_condition_695 );

    SC_METHOD(thread_gmem_out_WVALID);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( tmp_16_reg_1215_pp1_iter1_reg );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_block_pp1_stage0_01001 );
    sensitive << ( ap_reg_ioackin_gmem_out_WREADY );

    SC_METHOD(thread_gmem_out_blk_n_AR);
    sensitive << ( m_axi_gmem_out_ARREADY );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_gmem_out_blk_n_AW);
    sensitive << ( m_axi_gmem_out_AWREADY );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_16_reg_1215 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_gmem_out_blk_n_B);
    sensitive << ( m_axi_gmem_out_BVALID );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( tmp_16_reg_1215_pp1_iter6_reg );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( or_cond_reg_1178 );

    SC_METHOD(thread_gmem_out_blk_n_R);
    sensitive << ( m_axi_gmem_out_RVALID );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_gmem_out_blk_n_W);
    sensitive << ( m_axi_gmem_out_WREADY );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( tmp_16_reg_1215_pp1_iter1_reg );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_h2_cast_fu_916_p1);
    sensitive << ( h2_reg_449 );

    SC_METHOD(thread_h_1_fu_804_p2);
    sensitive << ( h_reg_351 );

    SC_METHOD(thread_h_2_fu_926_p2);
    sensitive << ( h2_reg_449 );

    SC_METHOD(thread_hi_fu_863_p1);
    sensitive << ( ap_phi_mux_tmp_161_phi_fu_425_p8 );

    SC_METHOD(thread_hi_p_V_fu_867_p1);
    sensitive << ( hi_fu_863_p1 );

    SC_METHOD(thread_i_1_fu_520_p2);
    sensitive << ( i_reg_316 );

    SC_METHOD(thread_i_2_fu_1038_p2);
    sensitive << ( i1_reg_460 );

    SC_METHOD(thread_idx_cast5_fu_669_p1);
    sensitive << ( idx_reg_1125 );

    SC_METHOD(thread_idx_cast_fu_593_p1);
    sensitive << ( idx_fu_581_p5 );

    SC_METHOD(thread_idx_fu_581_p5);
    sensitive << ( tmp_13_fu_577_p1 );

    SC_METHOD(thread_op2_assign_fu_875_p5);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( t_V_reg_411 );

    SC_METHOD(thread_or_cond_fu_757_p2);
    sensitive << ( tmp_9_fu_741_p2 );
    sensitive << ( tmp_5_fu_751_p2 );

    SC_METHOD(thread_output_V2_sum3_cast_fu_993_p1);
    sensitive << ( output_V2_sum3_reg_1250 );

    SC_METHOD(thread_output_V2_sum3_fu_988_p2);
    sensitive << ( tmp_27_cast_reg_1078 );
    sensitive << ( tmp_25_cast_fu_984_p1 );

    SC_METHOD(thread_output_V2_sum4_cast_fu_969_p1);
    sensitive << ( output_V2_sum4_reg_1229 );

    SC_METHOD(thread_output_V2_sum4_fu_950_p2);
    sensitive << ( tmp_27_cast_reg_1078 );
    sensitive << ( tmp_21_cast_fu_941_p1 );

    SC_METHOD(thread_output_V2_sum_cast_fu_612_p1);
    sensitive << ( output_V2_sum_reg_1135 );

    SC_METHOD(thread_output_V2_sum_fu_607_p2);
    sensitive << ( tmp_27_cast_reg_1078 );
    sensitive << ( tmp_3_cast_fu_603_p1 );

    SC_METHOD(thread_p_1_fu_1003_p1);
    sensitive << ( val_assign_1_reg_439 );

    SC_METHOD(thread_p_neg150_pn_fu_781_p3);
    sensitive << ( tmp_7_fu_763_p2 );
    sensitive << ( p_neg_fu_769_p2 );
    sensitive << ( tmp_10_fu_775_p2 );

    SC_METHOD(thread_p_neg_fu_769_p2);
    sensitive << ( stream_head_fu_676_p3 );

    SC_METHOD(thread_part_V_1_fu_899_p2);
    sensitive << ( p_s_reg_400 );
    sensitive << ( r_V_fu_893_p2 );

    SC_METHOD(thread_part_V_fu_850_p1);
    sensitive << ( ap_phi_mux_low_phi_fu_366_p8 );

    SC_METHOD(thread_r_V_fu_893_p2);
    sensitive << ( hi_p_V_fu_867_p1 );
    sensitive << ( tmp_24_fu_889_p1 );

    SC_METHOD(thread_sel_tmp1_i_fu_639_p3);
    sensitive << ( head_3 );
    sensitive << ( head_0 );
    sensitive << ( sel_tmp_i_fu_634_p2 );

    SC_METHOD(thread_sel_tmp2_i_fu_647_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( gmem_out_RVALID );

    SC_METHOD(thread_sel_tmp3_i_fu_652_p3);
    sensitive << ( head_1 );
    sensitive << ( sel_tmp2_i_fu_647_p2 );
    sensitive << ( sel_tmp1_i_fu_639_p3 );

    SC_METHOD(thread_sel_tmp4_i_fu_660_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( gmem_out_RVALID );

    SC_METHOD(thread_sel_tmp_i_fu_634_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_13_reg_1117 );
    sensitive << ( gmem_out_RVALID );

    SC_METHOD(thread_stream_head_1_fu_959_p2);
    sensitive << ( tmp_29_fu_955_p1 );

    SC_METHOD(thread_stream_head_2_cast_fu_965_p1);
    sensitive << ( stream_head_1_fu_959_p2 );

    SC_METHOD(thread_stream_head_fu_676_p3);
    sensitive << ( head_2 );
    sensitive << ( sel_tmp3_i_reg_1146 );
    sensitive << ( sel_tmp4_i_reg_1151 );

    SC_METHOD(thread_stream_tail_fu_665_p1);
    sensitive << ( gmem_out_RDATA );

    SC_METHOD(thread_stride_1_fu_571_p2);
    sensitive << ( stride_reg_340 );

    SC_METHOD(thread_tmp_10_cast_fu_747_p1);
    sensitive << ( tmp_8_cast4_fu_725_p2 );

    SC_METHOD(thread_tmp_10_fu_775_p2);
    sensitive << ( stream_head_fu_676_p3 );

    SC_METHOD(thread_tmp_11_fu_799_p2);
    sensitive << ( bytes_to_write_reg_1182 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( bytes_to_write_2_fu_794_p1 );

    SC_METHOD(thread_tmp_13_fu_577_p1);
    sensitive << ( stride_reg_340 );

    SC_METHOD(thread_tmp_14_fu_858_p2);
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( words_reg_1173 );
    sensitive << ( ap_predicate_op186_read_state15 );
    sensitive << ( ap_predicate_op188_read_state15 );
    sensitive << ( ap_predicate_op190_read_state15 );
    sensitive << ( ap_predicate_op192_read_state15 );
    sensitive << ( tmp_19_cast_fu_854_p1 );

    SC_METHOD(thread_tmp_16_fu_920_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( bytes_to_write_1_reg_390 );
    sensitive << ( h2_cast_fu_916_p1 );

    SC_METHOD(thread_tmp_17_fu_911_p1);
    sensitive << ( h_reg_351 );

    SC_METHOD(thread_tmp_19_cast_fu_854_p1);
    sensitive << ( t_V_reg_411 );

    SC_METHOD(thread_tmp_19_fu_936_p2);
    sensitive << ( idx_cast5_reg_1163 );
    sensitive << ( tmp_28_cast_fu_932_p1 );

    SC_METHOD(thread_tmp_1_fu_514_p2);
    sensitive << ( first_load_reg_1085 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_316 );

    SC_METHOD(thread_tmp_20_fu_945_p1);
    sensitive << ( h2_reg_449 );

    SC_METHOD(thread_tmp_21_cast_fu_941_p1);
    sensitive << ( tmp_19_fu_936_p2 );

    SC_METHOD(thread_tmp_21_fu_715_p1);
    sensitive << ( stream_head_fu_676_p3 );

    SC_METHOD(thread_tmp_22_fu_979_p2);
    sensitive << ( idx_cast_reg_1130 );

    SC_METHOD(thread_tmp_24_fu_889_p1);
    sensitive << ( op2_assign_fu_875_p6 );

    SC_METHOD(thread_tmp_25_cast_fu_984_p1);
    sensitive << ( tmp_22_fu_979_p2 );

    SC_METHOD(thread_tmp_27_cast_fu_506_p1);
    sensitive << ( tmp_fu_496_p4 );

    SC_METHOD(thread_tmp_28_cast_fu_932_p1);
    sensitive << ( ap_phi_mux_val_assign_1_phi_fu_442_p4 );

    SC_METHOD(thread_tmp_29_fu_955_p1);
    sensitive << ( ap_phi_mux_val_assign_1_phi_fu_442_p4 );

    SC_METHOD(thread_tmp_2_fu_526_p1);
    sensitive << ( i_reg_316 );

    SC_METHOD(thread_tmp_3_cast_fu_603_p1);
    sensitive << ( tmp_s_fu_597_p2 );

    SC_METHOD(thread_tmp_3_fu_531_p1);
    sensitive << ( i_reg_316 );

    SC_METHOD(thread_tmp_4_fu_535_p2);
    sensitive << ( reset );
    sensitive << ( first_load_reg_1085 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_514_p2 );

    SC_METHOD(thread_tmp_5_cast3_fu_735_p1);
    sensitive << ( stream_tail_reg_1156 );

    SC_METHOD(thread_tmp_5_cast_fu_738_p1);
    sensitive << ( stream_tail_reg_1156 );

    SC_METHOD(thread_tmp_5_fu_751_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_10_cast_fu_747_p1 );
    sensitive << ( tmp_5_cast3_fu_735_p1 );

    SC_METHOD(thread_tmp_6_cast_fu_711_p1);
    sensitive << ( stream_head_fu_676_p3 );

    SC_METHOD(thread_tmp_6_fu_1044_p1);
    sensitive << ( i1_reg_460 );

    SC_METHOD(thread_tmp_7_fu_763_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( or_cond_fu_757_p2 );
    sensitive << ( tmp_8_fu_719_p2 );
    sensitive << ( tmp_5_cast3_fu_735_p1 );

    SC_METHOD(thread_tmp_8_cast4_fu_725_p2);
    sensitive << ( tmp_21_fu_715_p1 );

    SC_METHOD(thread_tmp_8_cast_fu_731_p1);
    sensitive << ( tmp_8_fu_719_p2 );

    SC_METHOD(thread_tmp_8_fu_719_p2);
    sensitive << ( tmp_6_cast_fu_711_p1 );

    SC_METHOD(thread_tmp_9_fu_741_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_8_cast_fu_731_p1 );
    sensitive << ( tmp_5_cast_fu_738_p1 );

    SC_METHOD(thread_tmp_fu_496_p4);
    sensitive << ( output_V );

    SC_METHOD(thread_tmp_s_fu_597_p2);
    sensitive << ( idx_cast_fu_593_p1 );

    SC_METHOD(thread_useable_words_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_fu_526_p1 );

    SC_METHOD(thread_useable_words_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_word_V_fu_905_p2);
    sensitive << ( t_V_reg_411 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( fifo_in_0_V_TVALID );
    sensitive << ( fifo_in_1_V_TVALID );
    sensitive << ( fifo_in_2_V_TVALID );
    sensitive << ( fifo_in_3_V_TVALID );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( or_cond_reg_1178 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_14_fu_858_p2 );
    sensitive << ( gmem_out_RVALID );
    sensitive << ( gmem_out_BVALID );
    sensitive << ( first_load_reg_1085 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_514_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_565_p2 );
    sensitive << ( ap_sig_ioackin_gmem_out_ARREADY );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( or_cond_fu_757_p2 );
    sensitive << ( tmp_11_fu_799_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_phi_mux_empty_n_phi_fu_379_p8 );
    sensitive << ( ap_predicate_op186_read_state15 );
    sensitive << ( ap_predicate_op188_read_state15 );
    sensitive << ( ap_predicate_op190_read_state15 );
    sensitive << ( ap_predicate_op192_read_state15 );
    sensitive << ( tmp_16_fu_920_p2 );
    sensitive << ( ap_sig_ioackin_gmem_out_AWREADY );
    sensitive << ( ap_sig_ioackin_gmem_out_WREADY );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter6 );
    sensitive << ( tmp_4_fu_535_p2 );
    sensitive << ( exitcond_fu_1032_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const11);

    ap_CS_fsm = "000000000000000000000000001";
    first = "0";
    head_3 = "0000000000000000";
    head_0 = "0000000000000000";
    head_1 = "0000000000000000";
    head_2 = "0000000000000000";
    local_words_0 = "00000000";
    local_words_1 = "00000000";
    local_words_2 = "00000000";
    local_words_3 = "00000000";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter6 = SC_LOGIC_0;
    ap_reg_ioackin_gmem_out_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_out_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_out_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "circ_buff_write_many128_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_out_AWVALID, "(port)m_axi_gmem_out_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_out_AWREADY, "(port)m_axi_gmem_out_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_out_AWADDR, "(port)m_axi_gmem_out_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_out_AWID, "(port)m_axi_gmem_out_AWID");
    sc_trace(mVcdFile, m_axi_gmem_out_AWLEN, "(port)m_axi_gmem_out_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_out_AWSIZE, "(port)m_axi_gmem_out_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_out_AWBURST, "(port)m_axi_gmem_out_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_out_AWLOCK, "(port)m_axi_gmem_out_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_out_AWCACHE, "(port)m_axi_gmem_out_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_out_AWPROT, "(port)m_axi_gmem_out_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_out_AWQOS, "(port)m_axi_gmem_out_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_out_AWREGION, "(port)m_axi_gmem_out_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_out_AWUSER, "(port)m_axi_gmem_out_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_out_WVALID, "(port)m_axi_gmem_out_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_out_WREADY, "(port)m_axi_gmem_out_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_out_WDATA, "(port)m_axi_gmem_out_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_out_WSTRB, "(port)m_axi_gmem_out_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_out_WLAST, "(port)m_axi_gmem_out_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_out_WID, "(port)m_axi_gmem_out_WID");
    sc_trace(mVcdFile, m_axi_gmem_out_WUSER, "(port)m_axi_gmem_out_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_out_ARVALID, "(port)m_axi_gmem_out_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_out_ARREADY, "(port)m_axi_gmem_out_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_out_ARADDR, "(port)m_axi_gmem_out_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_out_ARID, "(port)m_axi_gmem_out_ARID");
    sc_trace(mVcdFile, m_axi_gmem_out_ARLEN, "(port)m_axi_gmem_out_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_out_ARSIZE, "(port)m_axi_gmem_out_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_out_ARBURST, "(port)m_axi_gmem_out_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_out_ARLOCK, "(port)m_axi_gmem_out_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_out_ARCACHE, "(port)m_axi_gmem_out_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_out_ARPROT, "(port)m_axi_gmem_out_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_out_ARQOS, "(port)m_axi_gmem_out_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_out_ARREGION, "(port)m_axi_gmem_out_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_out_ARUSER, "(port)m_axi_gmem_out_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_out_RVALID, "(port)m_axi_gmem_out_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_out_RREADY, "(port)m_axi_gmem_out_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_out_RDATA, "(port)m_axi_gmem_out_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_out_RLAST, "(port)m_axi_gmem_out_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_out_RID, "(port)m_axi_gmem_out_RID");
    sc_trace(mVcdFile, m_axi_gmem_out_RUSER, "(port)m_axi_gmem_out_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_out_RRESP, "(port)m_axi_gmem_out_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_out_BVALID, "(port)m_axi_gmem_out_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_out_BREADY, "(port)m_axi_gmem_out_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_out_BRESP, "(port)m_axi_gmem_out_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_out_BID, "(port)m_axi_gmem_out_BID");
    sc_trace(mVcdFile, m_axi_gmem_out_BUSER, "(port)m_axi_gmem_out_BUSER");
    sc_trace(mVcdFile, fifo_in_0_V_TDATA, "(port)fifo_in_0_V_TDATA");
    sc_trace(mVcdFile, fifo_in_0_V_TVALID, "(port)fifo_in_0_V_TVALID");
    sc_trace(mVcdFile, fifo_in_0_V_TREADY, "(port)fifo_in_0_V_TREADY");
    sc_trace(mVcdFile, fifo_in_1_V_TDATA, "(port)fifo_in_1_V_TDATA");
    sc_trace(mVcdFile, fifo_in_1_V_TVALID, "(port)fifo_in_1_V_TVALID");
    sc_trace(mVcdFile, fifo_in_1_V_TREADY, "(port)fifo_in_1_V_TREADY");
    sc_trace(mVcdFile, fifo_in_2_V_TDATA, "(port)fifo_in_2_V_TDATA");
    sc_trace(mVcdFile, fifo_in_2_V_TVALID, "(port)fifo_in_2_V_TVALID");
    sc_trace(mVcdFile, fifo_in_2_V_TREADY, "(port)fifo_in_2_V_TREADY");
    sc_trace(mVcdFile, fifo_in_3_V_TDATA, "(port)fifo_in_3_V_TDATA");
    sc_trace(mVcdFile, fifo_in_3_V_TVALID, "(port)fifo_in_3_V_TVALID");
    sc_trace(mVcdFile, fifo_in_3_V_TREADY, "(port)fifo_in_3_V_TREADY");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, output_V, "output_V");
    sc_trace(mVcdFile, reset, "reset");
    sc_trace(mVcdFile, debug_register, "debug_register");
    sc_trace(mVcdFile, useable_words_address0, "useable_words_address0");
    sc_trace(mVcdFile, useable_words_ce0, "useable_words_ce0");
    sc_trace(mVcdFile, useable_words_q0, "useable_words_q0");
    sc_trace(mVcdFile, first, "first");
    sc_trace(mVcdFile, head_3, "head_3");
    sc_trace(mVcdFile, head_0, "head_0");
    sc_trace(mVcdFile, head_1, "head_1");
    sc_trace(mVcdFile, head_2, "head_2");
    sc_trace(mVcdFile, local_words_0, "local_words_0");
    sc_trace(mVcdFile, local_words_1, "local_words_1");
    sc_trace(mVcdFile, local_words_2, "local_words_2");
    sc_trace(mVcdFile, local_words_3, "local_words_3");
    sc_trace(mVcdFile, gmem_out_blk_n_AR, "gmem_out_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, gmem_out_blk_n_R, "gmem_out_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, gmem_out_blk_n_AW, "gmem_out_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_16_reg_1215, "tmp_16_reg_1215");
    sc_trace(mVcdFile, gmem_out_blk_n_W, "gmem_out_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, tmp_16_reg_1215_pp1_iter1_reg, "tmp_16_reg_1215_pp1_iter1_reg");
    sc_trace(mVcdFile, gmem_out_blk_n_B, "gmem_out_blk_n_B");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter7, "ap_enable_reg_pp1_iter7");
    sc_trace(mVcdFile, tmp_16_reg_1215_pp1_iter6_reg, "tmp_16_reg_1215_pp1_iter6_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, or_cond_reg_1178, "or_cond_reg_1178");
    sc_trace(mVcdFile, fifo_in_0_V_TDATA_blk_n, "fifo_in_0_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_13_reg_1117, "tmp_13_reg_1117");
    sc_trace(mVcdFile, tmp_14_fu_858_p2, "tmp_14_fu_858_p2");
    sc_trace(mVcdFile, fifo_in_1_V_TDATA_blk_n, "fifo_in_1_V_TDATA_blk_n");
    sc_trace(mVcdFile, fifo_in_2_V_TDATA_blk_n, "fifo_in_2_V_TDATA_blk_n");
    sc_trace(mVcdFile, fifo_in_3_V_TDATA_blk_n, "fifo_in_3_V_TDATA_blk_n");
    sc_trace(mVcdFile, gmem_out_AWVALID, "gmem_out_AWVALID");
    sc_trace(mVcdFile, gmem_out_AWREADY, "gmem_out_AWREADY");
    sc_trace(mVcdFile, gmem_out_AWADDR, "gmem_out_AWADDR");
    sc_trace(mVcdFile, gmem_out_WVALID, "gmem_out_WVALID");
    sc_trace(mVcdFile, gmem_out_WREADY, "gmem_out_WREADY");
    sc_trace(mVcdFile, gmem_out_WDATA, "gmem_out_WDATA");
    sc_trace(mVcdFile, gmem_out_ARVALID, "gmem_out_ARVALID");
    sc_trace(mVcdFile, gmem_out_ARREADY, "gmem_out_ARREADY");
    sc_trace(mVcdFile, gmem_out_ARADDR, "gmem_out_ARADDR");
    sc_trace(mVcdFile, gmem_out_RVALID, "gmem_out_RVALID");
    sc_trace(mVcdFile, gmem_out_RREADY, "gmem_out_RREADY");
    sc_trace(mVcdFile, gmem_out_RDATA, "gmem_out_RDATA");
    sc_trace(mVcdFile, gmem_out_RLAST, "gmem_out_RLAST");
    sc_trace(mVcdFile, gmem_out_RID, "gmem_out_RID");
    sc_trace(mVcdFile, gmem_out_RUSER, "gmem_out_RUSER");
    sc_trace(mVcdFile, gmem_out_RRESP, "gmem_out_RRESP");
    sc_trace(mVcdFile, gmem_out_BVALID, "gmem_out_BVALID");
    sc_trace(mVcdFile, gmem_out_BREADY, "gmem_out_BREADY");
    sc_trace(mVcdFile, gmem_out_BRESP, "gmem_out_BRESP");
    sc_trace(mVcdFile, gmem_out_BID, "gmem_out_BID");
    sc_trace(mVcdFile, gmem_out_BUSER, "gmem_out_BUSER");
    sc_trace(mVcdFile, val_assign_1_reg_439, "val_assign_1_reg_439");
    sc_trace(mVcdFile, h2_reg_449, "h2_reg_449");
    sc_trace(mVcdFile, tmp_27_cast_fu_506_p1, "tmp_27_cast_fu_506_p1");
    sc_trace(mVcdFile, tmp_27_cast_reg_1078, "tmp_27_cast_reg_1078");
    sc_trace(mVcdFile, first_load_load_fu_510_p1, "first_load_load_fu_510_p1");
    sc_trace(mVcdFile, first_load_reg_1085, "first_load_reg_1085");
    sc_trace(mVcdFile, i_1_fu_520_p2, "i_1_fu_520_p2");
    sc_trace(mVcdFile, i_1_reg_1092, "i_1_reg_1092");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_514_p2, "tmp_1_fu_514_p2");
    sc_trace(mVcdFile, tmp_3_fu_531_p1, "tmp_3_fu_531_p1");
    sc_trace(mVcdFile, tmp_3_reg_1102, "tmp_3_reg_1102");
    sc_trace(mVcdFile, stride_1_fu_571_p2, "stride_1_fu_571_p2");
    sc_trace(mVcdFile, stride_1_reg_1112, "stride_1_reg_1112");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_13_fu_577_p1, "tmp_13_fu_577_p1");
    sc_trace(mVcdFile, exitcond1_fu_565_p2, "exitcond1_fu_565_p2");
    sc_trace(mVcdFile, idx_fu_581_p5, "idx_fu_581_p5");
    sc_trace(mVcdFile, idx_reg_1125, "idx_reg_1125");
    sc_trace(mVcdFile, idx_cast_fu_593_p1, "idx_cast_fu_593_p1");
    sc_trace(mVcdFile, idx_cast_reg_1130, "idx_cast_reg_1130");
    sc_trace(mVcdFile, output_V2_sum_fu_607_p2, "output_V2_sum_fu_607_p2");
    sc_trace(mVcdFile, output_V2_sum_reg_1135, "output_V2_sum_reg_1135");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_out_ARREADY, "ap_sig_ioackin_gmem_out_ARREADY");
    sc_trace(mVcdFile, sel_tmp3_i_fu_652_p3, "sel_tmp3_i_fu_652_p3");
    sc_trace(mVcdFile, sel_tmp3_i_reg_1146, "sel_tmp3_i_reg_1146");
    sc_trace(mVcdFile, sel_tmp4_i_fu_660_p2, "sel_tmp4_i_fu_660_p2");
    sc_trace(mVcdFile, sel_tmp4_i_reg_1151, "sel_tmp4_i_reg_1151");
    sc_trace(mVcdFile, stream_tail_fu_665_p1, "stream_tail_fu_665_p1");
    sc_trace(mVcdFile, stream_tail_reg_1156, "stream_tail_reg_1156");
    sc_trace(mVcdFile, idx_cast5_fu_669_p1, "idx_cast5_fu_669_p1");
    sc_trace(mVcdFile, idx_cast5_reg_1163, "idx_cast5_reg_1163");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, stream_head_fu_676_p3, "stream_head_fu_676_p3");
    sc_trace(mVcdFile, stream_head_reg_1168, "stream_head_reg_1168");
    sc_trace(mVcdFile, words_fu_698_p6, "words_fu_698_p6");
    sc_trace(mVcdFile, words_reg_1173, "words_reg_1173");
    sc_trace(mVcdFile, or_cond_fu_757_p2, "or_cond_fu_757_p2");
    sc_trace(mVcdFile, bytes_to_write_fu_789_p2, "bytes_to_write_fu_789_p2");
    sc_trace(mVcdFile, bytes_to_write_reg_1182, "bytes_to_write_reg_1182");
    sc_trace(mVcdFile, tmp_11_fu_799_p2, "tmp_11_fu_799_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, h_1_fu_804_p2, "h_1_fu_804_p2");
    sc_trace(mVcdFile, h_1_reg_1192, "h_1_reg_1192");
    sc_trace(mVcdFile, part_V_fu_850_p1, "part_V_fu_850_p1");
    sc_trace(mVcdFile, ap_phi_mux_empty_n_phi_fu_379_p8, "ap_phi_mux_empty_n_phi_fu_379_p8");
    sc_trace(mVcdFile, part_V_1_fu_899_p2, "part_V_1_fu_899_p2");
    sc_trace(mVcdFile, ap_predicate_op186_read_state15, "ap_predicate_op186_read_state15");
    sc_trace(mVcdFile, ap_predicate_op188_read_state15, "ap_predicate_op188_read_state15");
    sc_trace(mVcdFile, ap_predicate_op190_read_state15, "ap_predicate_op190_read_state15");
    sc_trace(mVcdFile, ap_predicate_op192_read_state15, "ap_predicate_op192_read_state15");
    sc_trace(mVcdFile, ap_block_state15, "ap_block_state15");
    sc_trace(mVcdFile, word_V_fu_905_p2, "word_V_fu_905_p2");
    sc_trace(mVcdFile, tmp_16_fu_920_p2, "tmp_16_fu_920_p2");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage0_iter0, "ap_block_state17_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage0_iter1, "ap_block_state18_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_out_AWREADY, "ap_sig_ioackin_gmem_out_AWREADY");
    sc_trace(mVcdFile, ap_block_state18_io, "ap_block_state18_io");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage0_iter2, "ap_block_state19_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_out_WREADY, "ap_sig_ioackin_gmem_out_WREADY");
    sc_trace(mVcdFile, ap_block_state19_io, "ap_block_state19_io");
    sc_trace(mVcdFile, ap_block_state20_pp1_stage0_iter3, "ap_block_state20_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state21_pp1_stage0_iter4, "ap_block_state21_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state22_pp1_stage0_iter5, "ap_block_state22_pp1_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state23_pp1_stage0_iter6, "ap_block_state23_pp1_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state24_pp1_stage0_iter7, "ap_block_state24_pp1_stage0_iter7");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, tmp_16_reg_1215_pp1_iter2_reg, "tmp_16_reg_1215_pp1_iter2_reg");
    sc_trace(mVcdFile, tmp_16_reg_1215_pp1_iter3_reg, "tmp_16_reg_1215_pp1_iter3_reg");
    sc_trace(mVcdFile, tmp_16_reg_1215_pp1_iter4_reg, "tmp_16_reg_1215_pp1_iter4_reg");
    sc_trace(mVcdFile, tmp_16_reg_1215_pp1_iter5_reg, "tmp_16_reg_1215_pp1_iter5_reg");
    sc_trace(mVcdFile, h_2_fu_926_p2, "h_2_fu_926_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, output_V2_sum4_fu_950_p2, "output_V2_sum4_fu_950_p2");
    sc_trace(mVcdFile, output_V2_sum4_reg_1229, "output_V2_sum4_reg_1229");
    sc_trace(mVcdFile, stream_head_2_cast_fu_965_p1, "stream_head_2_cast_fu_965_p1");
    sc_trace(mVcdFile, stream_head_2_cast_reg_1234, "stream_head_2_cast_reg_1234");
    sc_trace(mVcdFile, data_V_q0, "data_V_q0");
    sc_trace(mVcdFile, data_V_load_reg_1239, "data_V_load_reg_1239");
    sc_trace(mVcdFile, output_V2_sum3_fu_988_p2, "output_V2_sum3_fu_988_p2");
    sc_trace(mVcdFile, output_V2_sum3_reg_1250, "output_V2_sum3_reg_1250");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, i_2_fu_1038_p2, "i_2_fu_1038_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state17, "ap_condition_pp1_exit_iter0_state17");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter5, "ap_enable_reg_pp1_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter6, "ap_enable_reg_pp1_iter6");
    sc_trace(mVcdFile, data_V_address0, "data_V_address0");
    sc_trace(mVcdFile, data_V_ce0, "data_V_ce0");
    sc_trace(mVcdFile, data_V_we0, "data_V_we0");
    sc_trace(mVcdFile, i_reg_316, "i_reg_316");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, first_flag_reg_327, "first_flag_reg_327");
    sc_trace(mVcdFile, stride_reg_340, "stride_reg_340");
    sc_trace(mVcdFile, ap_block_state32, "ap_block_state32");
    sc_trace(mVcdFile, tmp_4_fu_535_p2, "tmp_4_fu_535_p2");
    sc_trace(mVcdFile, h_reg_351, "h_reg_351");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_phi_mux_low_phi_fu_366_p8, "ap_phi_mux_low_phi_fu_366_p8");
    sc_trace(mVcdFile, bytes_to_write_2_fu_794_p1, "bytes_to_write_2_fu_794_p1");
    sc_trace(mVcdFile, bytes_to_write_1_reg_390, "bytes_to_write_1_reg_390");
    sc_trace(mVcdFile, p_s_reg_400, "p_s_reg_400");
    sc_trace(mVcdFile, t_V_reg_411, "t_V_reg_411");
    sc_trace(mVcdFile, ap_phi_mux_tmp_161_phi_fu_425_p8, "ap_phi_mux_tmp_161_phi_fu_425_p8");
    sc_trace(mVcdFile, ap_phi_mux_val_assign_1_phi_fu_442_p4, "ap_phi_mux_val_assign_1_phi_fu_442_p4");
    sc_trace(mVcdFile, i1_reg_460, "i1_reg_460");
    sc_trace(mVcdFile, exitcond_fu_1032_p2, "exitcond_fu_1032_p2");
    sc_trace(mVcdFile, ap_phi_mux_first_flag_1_phi_fu_475_p4, "ap_phi_mux_first_flag_1_phi_fu_475_p4");
    sc_trace(mVcdFile, first_flag_1_reg_471, "first_flag_1_reg_471");
    sc_trace(mVcdFile, first_new_1_reg_483, "first_new_1_reg_483");
    sc_trace(mVcdFile, tmp_2_fu_526_p1, "tmp_2_fu_526_p1");
    sc_trace(mVcdFile, tmp_17_fu_911_p1, "tmp_17_fu_911_p1");
    sc_trace(mVcdFile, tmp_20_fu_945_p1, "tmp_20_fu_945_p1");
    sc_trace(mVcdFile, output_V2_sum_cast_fu_612_p1, "output_V2_sum_cast_fu_612_p1");
    sc_trace(mVcdFile, output_V2_sum4_cast_fu_969_p1, "output_V2_sum4_cast_fu_969_p1");
    sc_trace(mVcdFile, output_V2_sum3_cast_fu_993_p1, "output_V2_sum3_cast_fu_993_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_out_ARREADY, "ap_reg_ioackin_gmem_out_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_out_AWREADY, "ap_reg_ioackin_gmem_out_AWREADY");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_out_WREADY, "ap_reg_ioackin_gmem_out_WREADY");
    sc_trace(mVcdFile, p_1_fu_1003_p1, "p_1_fu_1003_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, tmp_6_fu_1044_p1, "tmp_6_fu_1044_p1");
    sc_trace(mVcdFile, tmp_fu_496_p4, "tmp_fu_496_p4");
    sc_trace(mVcdFile, tmp_s_fu_597_p2, "tmp_s_fu_597_p2");
    sc_trace(mVcdFile, tmp_3_cast_fu_603_p1, "tmp_3_cast_fu_603_p1");
    sc_trace(mVcdFile, sel_tmp_i_fu_634_p2, "sel_tmp_i_fu_634_p2");
    sc_trace(mVcdFile, sel_tmp2_i_fu_647_p2, "sel_tmp2_i_fu_647_p2");
    sc_trace(mVcdFile, sel_tmp1_i_fu_639_p3, "sel_tmp1_i_fu_639_p3");
    sc_trace(mVcdFile, tmp_6_cast_fu_711_p1, "tmp_6_cast_fu_711_p1");
    sc_trace(mVcdFile, tmp_21_fu_715_p1, "tmp_21_fu_715_p1");
    sc_trace(mVcdFile, tmp_8_fu_719_p2, "tmp_8_fu_719_p2");
    sc_trace(mVcdFile, tmp_8_cast_fu_731_p1, "tmp_8_cast_fu_731_p1");
    sc_trace(mVcdFile, tmp_5_cast_fu_738_p1, "tmp_5_cast_fu_738_p1");
    sc_trace(mVcdFile, tmp_8_cast4_fu_725_p2, "tmp_8_cast4_fu_725_p2");
    sc_trace(mVcdFile, tmp_10_cast_fu_747_p1, "tmp_10_cast_fu_747_p1");
    sc_trace(mVcdFile, tmp_5_cast3_fu_735_p1, "tmp_5_cast3_fu_735_p1");
    sc_trace(mVcdFile, tmp_9_fu_741_p2, "tmp_9_fu_741_p2");
    sc_trace(mVcdFile, tmp_5_fu_751_p2, "tmp_5_fu_751_p2");
    sc_trace(mVcdFile, tmp_7_fu_763_p2, "tmp_7_fu_763_p2");
    sc_trace(mVcdFile, p_neg_fu_769_p2, "p_neg_fu_769_p2");
    sc_trace(mVcdFile, tmp_10_fu_775_p2, "tmp_10_fu_775_p2");
    sc_trace(mVcdFile, p_neg150_pn_fu_781_p3, "p_neg150_pn_fu_781_p3");
    sc_trace(mVcdFile, tmp_19_cast_fu_854_p1, "tmp_19_cast_fu_854_p1");
    sc_trace(mVcdFile, hi_fu_863_p1, "hi_fu_863_p1");
    sc_trace(mVcdFile, op2_assign_fu_875_p5, "op2_assign_fu_875_p5");
    sc_trace(mVcdFile, op2_assign_fu_875_p6, "op2_assign_fu_875_p6");
    sc_trace(mVcdFile, hi_p_V_fu_867_p1, "hi_p_V_fu_867_p1");
    sc_trace(mVcdFile, tmp_24_fu_889_p1, "tmp_24_fu_889_p1");
    sc_trace(mVcdFile, r_V_fu_893_p2, "r_V_fu_893_p2");
    sc_trace(mVcdFile, h2_cast_fu_916_p1, "h2_cast_fu_916_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_932_p1, "tmp_28_cast_fu_932_p1");
    sc_trace(mVcdFile, tmp_19_fu_936_p2, "tmp_19_fu_936_p2");
    sc_trace(mVcdFile, tmp_21_cast_fu_941_p1, "tmp_21_cast_fu_941_p1");
    sc_trace(mVcdFile, tmp_29_fu_955_p1, "tmp_29_fu_955_p1");
    sc_trace(mVcdFile, stream_head_1_fu_959_p2, "stream_head_1_fu_959_p2");
    sc_trace(mVcdFile, tmp_22_fu_979_p2, "tmp_22_fu_979_p2");
    sc_trace(mVcdFile, tmp_25_cast_fu_984_p1, "tmp_25_cast_fu_984_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_condition_685, "ap_condition_685");
    sc_trace(mVcdFile, ap_condition_695, "ap_condition_695");
#endif

    }
    mHdltvinHandle.open("circ_buff_write_many128.hdltvin.dat");
    mHdltvoutHandle.open("circ_buff_write_many128.hdltvout.dat");
}

circ_buff_write_many128::~circ_buff_write_many128() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete circ_buff_write_many128_control_s_axi_U;
    delete circ_buff_write_many128_gmem_out_m_axi_U;
    delete data_V_U;
    delete circ_buff_write_many128_mux_42_8_1_1_U1;
    delete circ_buff_write_many128_mux_42_8_1_1_U2;
}

void circ_buff_write_many128::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void circ_buff_write_many128::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void circ_buff_write_many128::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void circ_buff_write_many128::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv8_0;
}

void circ_buff_write_many128::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void circ_buff_write_many128::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void circ_buff_write_many128::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void circ_buff_write_many128::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void circ_buff_write_many128::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv16_FFFF;
}

void circ_buff_write_many128::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_20;
}

void circ_buff_write_many128::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv8_40;
}

void circ_buff_write_many128::thread_ap_var_for_const11() {
    ap_var_for_const11 = ap_const_lv8_60;
}

void circ_buff_write_many128::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state17.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                    (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_empty_n_phi_fu_379_p8.read()) || 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_799_p2.read())))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state17.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state17.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter5 = ap_enable_reg_pp1_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter6 = ap_enable_reg_pp1_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter7 = ap_enable_reg_pp1_iter6.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                    (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_empty_n_phi_fu_379_p8.read()) || 
                     esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_799_p2.read())))) {
            ap_enable_reg_pp1_iter7 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_out_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_out_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_out_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_out_ARREADY.read())) {
                ap_reg_ioackin_gmem_out_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_out_AWREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
              esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem_out_AWREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_gmem_out_AWREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                     esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_out_AWREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_out_AWREADY.read())))) {
            ap_reg_ioackin_gmem_out_AWREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_out_WREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter1_reg.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem_out_WREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_gmem_out_WREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter1_reg.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_out_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_out_WREADY.read())))) {
            ap_reg_ioackin_gmem_out_WREADY = ap_const_logic_1;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_799_p2.read())) {
            bytes_to_write_1_reg_390 = bytes_to_write_reg_1182.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_empty_n_phi_fu_379_p8.read()))) {
            bytes_to_write_1_reg_390 = bytes_to_write_2_fu_794_p1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1032_p2.read()))) {
        first_flag_1_reg_471 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_565_p2.read()))) {
        first_flag_1_reg_471 = first_flag_reg_327.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_1085.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_514_p2.read()))) {
        first_flag_reg_327 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, first_load_load_fu_510_p1.read()))) {
        first_flag_reg_327 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1032_p2.read()))) {
        first_new_1_reg_483 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_565_p2.read()))) {
        first_new_1_reg_483 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_920_p2.read()))) {
        h2_reg_449 = h_2_fu_926_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_empty_n_phi_fu_379_p8.read()) || 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_799_p2.read())))) {
        h2_reg_449 = ap_const_lv15_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        h_reg_351 = h_1_reg_1192.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_757_p2.read()))) {
        h_reg_351 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1032_p2.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_0, tmp_6_fu_1044_p1.read()))) {
        head_0 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && 
                esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_0) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read())))) {
        head_0 = val_assign_1_reg_439.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1032_p2.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_1, tmp_6_fu_1044_p1.read()))) {
        head_1 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && 
                esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_1) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read())))) {
        head_1 = val_assign_1_reg_439.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1032_p2.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_2, tmp_6_fu_1044_p1.read()))) {
        head_2 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && 
                esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_2) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read())))) {
        head_2 = val_assign_1_reg_439.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1032_p2.read()) && 
         esl_seteq<1,2,2>(ap_const_lv2_3, tmp_6_fu_1044_p1.read()))) {
        head_3 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && 
                esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_3) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read())))) {
        head_3 = val_assign_1_reg_439.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_514_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_535_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_1, first_load_reg_1085.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_535_p2.read()))))) {
        i1_reg_460 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1032_p2.read()))) {
        i1_reg_460 = i_2_fu_1038_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, first_load_load_fu_510_p1.read()))) {
        i_reg_316 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_316 = i_1_reg_1092.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read()))))) {
        p_s_reg_400 = part_V_1_fu_899_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_empty_n_phi_fu_379_p8.read()))) {
        p_s_reg_400 = part_V_fu_850_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_514_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_535_p2.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_535_p2.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, first_load_reg_1085.read()))))) {
        stride_reg_340 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read())))) {
        stride_reg_340 = stride_1_reg_1112.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read()))))) {
        t_V_reg_411 = word_V_fu_905_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_empty_n_phi_fu_379_p8.read()))) {
        t_V_reg_411 = ap_const_lv4_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        val_assign_1_reg_439 = stream_head_2_cast_reg_1234.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_empty_n_phi_fu_379_p8.read()) || 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_799_p2.read())))) {
        val_assign_1_reg_439 = stream_head_reg_1168.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_757_p2.read()))) {
        bytes_to_write_reg_1182 = bytes_to_write_fu_789_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_load_reg_1239 = data_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_first_flag_1_phi_fu_475_p4.read()))) {
        first = first_new_1_reg_483.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        first_load_reg_1085 = first.read();
        tmp_27_cast_reg_1078 = tmp_27_cast_fu_506_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        h_1_reg_1192 = h_1_fu_804_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_1085.read()))) {
        i_1_reg_1092 = i_1_fu_520_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        idx_cast5_reg_1163 = idx_cast5_fu_669_p1.read();
        or_cond_reg_1178 = or_cond_fu_757_p2.read();
        stream_head_reg_1168 = stream_head_fu_676_p3.read();
        words_reg_1173 = words_fu_698_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_565_p2.read()))) {
        idx_cast_reg_1130 = idx_cast_fu_593_p1.read();
        idx_reg_1125 = idx_fu_581_p5.read();
        output_V2_sum_reg_1135 = output_V2_sum_fu_607_p2.read();
        tmp_13_reg_1117 = tmp_13_fu_577_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, tmp_3_reg_1102.read()))) {
        local_words_0 = useable_words_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,2,2>(ap_const_lv2_1, tmp_3_reg_1102.read()))) {
        local_words_1 = useable_words_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,2,2>(ap_const_lv2_2, tmp_3_reg_1102.read()))) {
        local_words_2 = useable_words_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,2,2>(ap_const_lv2_3, tmp_3_reg_1102.read()))) {
        local_words_3 = useable_words_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        output_V2_sum3_reg_1250 = output_V2_sum3_fu_988_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_920_p2.read()))) {
        output_V2_sum4_reg_1229 = output_V2_sum4_fu_950_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(gmem_out_RVALID.read(), ap_const_logic_1))) {
        sel_tmp3_i_reg_1146 = sel_tmp3_i_fu_652_p3.read();
        sel_tmp4_i_reg_1151 = sel_tmp4_i_fu_660_p2.read();
        stream_tail_reg_1156 = stream_tail_fu_665_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_920_p2.read()))) {
        stream_head_2_cast_reg_1234 = stream_head_2_cast_fu_965_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        stride_1_reg_1112 = stride_1_fu_571_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_16_reg_1215 = tmp_16_fu_920_p2.read();
        tmp_16_reg_1215_pp1_iter1_reg = tmp_16_reg_1215.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        tmp_16_reg_1215_pp1_iter2_reg = tmp_16_reg_1215_pp1_iter1_reg.read();
        tmp_16_reg_1215_pp1_iter3_reg = tmp_16_reg_1215_pp1_iter2_reg.read();
        tmp_16_reg_1215_pp1_iter4_reg = tmp_16_reg_1215_pp1_iter3_reg.read();
        tmp_16_reg_1215_pp1_iter5_reg = tmp_16_reg_1215_pp1_iter4_reg.read();
        tmp_16_reg_1215_pp1_iter6_reg = tmp_16_reg_1215_pp1_iter5_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, first_load_reg_1085.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_514_p2.read()))) {
        tmp_3_reg_1102 = tmp_3_fu_531_p1.read();
    }
}

void circ_buff_write_many128::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[16];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[17];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[18];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[19];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[24];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[25];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[26];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void circ_buff_write_many128::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void circ_buff_write_many128::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_write_many128::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter6_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read()));
}

void circ_buff_write_many128::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state19_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter6_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read())));
}

void circ_buff_write_many128::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state19_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter6_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read())));
}

void circ_buff_write_many128::thread_ap_block_state15() {
    ap_block_state15 = ((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read())));
}

void circ_buff_write_many128::thread_ap_block_state17_pp1_stage0_iter0() {
    ap_block_state17_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_write_many128::thread_ap_block_state18_io() {
    ap_block_state18_io = (esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_out_AWREADY.read()));
}

void circ_buff_write_many128::thread_ap_block_state18_pp1_stage0_iter1() {
    ap_block_state18_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_write_many128::thread_ap_block_state19_io() {
    ap_block_state19_io = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_out_WREADY.read()));
}

void circ_buff_write_many128::thread_ap_block_state19_pp1_stage0_iter2() {
    ap_block_state19_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_write_many128::thread_ap_block_state20_pp1_stage0_iter3() {
    ap_block_state20_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_write_many128::thread_ap_block_state21_pp1_stage0_iter4() {
    ap_block_state21_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_write_many128::thread_ap_block_state22_pp1_stage0_iter5() {
    ap_block_state22_pp1_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_write_many128::thread_ap_block_state23_pp1_stage0_iter6() {
    ap_block_state23_pp1_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void circ_buff_write_many128::thread_ap_block_state24_pp1_stage0_iter7() {
    ap_block_state24_pp1_stage0_iter7 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter6_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read()));
}

void circ_buff_write_many128::thread_ap_block_state32() {
    ap_block_state32 = (esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read()));
}

void circ_buff_write_many128::thread_ap_condition_685() {
    ap_condition_685 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0));
}

void circ_buff_write_many128::thread_ap_condition_695() {
    ap_condition_695 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0));
}

void circ_buff_write_many128::thread_ap_condition_pp1_exit_iter0_state17() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_920_p2.read())) {
        ap_condition_pp1_exit_iter0_state17 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state17 = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void circ_buff_write_many128::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter7.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_ap_phi_mux_empty_n_phi_fu_379_p8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read()))) {
        if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_0)) {
            ap_phi_mux_empty_n_phi_fu_379_p8 =  (sc_lv<1>) (fifo_in_0_V_TVALID.read());
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_1)) {
            ap_phi_mux_empty_n_phi_fu_379_p8 =  (sc_lv<1>) (fifo_in_1_V_TVALID.read());
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_2)) {
            ap_phi_mux_empty_n_phi_fu_379_p8 =  (sc_lv<1>) (fifo_in_2_V_TVALID.read());
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_3)) {
            ap_phi_mux_empty_n_phi_fu_379_p8 =  (sc_lv<1>) (fifo_in_3_V_TVALID.read());
        } else {
            ap_phi_mux_empty_n_phi_fu_379_p8 =  (sc_lv<1>) ("X");
        }
    } else {
        ap_phi_mux_empty_n_phi_fu_379_p8 =  (sc_lv<1>) ("X");
    }
}

void circ_buff_write_many128::thread_ap_phi_mux_first_flag_1_phi_fu_475_p4() {
    ap_phi_mux_first_flag_1_phi_fu_475_p4 = first_flag_1_reg_471.read();
}

void circ_buff_write_many128::thread_ap_phi_mux_low_phi_fu_366_p8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read()))) {
        if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_0)) {
            ap_phi_mux_low_phi_fu_366_p8 = fifo_in_0_V_TDATA.read();
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_1)) {
            ap_phi_mux_low_phi_fu_366_p8 = fifo_in_1_V_TDATA.read();
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_2)) {
            ap_phi_mux_low_phi_fu_366_p8 = fifo_in_2_V_TDATA.read();
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_3)) {
            ap_phi_mux_low_phi_fu_366_p8 = fifo_in_3_V_TDATA.read();
        } else {
            ap_phi_mux_low_phi_fu_366_p8 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ap_phi_mux_low_phi_fu_366_p8 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void circ_buff_write_many128::thread_ap_phi_mux_tmp_161_phi_fu_425_p8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()))) {
        if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_0)) {
            ap_phi_mux_tmp_161_phi_fu_425_p8 = fifo_in_0_V_TDATA.read();
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_1)) {
            ap_phi_mux_tmp_161_phi_fu_425_p8 = fifo_in_1_V_TDATA.read();
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_2)) {
            ap_phi_mux_tmp_161_phi_fu_425_p8 = fifo_in_2_V_TDATA.read();
        } else if (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_3)) {
            ap_phi_mux_tmp_161_phi_fu_425_p8 = fifo_in_3_V_TDATA.read();
        } else {
            ap_phi_mux_tmp_161_phi_fu_425_p8 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        ap_phi_mux_tmp_161_phi_fu_425_p8 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void circ_buff_write_many128::thread_ap_phi_mux_val_assign_1_phi_fu_442_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1))) {
        ap_phi_mux_val_assign_1_phi_fu_442_p4 = stream_head_2_cast_reg_1234.read();
    } else {
        ap_phi_mux_val_assign_1_phi_fu_442_p4 = val_assign_1_reg_439.read();
    }
}

void circ_buff_write_many128::thread_ap_predicate_op186_read_state15() {
    ap_predicate_op186_read_state15 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_2));
}

void circ_buff_write_many128::thread_ap_predicate_op188_read_state15() {
    ap_predicate_op188_read_state15 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_1));
}

void circ_buff_write_many128::thread_ap_predicate_op190_read_state15() {
    ap_predicate_op190_read_state15 = (esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()));
}

void circ_buff_write_many128::thread_ap_predicate_op192_read_state15() {
    ap_predicate_op192_read_state15 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_3));
}

void circ_buff_write_many128::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void circ_buff_write_many128::thread_ap_sig_ioackin_gmem_out_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_ARREADY.read())) {
        ap_sig_ioackin_gmem_out_ARREADY = gmem_out_ARREADY.read();
    } else {
        ap_sig_ioackin_gmem_out_ARREADY = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_ap_sig_ioackin_gmem_out_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_AWREADY.read())) {
        ap_sig_ioackin_gmem_out_AWREADY = gmem_out_AWREADY.read();
    } else {
        ap_sig_ioackin_gmem_out_AWREADY = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_ap_sig_ioackin_gmem_out_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_WREADY.read())) {
        ap_sig_ioackin_gmem_out_WREADY = gmem_out_WREADY.read();
    } else {
        ap_sig_ioackin_gmem_out_WREADY = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_bytes_to_write_2_fu_794_p1() {
    bytes_to_write_2_fu_794_p1 = esl_zext<16,15>(h_reg_351.read());
}

void circ_buff_write_many128::thread_bytes_to_write_fu_789_p2() {
    bytes_to_write_fu_789_p2 = (!p_neg150_pn_fu_781_p3.read().is_01() || !stream_tail_reg_1156.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_neg150_pn_fu_781_p3.read()) + sc_biguint<16>(stream_tail_reg_1156.read()));
}

void circ_buff_write_many128::thread_data_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        data_V_address0 =  (sc_lv<9>) (tmp_20_fu_945_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        data_V_address0 =  (sc_lv<9>) (tmp_17_fu_911_p1.read());
    } else {
        data_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void circ_buff_write_many128::thread_data_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        data_V_ce0 = ap_const_logic_1;
    } else {
        data_V_ce0 = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_data_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        data_V_we0 = ap_const_logic_1;
    } else {
        data_V_we0 = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_exitcond1_fu_565_p2() {
    exitcond1_fu_565_p2 = (!stride_reg_340.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(stride_reg_340.read() == ap_const_lv3_4);
}

void circ_buff_write_many128::thread_exitcond_fu_1032_p2() {
    exitcond_fu_1032_p2 = (!i1_reg_460.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_460.read() == ap_const_lv3_4);
}

void circ_buff_write_many128::thread_fifo_in_0_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()))) {
        fifo_in_0_V_TDATA_blk_n = fifo_in_0_V_TVALID.read();
    } else {
        fifo_in_0_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_fifo_in_0_V_TREADY() {
    if (((esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read())))))) {
        fifo_in_0_V_TREADY = ap_const_logic_1;
    } else {
        fifo_in_0_V_TREADY = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_fifo_in_1_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && 
         esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_1))) {
        fifo_in_1_V_TDATA_blk_n = fifo_in_1_V_TVALID.read();
    } else {
        fifo_in_1_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_fifo_in_1_V_TREADY() {
    if (((esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read())))))) {
        fifo_in_1_V_TREADY = ap_const_logic_1;
    } else {
        fifo_in_1_V_TREADY = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_fifo_in_2_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && 
         esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_2))) {
        fifo_in_2_V_TDATA_blk_n = fifo_in_2_V_TVALID.read();
    } else {
        fifo_in_2_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_fifo_in_2_V_TREADY() {
    if (((esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read())))))) {
        fifo_in_2_V_TREADY = ap_const_logic_1;
    } else {
        fifo_in_2_V_TREADY = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_fifo_in_3_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && 
         esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_3))) {
        fifo_in_3_V_TDATA_blk_n = fifo_in_3_V_TVALID.read();
    } else {
        fifo_in_3_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_fifo_in_3_V_TREADY() {
    if (((esl_seteq<1,2,2>(tmp_13_reg_1117.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_11_fu_799_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read())))))) {
        fifo_in_3_V_TREADY = ap_const_logic_1;
    } else {
        fifo_in_3_V_TREADY = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_first_load_load_fu_510_p1() {
    first_load_load_fu_510_p1 = first.read();
}

void circ_buff_write_many128::thread_gmem_out_ARADDR() {
    gmem_out_ARADDR =  (sc_lv<32>) (output_V2_sum_cast_fu_612_p1.read());
}

void circ_buff_write_many128::thread_gmem_out_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_ARREADY.read()))) {
        gmem_out_ARVALID = ap_const_logic_1;
    } else {
        gmem_out_ARVALID = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_gmem_out_AWADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_AWREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
            gmem_out_AWADDR =  (sc_lv<32>) (output_V2_sum3_cast_fu_993_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_685.read(), ap_const_boolean_1)) {
            gmem_out_AWADDR =  (sc_lv<32>) (output_V2_sum4_cast_fu_969_p1.read());
        } else {
            gmem_out_AWADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        gmem_out_AWADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void circ_buff_write_many128::thread_gmem_out_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_AWREADY.read())))) {
        gmem_out_AWVALID = ap_const_logic_1;
    } else {
        gmem_out_AWVALID = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_gmem_out_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter6_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read()))))) {
        gmem_out_BREADY = ap_const_logic_1;
    } else {
        gmem_out_BREADY = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_gmem_out_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(gmem_out_RVALID.read(), ap_const_logic_1))) {
        gmem_out_RREADY = ap_const_logic_1;
    } else {
        gmem_out_RREADY = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_gmem_out_WDATA() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_WREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            gmem_out_WDATA = p_1_fu_1003_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_695.read(), ap_const_boolean_1)) {
            gmem_out_WDATA = data_V_load_reg_1239.read();
        } else {
            gmem_out_WDATA =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        gmem_out_WDATA =  (sc_lv<128>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void circ_buff_write_many128::thread_gmem_out_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_01001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_out_WREADY.read())))) {
        gmem_out_WVALID = ap_const_logic_1;
    } else {
        gmem_out_WVALID = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_gmem_out_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        gmem_out_blk_n_AR = m_axi_gmem_out_ARREADY.read();
    } else {
        gmem_out_blk_n_AR = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_gmem_out_blk_n_AW() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_16_reg_1215.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        gmem_out_blk_n_AW = m_axi_gmem_out_AWREADY.read();
    } else {
        gmem_out_blk_n_AW = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_gmem_out_blk_n_B() {
    if (((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter6_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read())))) {
        gmem_out_blk_n_B = m_axi_gmem_out_BVALID.read();
    } else {
        gmem_out_blk_n_B = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_gmem_out_blk_n_R() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        gmem_out_blk_n_R = m_axi_gmem_out_RVALID.read();
    } else {
        gmem_out_blk_n_R = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_gmem_out_blk_n_W() {
    if (((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_reg_1215_pp1_iter1_reg.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        gmem_out_blk_n_W = m_axi_gmem_out_WREADY.read();
    } else {
        gmem_out_blk_n_W = ap_const_logic_1;
    }
}

void circ_buff_write_many128::thread_h2_cast_fu_916_p1() {
    h2_cast_fu_916_p1 = esl_zext<16,15>(h2_reg_449.read());
}

void circ_buff_write_many128::thread_h_1_fu_804_p2() {
    h_1_fu_804_p2 = (!h_reg_351.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(h_reg_351.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void circ_buff_write_many128::thread_h_2_fu_926_p2() {
    h_2_fu_926_p2 = (!h2_reg_449.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(h2_reg_449.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void circ_buff_write_many128::thread_hi_fu_863_p1() {
    hi_fu_863_p1 = ap_phi_mux_tmp_161_phi_fu_425_p8.read().range(32-1, 0);
}

void circ_buff_write_many128::thread_hi_p_V_fu_867_p1() {
    hi_p_V_fu_867_p1 = esl_zext<128,32>(hi_fu_863_p1.read());
}

void circ_buff_write_many128::thread_i_1_fu_520_p2() {
    i_1_fu_520_p2 = (!i_reg_316.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_316.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void circ_buff_write_many128::thread_i_2_fu_1038_p2() {
    i_2_fu_1038_p2 = (!i1_reg_460.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_reg_460.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void circ_buff_write_many128::thread_idx_cast5_fu_669_p1() {
    idx_cast5_fu_669_p1 = esl_zext<17,11>(idx_reg_1125.read());
}

void circ_buff_write_many128::thread_idx_cast_fu_593_p1() {
    idx_cast_fu_593_p1 = esl_zext<12,11>(idx_fu_581_p5.read());
}

void circ_buff_write_many128::thread_idx_fu_581_p5() {
    idx_fu_581_p5 = esl_concat<10,1>(esl_concat<8,2>(esl_concat<2,6>(tmp_13_fu_577_p1.read(), ap_const_lv6_0), tmp_13_fu_577_p1.read()), ap_const_lv1_0);
}

void circ_buff_write_many128::thread_op2_assign_fu_875_p5() {
    op2_assign_fu_875_p5 = t_V_reg_411.read().range(2-1, 0);
}

void circ_buff_write_many128::thread_or_cond_fu_757_p2() {
    or_cond_fu_757_p2 = (tmp_9_fu_741_p2.read() | tmp_5_fu_751_p2.read());
}

void circ_buff_write_many128::thread_output_V2_sum3_cast_fu_993_p1() {
    output_V2_sum3_cast_fu_993_p1 = esl_zext<64,29>(output_V2_sum3_reg_1250.read());
}

void circ_buff_write_many128::thread_output_V2_sum3_fu_988_p2() {
    output_V2_sum3_fu_988_p2 = (!tmp_25_cast_fu_984_p1.read().is_01() || !tmp_27_cast_reg_1078.read().is_01())? sc_lv<29>(): (sc_biguint<29>(tmp_25_cast_fu_984_p1.read()) + sc_biguint<29>(tmp_27_cast_reg_1078.read()));
}

void circ_buff_write_many128::thread_output_V2_sum4_cast_fu_969_p1() {
    output_V2_sum4_cast_fu_969_p1 = esl_zext<64,29>(output_V2_sum4_reg_1229.read());
}

void circ_buff_write_many128::thread_output_V2_sum4_fu_950_p2() {
    output_V2_sum4_fu_950_p2 = (!tmp_27_cast_reg_1078.read().is_01() || !tmp_21_cast_fu_941_p1.read().is_01())? sc_lv<29>(): (sc_biguint<29>(tmp_27_cast_reg_1078.read()) + sc_biguint<29>(tmp_21_cast_fu_941_p1.read()));
}

void circ_buff_write_many128::thread_output_V2_sum_cast_fu_612_p1() {
    output_V2_sum_cast_fu_612_p1 = esl_zext<64,29>(output_V2_sum_reg_1135.read());
}

void circ_buff_write_many128::thread_output_V2_sum_fu_607_p2() {
    output_V2_sum_fu_607_p2 = (!tmp_27_cast_reg_1078.read().is_01() || !tmp_3_cast_fu_603_p1.read().is_01())? sc_lv<29>(): (sc_biguint<29>(tmp_27_cast_reg_1078.read()) + sc_biguint<29>(tmp_3_cast_fu_603_p1.read()));
}

void circ_buff_write_many128::thread_p_1_fu_1003_p1() {
    p_1_fu_1003_p1 = esl_zext<128,16>(val_assign_1_reg_439.read());
}

void circ_buff_write_many128::thread_p_neg150_pn_fu_781_p3() {
    p_neg150_pn_fu_781_p3 = (!tmp_7_fu_763_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_7_fu_763_p2.read()[0].to_bool())? p_neg_fu_769_p2.read(): tmp_10_fu_775_p2.read());
}

void circ_buff_write_many128::thread_p_neg_fu_769_p2() {
    p_neg_fu_769_p2 = (stream_head_fu_676_p3.read() ^ ap_const_lv16_FFFF);
}

void circ_buff_write_many128::thread_part_V_1_fu_899_p2() {
    part_V_1_fu_899_p2 = (r_V_fu_893_p2.read() | p_s_reg_400.read());
}

void circ_buff_write_many128::thread_part_V_fu_850_p1() {
    part_V_fu_850_p1 = esl_zext<128,64>(ap_phi_mux_low_phi_fu_366_p8.read());
}

void circ_buff_write_many128::thread_r_V_fu_893_p2() {
    r_V_fu_893_p2 = (!tmp_24_fu_889_p1.read().is_01())? sc_lv<128>(): hi_p_V_fu_867_p1.read() << (unsigned short)tmp_24_fu_889_p1.read().to_uint();
}

void circ_buff_write_many128::thread_sel_tmp1_i_fu_639_p3() {
    sel_tmp1_i_fu_639_p3 = (!sel_tmp_i_fu_634_p2.read()[0].is_01())? sc_lv<16>(): ((sel_tmp_i_fu_634_p2.read()[0].to_bool())? head_0.read(): head_3.read());
}

void circ_buff_write_many128::thread_sel_tmp2_i_fu_647_p2() {
    sel_tmp2_i_fu_647_p2 = (!tmp_13_reg_1117.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_reg_1117.read() == ap_const_lv2_1);
}

void circ_buff_write_many128::thread_sel_tmp3_i_fu_652_p3() {
    sel_tmp3_i_fu_652_p3 = (!sel_tmp2_i_fu_647_p2.read()[0].is_01())? sc_lv<16>(): ((sel_tmp2_i_fu_647_p2.read()[0].to_bool())? head_1.read(): sel_tmp1_i_fu_639_p3.read());
}

void circ_buff_write_many128::thread_sel_tmp4_i_fu_660_p2() {
    sel_tmp4_i_fu_660_p2 = (!tmp_13_reg_1117.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_reg_1117.read() == ap_const_lv2_2);
}

void circ_buff_write_many128::thread_sel_tmp_i_fu_634_p2() {
    sel_tmp_i_fu_634_p2 = (!tmp_13_reg_1117.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_reg_1117.read() == ap_const_lv2_0);
}

void circ_buff_write_many128::thread_stream_head_1_fu_959_p2() {
    stream_head_1_fu_959_p2 = (!ap_const_lv9_1.is_01() || !tmp_29_fu_955_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(tmp_29_fu_955_p1.read()));
}

void circ_buff_write_many128::thread_stream_head_2_cast_fu_965_p1() {
    stream_head_2_cast_fu_965_p1 = esl_zext<16,9>(stream_head_1_fu_959_p2.read());
}

void circ_buff_write_many128::thread_stream_head_fu_676_p3() {
    stream_head_fu_676_p3 = (!sel_tmp4_i_reg_1151.read()[0].is_01())? sc_lv<16>(): ((sel_tmp4_i_reg_1151.read()[0].to_bool())? head_2.read(): sel_tmp3_i_reg_1146.read());
}

void circ_buff_write_many128::thread_stream_tail_fu_665_p1() {
    stream_tail_fu_665_p1 = gmem_out_RDATA.read().range(16-1, 0);
}

void circ_buff_write_many128::thread_stride_1_fu_571_p2() {
    stride_1_fu_571_p2 = (!stride_reg_340.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(stride_reg_340.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void circ_buff_write_many128::thread_tmp_10_cast_fu_747_p1() {
    tmp_10_cast_fu_747_p1 = esl_zext<17,9>(tmp_8_cast4_fu_725_p2.read());
}

void circ_buff_write_many128::thread_tmp_10_fu_775_p2() {
    tmp_10_fu_775_p2 = (!ap_const_lv16_1FF.is_01() || !stream_head_fu_676_p3.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1FF) - sc_biguint<16>(stream_head_fu_676_p3.read()));
}

void circ_buff_write_many128::thread_tmp_11_fu_799_p2() {
    tmp_11_fu_799_p2 = (!bytes_to_write_2_fu_794_p1.read().is_01() || !bytes_to_write_reg_1182.read().is_01())? sc_lv<1>(): (sc_bigint<16>(bytes_to_write_2_fu_794_p1.read()) < sc_bigint<16>(bytes_to_write_reg_1182.read()));
}

void circ_buff_write_many128::thread_tmp_13_fu_577_p1() {
    tmp_13_fu_577_p1 = stride_reg_340.read().range(2-1, 0);
}

void circ_buff_write_many128::thread_tmp_14_fu_858_p2() {
    tmp_14_fu_858_p2 = (!tmp_19_cast_fu_854_p1.read().is_01() || !words_reg_1173.read().is_01())? sc_lv<1>(): (sc_biguint<8>(tmp_19_cast_fu_854_p1.read()) < sc_biguint<8>(words_reg_1173.read()));
}

void circ_buff_write_many128::thread_tmp_16_fu_920_p2() {
    tmp_16_fu_920_p2 = (!h2_cast_fu_916_p1.read().is_01() || !bytes_to_write_1_reg_390.read().is_01())? sc_lv<1>(): (sc_bigint<16>(h2_cast_fu_916_p1.read()) < sc_bigint<16>(bytes_to_write_1_reg_390.read()));
}

void circ_buff_write_many128::thread_tmp_17_fu_911_p1() {
    tmp_17_fu_911_p1 = esl_zext<64,15>(h_reg_351.read());
}

void circ_buff_write_many128::thread_tmp_19_cast_fu_854_p1() {
    tmp_19_cast_fu_854_p1 = esl_zext<8,4>(t_V_reg_411.read());
}

void circ_buff_write_many128::thread_tmp_19_fu_936_p2() {
    tmp_19_fu_936_p2 = (!tmp_28_cast_fu_932_p1.read().is_01() || !idx_cast5_reg_1163.read().is_01())? sc_lv<17>(): (sc_biguint<17>(tmp_28_cast_fu_932_p1.read()) + sc_biguint<17>(idx_cast5_reg_1163.read()));
}

void circ_buff_write_many128::thread_tmp_1_fu_514_p2() {
    tmp_1_fu_514_p2 = (!i_reg_316.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_316.read() == ap_const_lv3_4);
}

void circ_buff_write_many128::thread_tmp_20_fu_945_p1() {
    tmp_20_fu_945_p1 = esl_zext<64,15>(h2_reg_449.read());
}

void circ_buff_write_many128::thread_tmp_21_cast_fu_941_p1() {
    tmp_21_cast_fu_941_p1 = esl_zext<29,17>(tmp_19_fu_936_p2.read());
}

void circ_buff_write_many128::thread_tmp_21_fu_715_p1() {
    tmp_21_fu_715_p1 = stream_head_fu_676_p3.read().range(9-1, 0);
}

void circ_buff_write_many128::thread_tmp_22_fu_979_p2() {
    tmp_22_fu_979_p2 = (!idx_cast_reg_1130.read().is_01() || !ap_const_lv12_201.is_01())? sc_lv<12>(): (sc_biguint<12>(idx_cast_reg_1130.read()) + sc_biguint<12>(ap_const_lv12_201));
}

void circ_buff_write_many128::thread_tmp_24_fu_889_p1() {
    tmp_24_fu_889_p1 = esl_zext<128,8>(op2_assign_fu_875_p6.read());
}

void circ_buff_write_many128::thread_tmp_25_cast_fu_984_p1() {
    tmp_25_cast_fu_984_p1 = esl_zext<29,12>(tmp_22_fu_979_p2.read());
}

void circ_buff_write_many128::thread_tmp_27_cast_fu_506_p1() {
    tmp_27_cast_fu_506_p1 = esl_zext<29,28>(tmp_fu_496_p4.read());
}

void circ_buff_write_many128::thread_tmp_28_cast_fu_932_p1() {
    tmp_28_cast_fu_932_p1 = esl_zext<17,16>(ap_phi_mux_val_assign_1_phi_fu_442_p4.read());
}

void circ_buff_write_many128::thread_tmp_29_fu_955_p1() {
    tmp_29_fu_955_p1 = ap_phi_mux_val_assign_1_phi_fu_442_p4.read().range(9-1, 0);
}

void circ_buff_write_many128::thread_tmp_2_fu_526_p1() {
    tmp_2_fu_526_p1 = esl_zext<64,3>(i_reg_316.read());
}

void circ_buff_write_many128::thread_tmp_3_cast_fu_603_p1() {
    tmp_3_cast_fu_603_p1 = esl_zext<29,12>(tmp_s_fu_597_p2.read());
}

void circ_buff_write_many128::thread_tmp_3_fu_531_p1() {
    tmp_3_fu_531_p1 = i_reg_316.read().range(2-1, 0);
}

void circ_buff_write_many128::thread_tmp_4_fu_535_p2() {
    tmp_4_fu_535_p2 = (!reset.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(reset.read() == ap_const_lv8_1);
}

void circ_buff_write_many128::thread_tmp_5_cast3_fu_735_p1() {
    tmp_5_cast3_fu_735_p1 = esl_zext<17,16>(stream_tail_reg_1156.read());
}

void circ_buff_write_many128::thread_tmp_5_cast_fu_738_p1() {
    tmp_5_cast_fu_738_p1 = esl_zext<18,16>(stream_tail_reg_1156.read());
}

void circ_buff_write_many128::thread_tmp_5_fu_751_p2() {
    tmp_5_fu_751_p2 = (!tmp_10_cast_fu_747_p1.read().is_01() || !tmp_5_cast3_fu_735_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_cast_fu_747_p1.read() == tmp_5_cast3_fu_735_p1.read());
}

void circ_buff_write_many128::thread_tmp_6_cast_fu_711_p1() {
    tmp_6_cast_fu_711_p1 = esl_zext<17,16>(stream_head_fu_676_p3.read());
}

void circ_buff_write_many128::thread_tmp_6_fu_1044_p1() {
    tmp_6_fu_1044_p1 = i1_reg_460.read().range(2-1, 0);
}

void circ_buff_write_many128::thread_tmp_7_fu_763_p2() {
    tmp_7_fu_763_p2 = (!tmp_8_fu_719_p2.read().is_01() || !tmp_5_cast3_fu_735_p1.read().is_01())? sc_lv<1>(): (sc_biguint<17>(tmp_8_fu_719_p2.read()) < sc_biguint<17>(tmp_5_cast3_fu_735_p1.read()));
}

void circ_buff_write_many128::thread_tmp_8_cast4_fu_725_p2() {
    tmp_8_cast4_fu_725_p2 = (!ap_const_lv9_1.is_01() || !tmp_21_fu_715_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(tmp_21_fu_715_p1.read()));
}

void circ_buff_write_many128::thread_tmp_8_cast_fu_731_p1() {
    tmp_8_cast_fu_731_p1 = esl_zext<18,17>(tmp_8_fu_719_p2.read());
}

void circ_buff_write_many128::thread_tmp_8_fu_719_p2() {
    tmp_8_fu_719_p2 = (!ap_const_lv17_1.is_01() || !tmp_6_cast_fu_711_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_1) + sc_biguint<17>(tmp_6_cast_fu_711_p1.read()));
}

void circ_buff_write_many128::thread_tmp_9_fu_741_p2() {
    tmp_9_fu_741_p2 = (!tmp_8_cast_fu_731_p1.read().is_01() || !tmp_5_cast_fu_738_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_cast_fu_731_p1.read() == tmp_5_cast_fu_738_p1.read());
}

void circ_buff_write_many128::thread_tmp_fu_496_p4() {
    tmp_fu_496_p4 = output_V.read().range(31, 4);
}

void circ_buff_write_many128::thread_tmp_s_fu_597_p2() {
    tmp_s_fu_597_p2 = (!ap_const_lv12_200.is_01() || !idx_cast_fu_593_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_200) + sc_biguint<12>(idx_cast_fu_593_p1.read()));
}

void circ_buff_write_many128::thread_useable_words_address0() {
    useable_words_address0 =  (sc_lv<2>) (tmp_2_fu_526_p1.read());
}

void circ_buff_write_many128::thread_useable_words_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        useable_words_ce0 = ap_const_logic_1;
    } else {
        useable_words_ce0 = ap_const_logic_0;
    }
}

void circ_buff_write_many128::thread_word_V_fu_905_p2() {
    word_V_fu_905_p2 = (!ap_const_lv4_1.is_01() || !t_V_reg_411.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(t_V_reg_411.read()));
}

void circ_buff_write_many128::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_514_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_535_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, first_load_reg_1085.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_535_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_514_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_535_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_535_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, first_load_reg_1085.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_565_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_out_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(gmem_out_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_757_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_empty_n_phi_fu_379_p8.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_799_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_858_p2.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && !((esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_2_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op186_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_1_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op188_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_0_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op190_read_state15.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, fifo_in_3_V_TVALID.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op192_read_state15.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_858_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 65536 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter7.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter6.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_920_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter6.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_920_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_out_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_out_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_reg_1178.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_out_BVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1032_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<27>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void circ_buff_write_many128::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_out_AWVALID\" :  \"" << m_axi_gmem_out_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_AWREADY\" :  \"" << m_axi_gmem_out_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWADDR\" :  \"" << m_axi_gmem_out_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWID\" :  \"" << m_axi_gmem_out_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWLEN\" :  \"" << m_axi_gmem_out_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWSIZE\" :  \"" << m_axi_gmem_out_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWBURST\" :  \"" << m_axi_gmem_out_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWLOCK\" :  \"" << m_axi_gmem_out_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWCACHE\" :  \"" << m_axi_gmem_out_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWPROT\" :  \"" << m_axi_gmem_out_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWQOS\" :  \"" << m_axi_gmem_out_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWREGION\" :  \"" << m_axi_gmem_out_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_AWUSER\" :  \"" << m_axi_gmem_out_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_WVALID\" :  \"" << m_axi_gmem_out_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_WREADY\" :  \"" << m_axi_gmem_out_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_WDATA\" :  \"" << m_axi_gmem_out_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_WSTRB\" :  \"" << m_axi_gmem_out_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_WLAST\" :  \"" << m_axi_gmem_out_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_WID\" :  \"" << m_axi_gmem_out_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_WUSER\" :  \"" << m_axi_gmem_out_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARVALID\" :  \"" << m_axi_gmem_out_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_ARREADY\" :  \"" << m_axi_gmem_out_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARADDR\" :  \"" << m_axi_gmem_out_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARID\" :  \"" << m_axi_gmem_out_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARLEN\" :  \"" << m_axi_gmem_out_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARSIZE\" :  \"" << m_axi_gmem_out_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARBURST\" :  \"" << m_axi_gmem_out_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARLOCK\" :  \"" << m_axi_gmem_out_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARCACHE\" :  \"" << m_axi_gmem_out_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARPROT\" :  \"" << m_axi_gmem_out_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARQOS\" :  \"" << m_axi_gmem_out_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARREGION\" :  \"" << m_axi_gmem_out_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_ARUSER\" :  \"" << m_axi_gmem_out_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_RVALID\" :  \"" << m_axi_gmem_out_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_RREADY\" :  \"" << m_axi_gmem_out_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_RDATA\" :  \"" << m_axi_gmem_out_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_RLAST\" :  \"" << m_axi_gmem_out_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_RID\" :  \"" << m_axi_gmem_out_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_RUSER\" :  \"" << m_axi_gmem_out_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_RRESP\" :  \"" << m_axi_gmem_out_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_BVALID\" :  \"" << m_axi_gmem_out_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_out_BREADY\" :  \"" << m_axi_gmem_out_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_BRESP\" :  \"" << m_axi_gmem_out_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_BID\" :  \"" << m_axi_gmem_out_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_out_BUSER\" :  \"" << m_axi_gmem_out_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_in_0_V_TDATA\" :  \"" << fifo_in_0_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_in_0_V_TVALID\" :  \"" << fifo_in_0_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_in_0_V_TREADY\" :  \"" << fifo_in_0_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_in_1_V_TDATA\" :  \"" << fifo_in_1_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_in_1_V_TVALID\" :  \"" << fifo_in_1_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_in_1_V_TREADY\" :  \"" << fifo_in_1_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_in_2_V_TDATA\" :  \"" << fifo_in_2_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_in_2_V_TVALID\" :  \"" << fifo_in_2_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_in_2_V_TREADY\" :  \"" << fifo_in_2_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_in_3_V_TDATA\" :  \"" << fifo_in_3_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fifo_in_3_V_TVALID\" :  \"" << fifo_in_3_V_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fifo_in_3_V_TREADY\" :  \"" << fifo_in_3_V_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

