// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _circ_buff_write_many128_HH_
#define _circ_buff_write_many128_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "circ_buff_write_many128_mux_42_8_1_1.h"
#include "circ_buff_write_many128_data_V.h"
#include "circ_buff_write_many128_control_s_axi.h"
#include "circ_buff_write_many128_gmem_out_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_OUT_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_OUT_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_OUT_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_OUT_DATA_WIDTH = 128,
         unsigned int C_M_AXI_GMEM_OUT_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_OUT_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_OUT_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_OUT_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct circ_buff_write_many128 : public sc_module {
    // Port declarations 77
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_out_AWVALID;
    sc_in< sc_logic > m_axi_gmem_out_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_ADDR_WIDTH> > m_axi_gmem_out_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_ID_WIDTH> > m_axi_gmem_out_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_out_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_out_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_out_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_out_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_out_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_out_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_out_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_out_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_AWUSER_WIDTH> > m_axi_gmem_out_AWUSER;
    sc_out< sc_logic > m_axi_gmem_out_WVALID;
    sc_in< sc_logic > m_axi_gmem_out_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_DATA_WIDTH> > m_axi_gmem_out_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_DATA_WIDTH/8> > m_axi_gmem_out_WSTRB;
    sc_out< sc_logic > m_axi_gmem_out_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_ID_WIDTH> > m_axi_gmem_out_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_WUSER_WIDTH> > m_axi_gmem_out_WUSER;
    sc_out< sc_logic > m_axi_gmem_out_ARVALID;
    sc_in< sc_logic > m_axi_gmem_out_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_ADDR_WIDTH> > m_axi_gmem_out_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_ID_WIDTH> > m_axi_gmem_out_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_out_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_out_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_out_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_out_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_out_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_out_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_out_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_out_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_OUT_ARUSER_WIDTH> > m_axi_gmem_out_ARUSER;
    sc_in< sc_logic > m_axi_gmem_out_RVALID;
    sc_out< sc_logic > m_axi_gmem_out_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_OUT_DATA_WIDTH> > m_axi_gmem_out_RDATA;
    sc_in< sc_logic > m_axi_gmem_out_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_OUT_ID_WIDTH> > m_axi_gmem_out_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_OUT_RUSER_WIDTH> > m_axi_gmem_out_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_out_RRESP;
    sc_in< sc_logic > m_axi_gmem_out_BVALID;
    sc_out< sc_logic > m_axi_gmem_out_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_out_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_OUT_ID_WIDTH> > m_axi_gmem_out_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_OUT_BUSER_WIDTH> > m_axi_gmem_out_BUSER;
    sc_in< sc_lv<64> > fifo_in_0_V_TDATA;
    sc_in< sc_logic > fifo_in_0_V_TVALID;
    sc_out< sc_logic > fifo_in_0_V_TREADY;
    sc_in< sc_lv<64> > fifo_in_1_V_TDATA;
    sc_in< sc_logic > fifo_in_1_V_TVALID;
    sc_out< sc_logic > fifo_in_1_V_TREADY;
    sc_in< sc_lv<64> > fifo_in_2_V_TDATA;
    sc_in< sc_logic > fifo_in_2_V_TVALID;
    sc_out< sc_logic > fifo_in_2_V_TREADY;
    sc_in< sc_lv<64> > fifo_in_3_V_TDATA;
    sc_in< sc_logic > fifo_in_3_V_TVALID;
    sc_out< sc_logic > fifo_in_3_V_TREADY;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const8;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<16> > ap_var_for_const7;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<8> > ap_var_for_const10;
    sc_signal< sc_lv<8> > ap_var_for_const11;


    // Module declarations
    circ_buff_write_many128(sc_module_name name);
    SC_HAS_PROCESS(circ_buff_write_many128);

    ~circ_buff_write_many128();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    circ_buff_write_many128_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* circ_buff_write_many128_control_s_axi_U;
    circ_buff_write_many128_gmem_out_m_axi<0,128,32,5,16,16,16,16,C_M_AXI_GMEM_OUT_ID_WIDTH,C_M_AXI_GMEM_OUT_ADDR_WIDTH,C_M_AXI_GMEM_OUT_DATA_WIDTH,C_M_AXI_GMEM_OUT_AWUSER_WIDTH,C_M_AXI_GMEM_OUT_ARUSER_WIDTH,C_M_AXI_GMEM_OUT_WUSER_WIDTH,C_M_AXI_GMEM_OUT_RUSER_WIDTH,C_M_AXI_GMEM_OUT_BUSER_WIDTH,C_M_AXI_GMEM_OUT_USER_VALUE,C_M_AXI_GMEM_OUT_PROT_VALUE,C_M_AXI_GMEM_OUT_CACHE_VALUE>* circ_buff_write_many128_gmem_out_m_axi_U;
    circ_buff_write_many128_data_V* data_V_U;
    circ_buff_write_many128_mux_42_8_1_1<1,1,8,8,8,8,2,8>* circ_buff_write_many128_mux_42_8_1_1_U1;
    circ_buff_write_many128_mux_42_8_1_1<1,1,8,8,8,8,2,8>* circ_buff_write_many128_mux_42_8_1_1_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<27> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > output_V;
    sc_signal< sc_lv<8> > reset;
    sc_signal< sc_lv<64> > debug_register;
    sc_signal< sc_lv<2> > useable_words_address0;
    sc_signal< sc_logic > useable_words_ce0;
    sc_signal< sc_lv<8> > useable_words_q0;
    sc_signal< sc_lv<1> > first;
    sc_signal< sc_lv<16> > head_3;
    sc_signal< sc_lv<16> > head_0;
    sc_signal< sc_lv<16> > head_1;
    sc_signal< sc_lv<16> > head_2;
    sc_signal< sc_lv<8> > local_words_0;
    sc_signal< sc_lv<8> > local_words_1;
    sc_signal< sc_lv<8> > local_words_2;
    sc_signal< sc_lv<8> > local_words_3;
    sc_signal< sc_logic > gmem_out_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > gmem_out_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > gmem_out_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > tmp_16_reg_1215;
    sc_signal< sc_logic > gmem_out_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<1> > tmp_16_reg_1215_pp1_iter1_reg;
    sc_signal< sc_logic > gmem_out_blk_n_B;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter7;
    sc_signal< sc_lv<1> > tmp_16_reg_1215_pp1_iter6_reg;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_lv<1> > or_cond_reg_1178;
    sc_signal< sc_logic > fifo_in_0_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<2> > tmp_13_reg_1117;
    sc_signal< sc_lv<1> > tmp_14_fu_858_p2;
    sc_signal< sc_logic > fifo_in_1_V_TDATA_blk_n;
    sc_signal< sc_logic > fifo_in_2_V_TDATA_blk_n;
    sc_signal< sc_logic > fifo_in_3_V_TDATA_blk_n;
    sc_signal< sc_logic > gmem_out_AWVALID;
    sc_signal< sc_logic > gmem_out_AWREADY;
    sc_signal< sc_lv<32> > gmem_out_AWADDR;
    sc_signal< sc_logic > gmem_out_WVALID;
    sc_signal< sc_logic > gmem_out_WREADY;
    sc_signal< sc_lv<128> > gmem_out_WDATA;
    sc_signal< sc_logic > gmem_out_ARVALID;
    sc_signal< sc_logic > gmem_out_ARREADY;
    sc_signal< sc_lv<32> > gmem_out_ARADDR;
    sc_signal< sc_logic > gmem_out_RVALID;
    sc_signal< sc_logic > gmem_out_RREADY;
    sc_signal< sc_lv<128> > gmem_out_RDATA;
    sc_signal< sc_logic > gmem_out_RLAST;
    sc_signal< sc_lv<1> > gmem_out_RID;
    sc_signal< sc_lv<1> > gmem_out_RUSER;
    sc_signal< sc_lv<2> > gmem_out_RRESP;
    sc_signal< sc_logic > gmem_out_BVALID;
    sc_signal< sc_logic > gmem_out_BREADY;
    sc_signal< sc_lv<2> > gmem_out_BRESP;
    sc_signal< sc_lv<1> > gmem_out_BID;
    sc_signal< sc_lv<1> > gmem_out_BUSER;
    sc_signal< sc_lv<16> > val_assign_1_reg_439;
    sc_signal< sc_lv<15> > h2_reg_449;
    sc_signal< sc_lv<29> > tmp_27_cast_fu_506_p1;
    sc_signal< sc_lv<29> > tmp_27_cast_reg_1078;
    sc_signal< sc_lv<1> > first_load_load_fu_510_p1;
    sc_signal< sc_lv<1> > first_load_reg_1085;
    sc_signal< sc_lv<3> > i_1_fu_520_p2;
    sc_signal< sc_lv<3> > i_1_reg_1092;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_1_fu_514_p2;
    sc_signal< sc_lv<2> > tmp_3_fu_531_p1;
    sc_signal< sc_lv<2> > tmp_3_reg_1102;
    sc_signal< sc_lv<3> > stride_1_fu_571_p2;
    sc_signal< sc_lv<3> > stride_1_reg_1112;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > tmp_13_fu_577_p1;
    sc_signal< sc_lv<1> > exitcond1_fu_565_p2;
    sc_signal< sc_lv<11> > idx_fu_581_p5;
    sc_signal< sc_lv<11> > idx_reg_1125;
    sc_signal< sc_lv<12> > idx_cast_fu_593_p1;
    sc_signal< sc_lv<12> > idx_cast_reg_1130;
    sc_signal< sc_lv<29> > output_V2_sum_fu_607_p2;
    sc_signal< sc_lv<29> > output_V2_sum_reg_1135;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_out_ARREADY;
    sc_signal< sc_lv<16> > sel_tmp3_i_fu_652_p3;
    sc_signal< sc_lv<16> > sel_tmp3_i_reg_1146;
    sc_signal< sc_lv<1> > sel_tmp4_i_fu_660_p2;
    sc_signal< sc_lv<1> > sel_tmp4_i_reg_1151;
    sc_signal< sc_lv<16> > stream_tail_fu_665_p1;
    sc_signal< sc_lv<16> > stream_tail_reg_1156;
    sc_signal< sc_lv<17> > idx_cast5_fu_669_p1;
    sc_signal< sc_lv<17> > idx_cast5_reg_1163;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<16> > stream_head_fu_676_p3;
    sc_signal< sc_lv<16> > stream_head_reg_1168;
    sc_signal< sc_lv<8> > words_fu_698_p6;
    sc_signal< sc_lv<8> > words_reg_1173;
    sc_signal< sc_lv<1> > or_cond_fu_757_p2;
    sc_signal< sc_lv<16> > bytes_to_write_fu_789_p2;
    sc_signal< sc_lv<16> > bytes_to_write_reg_1182;
    sc_signal< sc_lv<1> > tmp_11_fu_799_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<15> > h_1_fu_804_p2;
    sc_signal< sc_lv<15> > h_1_reg_1192;
    sc_signal< sc_lv<128> > part_V_fu_850_p1;
    sc_signal< sc_lv<1> > ap_phi_mux_empty_n_phi_fu_379_p8;
    sc_signal< sc_lv<128> > part_V_1_fu_899_p2;
    sc_signal< bool > ap_predicate_op186_read_state15;
    sc_signal< bool > ap_predicate_op188_read_state15;
    sc_signal< bool > ap_predicate_op190_read_state15;
    sc_signal< bool > ap_predicate_op192_read_state15;
    sc_signal< bool > ap_block_state15;
    sc_signal< sc_lv<4> > word_V_fu_905_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_920_p2;
    sc_signal< bool > ap_block_state17_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state18_pp1_stage0_iter1;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_out_AWREADY;
    sc_signal< bool > ap_block_state18_io;
    sc_signal< bool > ap_block_state19_pp1_stage0_iter2;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_out_WREADY;
    sc_signal< bool > ap_block_state19_io;
    sc_signal< bool > ap_block_state20_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state21_pp1_stage0_iter4;
    sc_signal< bool > ap_block_state22_pp1_stage0_iter5;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter6;
    sc_signal< bool > ap_block_state24_pp1_stage0_iter7;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > tmp_16_reg_1215_pp1_iter2_reg;
    sc_signal< sc_lv<1> > tmp_16_reg_1215_pp1_iter3_reg;
    sc_signal< sc_lv<1> > tmp_16_reg_1215_pp1_iter4_reg;
    sc_signal< sc_lv<1> > tmp_16_reg_1215_pp1_iter5_reg;
    sc_signal< sc_lv<15> > h_2_fu_926_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<29> > output_V2_sum4_fu_950_p2;
    sc_signal< sc_lv<29> > output_V2_sum4_reg_1229;
    sc_signal< sc_lv<16> > stream_head_2_cast_fu_965_p1;
    sc_signal< sc_lv<16> > stream_head_2_cast_reg_1234;
    sc_signal< sc_lv<128> > data_V_q0;
    sc_signal< sc_lv<128> > data_V_load_reg_1239;
    sc_signal< sc_lv<29> > output_V2_sum3_fu_988_p2;
    sc_signal< sc_lv<29> > output_V2_sum3_reg_1250;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<3> > i_2_fu_1038_p2;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state17;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter6;
    sc_signal< sc_lv<9> > data_V_address0;
    sc_signal< sc_logic > data_V_ce0;
    sc_signal< sc_logic > data_V_we0;
    sc_signal< sc_lv<3> > i_reg_316;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > first_flag_reg_327;
    sc_signal< sc_lv<3> > stride_reg_340;
    sc_signal< bool > ap_block_state32;
    sc_signal< sc_lv<1> > tmp_4_fu_535_p2;
    sc_signal< sc_lv<15> > h_reg_351;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > ap_phi_mux_low_phi_fu_366_p8;
    sc_signal< sc_lv<16> > bytes_to_write_2_fu_794_p1;
    sc_signal< sc_lv<16> > bytes_to_write_1_reg_390;
    sc_signal< sc_lv<128> > p_s_reg_400;
    sc_signal< sc_lv<4> > t_V_reg_411;
    sc_signal< sc_lv<64> > ap_phi_mux_tmp_161_phi_fu_425_p8;
    sc_signal< sc_lv<16> > ap_phi_mux_val_assign_1_phi_fu_442_p4;
    sc_signal< sc_lv<3> > i1_reg_460;
    sc_signal< sc_lv<1> > exitcond_fu_1032_p2;
    sc_signal< sc_lv<1> > ap_phi_mux_first_flag_1_phi_fu_475_p4;
    sc_signal< sc_lv<1> > first_flag_1_reg_471;
    sc_signal< sc_lv<1> > first_new_1_reg_483;
    sc_signal< sc_lv<64> > tmp_2_fu_526_p1;
    sc_signal< sc_lv<64> > tmp_17_fu_911_p1;
    sc_signal< sc_lv<64> > tmp_20_fu_945_p1;
    sc_signal< sc_lv<64> > output_V2_sum_cast_fu_612_p1;
    sc_signal< sc_lv<64> > output_V2_sum4_cast_fu_969_p1;
    sc_signal< sc_lv<64> > output_V2_sum3_cast_fu_993_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_out_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_out_AWREADY;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_out_WREADY;
    sc_signal< sc_lv<128> > p_1_fu_1003_p1;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<2> > tmp_6_fu_1044_p1;
    sc_signal< sc_lv<28> > tmp_fu_496_p4;
    sc_signal< sc_lv<12> > tmp_s_fu_597_p2;
    sc_signal< sc_lv<29> > tmp_3_cast_fu_603_p1;
    sc_signal< sc_lv<1> > sel_tmp_i_fu_634_p2;
    sc_signal< sc_lv<1> > sel_tmp2_i_fu_647_p2;
    sc_signal< sc_lv<16> > sel_tmp1_i_fu_639_p3;
    sc_signal< sc_lv<17> > tmp_6_cast_fu_711_p1;
    sc_signal< sc_lv<9> > tmp_21_fu_715_p1;
    sc_signal< sc_lv<17> > tmp_8_fu_719_p2;
    sc_signal< sc_lv<18> > tmp_8_cast_fu_731_p1;
    sc_signal< sc_lv<18> > tmp_5_cast_fu_738_p1;
    sc_signal< sc_lv<9> > tmp_8_cast4_fu_725_p2;
    sc_signal< sc_lv<17> > tmp_10_cast_fu_747_p1;
    sc_signal< sc_lv<17> > tmp_5_cast3_fu_735_p1;
    sc_signal< sc_lv<1> > tmp_9_fu_741_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_751_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_763_p2;
    sc_signal< sc_lv<16> > p_neg_fu_769_p2;
    sc_signal< sc_lv<16> > tmp_10_fu_775_p2;
    sc_signal< sc_lv<16> > p_neg150_pn_fu_781_p3;
    sc_signal< sc_lv<8> > tmp_19_cast_fu_854_p1;
    sc_signal< sc_lv<32> > hi_fu_863_p1;
    sc_signal< sc_lv<2> > op2_assign_fu_875_p5;
    sc_signal< sc_lv<8> > op2_assign_fu_875_p6;
    sc_signal< sc_lv<128> > hi_p_V_fu_867_p1;
    sc_signal< sc_lv<128> > tmp_24_fu_889_p1;
    sc_signal< sc_lv<128> > r_V_fu_893_p2;
    sc_signal< sc_lv<16> > h2_cast_fu_916_p1;
    sc_signal< sc_lv<17> > tmp_28_cast_fu_932_p1;
    sc_signal< sc_lv<17> > tmp_19_fu_936_p2;
    sc_signal< sc_lv<29> > tmp_21_cast_fu_941_p1;
    sc_signal< sc_lv<9> > tmp_29_fu_955_p1;
    sc_signal< sc_lv<9> > stream_head_1_fu_959_p2;
    sc_signal< sc_lv<12> > tmp_22_fu_979_p2;
    sc_signal< sc_lv<29> > tmp_25_cast_fu_984_p1;
    sc_signal< sc_lv<27> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_685;
    sc_signal< bool > ap_condition_695;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<27> ap_ST_fsm_state1;
    static const sc_lv<27> ap_ST_fsm_state2;
    static const sc_lv<27> ap_ST_fsm_state3;
    static const sc_lv<27> ap_ST_fsm_state4;
    static const sc_lv<27> ap_ST_fsm_state5;
    static const sc_lv<27> ap_ST_fsm_state6;
    static const sc_lv<27> ap_ST_fsm_state7;
    static const sc_lv<27> ap_ST_fsm_state8;
    static const sc_lv<27> ap_ST_fsm_state9;
    static const sc_lv<27> ap_ST_fsm_state10;
    static const sc_lv<27> ap_ST_fsm_state11;
    static const sc_lv<27> ap_ST_fsm_state12;
    static const sc_lv<27> ap_ST_fsm_state13;
    static const sc_lv<27> ap_ST_fsm_state14;
    static const sc_lv<27> ap_ST_fsm_state15;
    static const sc_lv<27> ap_ST_fsm_state16;
    static const sc_lv<27> ap_ST_fsm_pp1_stage0;
    static const sc_lv<27> ap_ST_fsm_state25;
    static const sc_lv<27> ap_ST_fsm_state26;
    static const sc_lv<27> ap_ST_fsm_state27;
    static const sc_lv<27> ap_ST_fsm_state28;
    static const sc_lv<27> ap_ST_fsm_state29;
    static const sc_lv<27> ap_ST_fsm_state30;
    static const sc_lv<27> ap_ST_fsm_state31;
    static const sc_lv<27> ap_ST_fsm_state32;
    static const sc_lv<27> ap_ST_fsm_state33;
    static const sc_lv<27> ap_ST_fsm_state34;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_OUT_USER_VALUE;
    static const int C_M_AXI_GMEM_OUT_PROT_VALUE;
    static const int C_M_AXI_GMEM_OUT_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<12> ap_const_lv12_200;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<16> ap_const_lv16_1FF;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<8> ap_const_lv8_20;
    static const sc_lv<8> ap_const_lv8_40;
    static const sc_lv<8> ap_const_lv8_60;
    static const sc_lv<12> ap_const_lv12_201;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state15();
    void thread_ap_block_state17_pp1_stage0_iter0();
    void thread_ap_block_state18_io();
    void thread_ap_block_state18_pp1_stage0_iter1();
    void thread_ap_block_state19_io();
    void thread_ap_block_state19_pp1_stage0_iter2();
    void thread_ap_block_state20_pp1_stage0_iter3();
    void thread_ap_block_state21_pp1_stage0_iter4();
    void thread_ap_block_state22_pp1_stage0_iter5();
    void thread_ap_block_state23_pp1_stage0_iter6();
    void thread_ap_block_state24_pp1_stage0_iter7();
    void thread_ap_block_state32();
    void thread_ap_condition_685();
    void thread_ap_condition_695();
    void thread_ap_condition_pp1_exit_iter0_state17();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_empty_n_phi_fu_379_p8();
    void thread_ap_phi_mux_first_flag_1_phi_fu_475_p4();
    void thread_ap_phi_mux_low_phi_fu_366_p8();
    void thread_ap_phi_mux_tmp_161_phi_fu_425_p8();
    void thread_ap_phi_mux_val_assign_1_phi_fu_442_p4();
    void thread_ap_predicate_op186_read_state15();
    void thread_ap_predicate_op188_read_state15();
    void thread_ap_predicate_op190_read_state15();
    void thread_ap_predicate_op192_read_state15();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_gmem_out_ARREADY();
    void thread_ap_sig_ioackin_gmem_out_AWREADY();
    void thread_ap_sig_ioackin_gmem_out_WREADY();
    void thread_bytes_to_write_2_fu_794_p1();
    void thread_bytes_to_write_fu_789_p2();
    void thread_data_V_address0();
    void thread_data_V_ce0();
    void thread_data_V_we0();
    void thread_exitcond1_fu_565_p2();
    void thread_exitcond_fu_1032_p2();
    void thread_fifo_in_0_V_TDATA_blk_n();
    void thread_fifo_in_0_V_TREADY();
    void thread_fifo_in_1_V_TDATA_blk_n();
    void thread_fifo_in_1_V_TREADY();
    void thread_fifo_in_2_V_TDATA_blk_n();
    void thread_fifo_in_2_V_TREADY();
    void thread_fifo_in_3_V_TDATA_blk_n();
    void thread_fifo_in_3_V_TREADY();
    void thread_first_load_load_fu_510_p1();
    void thread_gmem_out_ARADDR();
    void thread_gmem_out_ARVALID();
    void thread_gmem_out_AWADDR();
    void thread_gmem_out_AWVALID();
    void thread_gmem_out_BREADY();
    void thread_gmem_out_RREADY();
    void thread_gmem_out_WDATA();
    void thread_gmem_out_WVALID();
    void thread_gmem_out_blk_n_AR();
    void thread_gmem_out_blk_n_AW();
    void thread_gmem_out_blk_n_B();
    void thread_gmem_out_blk_n_R();
    void thread_gmem_out_blk_n_W();
    void thread_h2_cast_fu_916_p1();
    void thread_h_1_fu_804_p2();
    void thread_h_2_fu_926_p2();
    void thread_hi_fu_863_p1();
    void thread_hi_p_V_fu_867_p1();
    void thread_i_1_fu_520_p2();
    void thread_i_2_fu_1038_p2();
    void thread_idx_cast5_fu_669_p1();
    void thread_idx_cast_fu_593_p1();
    void thread_idx_fu_581_p5();
    void thread_op2_assign_fu_875_p5();
    void thread_or_cond_fu_757_p2();
    void thread_output_V2_sum3_cast_fu_993_p1();
    void thread_output_V2_sum3_fu_988_p2();
    void thread_output_V2_sum4_cast_fu_969_p1();
    void thread_output_V2_sum4_fu_950_p2();
    void thread_output_V2_sum_cast_fu_612_p1();
    void thread_output_V2_sum_fu_607_p2();
    void thread_p_1_fu_1003_p1();
    void thread_p_neg150_pn_fu_781_p3();
    void thread_p_neg_fu_769_p2();
    void thread_part_V_1_fu_899_p2();
    void thread_part_V_fu_850_p1();
    void thread_r_V_fu_893_p2();
    void thread_sel_tmp1_i_fu_639_p3();
    void thread_sel_tmp2_i_fu_647_p2();
    void thread_sel_tmp3_i_fu_652_p3();
    void thread_sel_tmp4_i_fu_660_p2();
    void thread_sel_tmp_i_fu_634_p2();
    void thread_stream_head_1_fu_959_p2();
    void thread_stream_head_2_cast_fu_965_p1();
    void thread_stream_head_fu_676_p3();
    void thread_stream_tail_fu_665_p1();
    void thread_stride_1_fu_571_p2();
    void thread_tmp_10_cast_fu_747_p1();
    void thread_tmp_10_fu_775_p2();
    void thread_tmp_11_fu_799_p2();
    void thread_tmp_13_fu_577_p1();
    void thread_tmp_14_fu_858_p2();
    void thread_tmp_16_fu_920_p2();
    void thread_tmp_17_fu_911_p1();
    void thread_tmp_19_cast_fu_854_p1();
    void thread_tmp_19_fu_936_p2();
    void thread_tmp_1_fu_514_p2();
    void thread_tmp_20_fu_945_p1();
    void thread_tmp_21_cast_fu_941_p1();
    void thread_tmp_21_fu_715_p1();
    void thread_tmp_22_fu_979_p2();
    void thread_tmp_24_fu_889_p1();
    void thread_tmp_25_cast_fu_984_p1();
    void thread_tmp_27_cast_fu_506_p1();
    void thread_tmp_28_cast_fu_932_p1();
    void thread_tmp_29_fu_955_p1();
    void thread_tmp_2_fu_526_p1();
    void thread_tmp_3_cast_fu_603_p1();
    void thread_tmp_3_fu_531_p1();
    void thread_tmp_4_fu_535_p2();
    void thread_tmp_5_cast3_fu_735_p1();
    void thread_tmp_5_cast_fu_738_p1();
    void thread_tmp_5_fu_751_p2();
    void thread_tmp_6_cast_fu_711_p1();
    void thread_tmp_6_fu_1044_p1();
    void thread_tmp_7_fu_763_p2();
    void thread_tmp_8_cast4_fu_725_p2();
    void thread_tmp_8_cast_fu_731_p1();
    void thread_tmp_8_fu_719_p2();
    void thread_tmp_9_fu_741_p2();
    void thread_tmp_fu_496_p4();
    void thread_tmp_s_fu_597_p2();
    void thread_useable_words_address0();
    void thread_useable_words_ce0();
    void thread_word_V_fu_905_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
